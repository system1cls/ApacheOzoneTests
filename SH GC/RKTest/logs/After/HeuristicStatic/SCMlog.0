[0.008s][info][gc] Heuristics ergonomically sets -XX:+ExplicitGCInvokesConcurrent
[0.008s][info][gc] Heuristics ergonomically sets -XX:+ShenandoahImplicitGCInvokesConcurrent
[0.009s][info][gc] Using Shenandoah
[0.010s][info][gc,ergo] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[0.011s][info][gc,init] Version: 21.0.7+6-Ubuntu-0ubuntu122.04 (release)
[0.011s][info][gc,init] CPUs: 4 total, 4 available
[0.011s][info][gc,init] Memory: 7937M
[0.011s][info][gc,init] Large Page Support: Disabled
[0.011s][info][gc,init] NUMA Support: Disabled
[0.011s][info][gc,init] Compressed Oops: Enabled (32-bit)
[0.011s][info][gc,init] Heap Min Capacity: 6656K
[0.011s][info][gc,init] Heap Initial Capacity: 127488K
[0.011s][info][gc,init] Heap Max Capacity: 2032128K
[0.011s][info][gc,init] Pre-touch: Disabled
[0.011s][info][gc,init] Mode: Snapshot-At-The-Beginning (SATB)
[0.011s][info][gc,init] Heuristics: Static
[0.011s][info][gc,init] Heap Region Count: 3969
[0.011s][info][gc,init] Heap Region Size: 512K
[0.011s][info][gc,init] TLAB Size Max: 512K
[0.011s][info][gc,init] Humongous Object Threshold: 512K
[0.011s][info][gc,init] Parallel Workers: 8
[0.011s][info][gc,init] Concurrent Workers: 2
[0.021s][info][gc,metaspace] CDS archive(s) mapped at: [0x00007f05df000000-0x00007f05dfc97000-0x00007f05dfc97000), size 13201408, SharedBaseAddress: 0x00007f05df000000, ArchiveRelocationMode: 1.
[0.021s][info][gc,metaspace] Compressed class space mapped at: 0x00007f05e0000000-0x00007f0620000000, reserved size: 1073741824
[0.021s][info][gc,metaspace] Narrow klass base: 0x00007f05df000000, Narrow klass shift: 0, Narrow klass range: 0x100000000
[1.342s][info][gc          ] Trigger: Metadata GC Threshold
[1.342s][info][gc,ergo     ] Free: 1790M, Max: 512K regular, 1790M humongous, Frag: 0% external, 0% internal; Reserve: 101888K, Max: 512K
[1.342s][info][gc,start    ] GC(0) Concurrent reset
[1.343s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reset
[1.343s][info][gc,ergo     ] GC(0) Pacer for Reset. Non-Taxable: 1984M
[1.343s][info][gc          ] GC(0) Concurrent reset 0.521ms
[1.343s][info][gc,start    ] GC(0) Pause Init Mark (unload classes)
[1.344s][info][gc,task     ] GC(0) Using 8 of 8 workers for init marking
[1.344s][info][gc,ergo     ] GC(0) Pacer for Mark. Expected Live: 198M, Free: 1790M, Non-Taxable: 179M, Alloc Tax Rate: 0.1x
[1.344s][info][gc          ] GC(0) Pause Init Mark (unload classes) 0.656ms
[1.344s][info][gc,start    ] GC(0) Concurrent marking roots
[1.344s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking roots
[1.346s][info][gc          ] GC(0) Concurrent marking roots 2.335ms
[1.346s][info][gc,start    ] GC(0) Concurrent marking (unload classes)
[1.346s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking
[1.361s][info][gc          ] GC(0) Concurrent marking (unload classes) 14.317ms
[1.361s][info][gc,start    ] GC(0) Pause Final Mark (unload classes)
[1.361s][info][gc,task     ] GC(0) Using 8 of 8 workers for final marking
[1.361s][info][gc,ergo     ] GC(0) Collectable Garbage: 81582K (98%), Immediate: 5343K (6%), CSet: 76239K (92%)
[1.361s][info][gc,ergo     ] GC(0) Pacer for Evacuation. Used CSet: 83968K, Free: 1794M, Non-Taxable: 179M, Alloc Tax Rate: 1.1x
[1.361s][info][gc          ] GC(0) Pause Final Mark (unload classes) 0.296ms
[1.361s][info][gc,start    ] GC(0) Concurrent thread roots
[1.361s][info][gc,task     ] GC(0) Using 2 of 8 workers for Concurrent thread roots
[1.367s][info][gc          ] GC(0) Concurrent thread roots 6.067ms
[1.367s][info][gc,start    ] GC(0) Concurrent weak references
[1.367s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak references
[1.368s][info][gc,ref      ] GC(0) Encountered references: Soft: 3955, Weak: 2127, Final: 20, Phantom: 794
[1.368s][info][gc,ref      ] GC(0) Discovered  references: Soft: 0, Weak: 1408, Final: 0, Phantom: 484
[1.368s][info][gc,ref      ] GC(0) Enqueued    references: Soft: 0, Weak: 480, Final: 0, Phantom: 315
[1.368s][info][gc          ] GC(0) Concurrent weak references 0.388ms
[1.368s][info][gc,start    ] GC(0) Concurrent weak roots
[1.368s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak root
[1.371s][info][gc          ] GC(0) Concurrent weak roots 3.546ms
[1.371s][info][gc,start    ] GC(0) Concurrent cleanup
[1.371s][info][gc          ] GC(0) Concurrent cleanup 97M->92M(125M) 0.063ms
[1.371s][info][gc,ergo     ] GC(0) Free: 1793M, Max: 512K regular, 1788M humongous, Frag: 1% external, 0% internal; Reserve: 100864K, Max: 512K
[1.371s][info][gc,start    ] GC(0) Concurrent class unloading
[1.371s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent class unloading
[1.377s][info][gc          ] GC(0) Concurrent class unloading 5.507ms
[1.377s][info][gc,start    ] GC(0) Concurrent strong roots
[1.377s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent strong root
[1.378s][info][gc          ] GC(0) Concurrent strong roots 1.448ms
[1.378s][info][gc,start    ] GC(0) Concurrent evacuation
[1.378s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent evacuation
[1.384s][info][gc          ] GC(0) Concurrent evacuation 5.524ms
[1.384s][info][gc,start    ] GC(0) Pause Init Update Refs
[1.384s][info][gc,ergo     ] GC(0) Pacer for Update Refs. Used: 100M, Free: 1793M, Non-Taxable: 179M, Alloc Tax Rate: 1.1x
[1.384s][info][gc          ] GC(0) Pause Init Update Refs 0.042ms
[1.384s][info][gc,start    ] GC(0) Concurrent update references
[1.384s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reference update
[1.392s][info][gc          ] GC(0) Concurrent update references 7.750ms
[1.392s][info][gc,start    ] GC(0) Concurrent update thread roots
[1.392s][info][gc          ] GC(0) Concurrent update thread roots 0.304ms
[1.392s][info][gc,start    ] GC(0) Pause Final Update Refs
[1.392s][info][gc,task     ] GC(0) Using 8 of 8 workers for final reference update
[1.392s][info][gc          ] GC(0) Pause Final Update Refs 0.065ms
[1.392s][info][gc,start    ] GC(0) Concurrent cleanup
[1.392s][info][gc          ] GC(0) Concurrent cleanup 100M->18M(133M) 0.075ms
[1.392s][info][gc,ergo     ] Free: 1866M, Max: 512K regular, 1779M humongous, Frag: 5% external, 0% internal; Reserve: 101888K, Max: 512K
[1.392s][info][gc,stats    ] 
[1.392s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[1.393s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[1.393s][info][gc,stats    ] 
[1.393s][info][gc,stats    ] Concurrent Reset                    568 us
[1.393s][info][gc,stats    ] Pause Init Mark (G)                1008 us
[1.393s][info][gc,stats    ] Pause Init Mark (N)                 683 us
[1.393s][info][gc,stats    ]   Update Region States               33 us
[1.393s][info][gc,stats    ] Concurrent Mark Roots              2348 us, parallelism: 1.87x
[1.393s][info][gc,stats    ]   CMR: <total>                     4401 us
[1.393s][info][gc,stats    ]   CMR: Thread Roots                1926 us, workers (us): 1656, 271, ---, ---, ---, ---, ---, ---, 
[1.393s][info][gc,stats    ]   CMR: VM Strong Roots              786 us, workers (us): 540, 246, ---, ---, ---, ---, ---, ---, 
[1.393s][info][gc,stats    ]   CMR: CLDG Roots                  1688 us, workers (us): ---, 1688, ---, ---, ---, ---, ---, ---, 
[1.393s][info][gc,stats    ] Concurrent Marking                14341 us
[1.393s][info][gc,stats    ] Pause Final Mark (G)                424 us
[1.393s][info][gc,stats    ] Pause Final Mark (N)                308 us
[1.393s][info][gc,stats    ]   Finish Mark                       146 us
[1.393s][info][gc,stats    ]   Update Region States               16 us
[1.393s][info][gc,stats    ]   Choose Collection Set              63 us
[1.393s][info][gc,stats    ]   Rebuild Free Set                   16 us
[1.393s][info][gc,stats    ] Concurrent Thread Roots            6093 us, parallelism: 1.97x
[1.393s][info][gc,stats    ]   CTR: <total>                    12006 us
[1.393s][info][gc,stats    ]   CTR: Thread Roots               12006 us, workers (us): 5996, 6010, ---, ---, ---, ---, ---, ---, 
[1.393s][info][gc,stats    ] Concurrent Weak References          397 us, parallelism: 0.91x
[1.393s][info][gc,stats    ]   CWRF: <total>                     363 us
[1.393s][info][gc,stats    ]   CWRF: Weak References             363 us, workers (us):  62, 301, ---, ---, ---, ---, ---, ---, 
[1.393s][info][gc,stats    ] Concurrent Weak Roots              3565 us
[1.393s][info][gc,stats    ]   Roots                            2229 us, parallelism: 1.69x
[1.393s][info][gc,stats    ]     CWR: <total>                   3761 us
[1.393s][info][gc,stats    ]     CWR: Code Cache Roots          1908 us, workers (us): 637, 1270, ---, ---, ---, ---, ---, ---, 
[1.393s][info][gc,stats    ]     CWR: VM Weak Roots             1843 us, workers (us): 920, 923, ---, ---, ---, ---, ---, ---, 
[1.393s][info][gc,stats    ]     CWR: CLDG Roots                  11 us, workers (us):  11, ---, ---, ---, ---, ---, ---, ---, 
[1.393s][info][gc,stats    ]   Rendezvous                       1285 us
[1.393s][info][gc,stats    ] Concurrent Cleanup                   75 us
[1.393s][info][gc,stats    ] Concurrent Class Unloading         5525 us
[1.393s][info][gc,stats    ]   Unlink Stale                     2638 us
[1.393s][info][gc,stats    ]     System Dictionary                40 us
[1.393s][info][gc,stats    ]     Weak Class Links                  0 us
[1.393s][info][gc,stats    ]     Code Roots                     2597 us
[1.393s][info][gc,stats    ]   Rendezvous                        117 us
[1.393s][info][gc,stats    ]   Purge Unlinked                   2734 us
[1.393s][info][gc,stats    ]     Code Roots                     2723 us
[1.393s][info][gc,stats    ]     CLDG                             11 us
[1.393s][info][gc,stats    ]     Exception Caches                  0 us
[1.393s][info][gc,stats    ] Concurrent Strong Roots            1458 us, parallelism: 0.97x
[1.393s][info][gc,stats    ]   CSR: <total>                     1419 us
[1.393s][info][gc,stats    ]   CSR: VM Strong Roots               38 us, workers (us):  32,   6, ---, ---, ---, ---, ---, ---, 
[1.393s][info][gc,stats    ]   CSR: CLDG Roots                  1381 us, workers (us): ---, 1381, ---, ---, ---, ---, ---, ---, 
[1.393s][info][gc,stats    ] Concurrent Evacuation              5546 us
[1.393s][info][gc,stats    ] Pause Init Update Refs (G)          156 us
[1.393s][info][gc,stats    ] Pause Init Update Refs (N)           50 us
[1.393s][info][gc,stats    ]   Manage GCLABs                       4 us
[1.393s][info][gc,stats    ] Concurrent Update Refs             7774 us
[1.393s][info][gc,stats    ] Concurrent Update Thread Roots      313 us
[1.393s][info][gc,stats    ] Pause Final Update Refs (G)         307 us
[1.393s][info][gc,stats    ] Pause Final Update Refs (N)          79 us
[1.393s][info][gc,stats    ]   Update Region States               16 us
[1.393s][info][gc,stats    ]   Trash Collection Set                4 us
[1.393s][info][gc,stats    ]   Rebuild Free Set                   16 us
[1.393s][info][gc,stats    ] Concurrent Cleanup                   84 us
[1.393s][info][gc,stats    ] 
[1.393s][info][gc,stats    ] Allocation pacing accrued:
[1.393s][info][gc,stats    ]       0 of  1383 ms (  0.0%): <total>
[1.393s][info][gc,stats    ]       0 of  1383 ms (  0.0%): <average total>
[1.393s][info][gc,stats    ] 
[1.393s][info][gc,metaspace] Metaspace: 21211K(21568K)->21451K(21824K) NonClass: 18876K(19072K)->19077K(19264K) Class: 2335K(2496K)->2373K(2560K)
[1.393s][info][gc,ergo     ] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[7.746s][info][gc          ] Cancelling GC: Stopping VM
[7.746s][info][gc,heap,exit] Heap
[7.746s][info][gc,heap,exit] Shenandoah Heap
[7.746s][info][gc,heap,exit]  1984M max, 1984M soft max, 133M committed, 37930K used
[7.746s][info][gc,heap,exit]  3969 x 512K regions
[7.746s][info][gc,heap,exit] Status: cancelled
[7.746s][info][gc,heap,exit] Reserved region:
[7.746s][info][gc,heap,exit]  - [0x0000000083f80000, 0x0000000100000000) 
[7.746s][info][gc,heap,exit] Collection set:
[7.746s][info][gc,heap,exit]  - map (vanilla): 0x000000000001107f
[7.746s][info][gc,heap,exit]  - map (biased):  0x0000000000010000
[7.746s][info][gc,heap,exit] 
[7.746s][info][gc,heap,exit]  Metaspace       used 25411K, committed 25792K, reserved 1114112K
[7.746s][info][gc,heap,exit]   class space    used 2923K, committed 3136K, reserved 1048576K
[7.746s][info][gc,stats    ] 
[7.746s][info][gc,stats    ] GC STATISTICS:
[7.746s][info][gc,stats    ]   "(G)" (gross) pauses include VM time: time to notify and block threads, do the pre-
[7.746s][info][gc,stats    ]         and post-safepoint housekeeping. Use -Xlog:safepoint+stats to dissect.
[7.746s][info][gc,stats    ]   "(N)" (net) pauses are the times spent in the actual GC code.
[7.746s][info][gc,stats    ]   "a" is average time for each phase, look at levels to see if average makes sense.
[7.746s][info][gc,stats    ]   "lvls" are quantiles: 0% (minimum), 25%, 50% (median), 75%, 100% (maximum).
[7.747s][info][gc,stats    ] 
[7.747s][info][gc,stats    ]   All times are wall-clock times, except per-root-class counters, that are sum over
[7.747s][info][gc,stats    ]   all workers. Dividing the <total> over the root stage time estimates parallelism.
[7.747s][info][gc,stats    ] 
[7.747s][info][gc,stats    ]   Pacing delays are measured from entering the pacing code till exiting it. Therefore,
[7.747s][info][gc,stats    ]   observed pacing delays may be higher than the threshold when paced thread spent more
[7.747s][info][gc,stats    ]   time in the pacing code. It usually happens when thread is de-scheduled while paced,
[7.747s][info][gc,stats    ]   OS takes longer to unblock the thread, or JVM experiences an STW pause.
[7.747s][info][gc,stats    ] 
[7.747s][info][gc,stats    ]   Higher delay would prevent application outpacing the GC, but it will hide the GC latencies
[7.747s][info][gc,stats    ]   from the STW pause times. Pacing affects the individual threads, and so it would also be
[7.747s][info][gc,stats    ]   invisible to the usual profiling tools, but would add up to end-to-end application latency.
[7.747s][info][gc,stats    ]   Raise max pacing delay with care.
[7.747s][info][gc,stats    ] 
[7.747s][info][gc,stats    ] Concurrent Reset               =    0.001 s (a =      568 us) (n =     1) (lvls, us =      566,      566,      566,      566,      568)
[7.747s][info][gc,stats    ] Pause Init Mark (G)            =    0.001 s (a =     1008 us) (n =     1) (lvls, us =      996,      996,      996,      996,     1008)
[7.747s][info][gc,stats    ] Pause Init Mark (N)            =    0.001 s (a =      683 us) (n =     1) (lvls, us =      682,      682,      682,      682,      683)
[7.747s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       33 us) (n =     1) (lvls, us =       33,       33,       33,       33,       33)
[7.747s][info][gc,stats    ] Concurrent Mark Roots          =    0.002 s (a =     2348 us) (n =     1) (lvls, us =     2344,     2344,     2344,     2344,     2348)
[7.747s][info][gc,stats    ]   CMR: <total>                 =    0.004 s (a =     4401 us) (n =     1) (lvls, us =     4395,     4395,     4395,     4395,     4401)
[7.747s][info][gc,stats    ]   CMR: Thread Roots            =    0.002 s (a =     1926 us) (n =     1) (lvls, us =     1914,     1914,     1914,     1914,     1926)
[7.747s][info][gc,stats    ]   CMR: VM Strong Roots         =    0.001 s (a =      786 us) (n =     1) (lvls, us =      785,      785,      785,      785,      786)
[7.747s][info][gc,stats    ]   CMR: CLDG Roots              =    0.002 s (a =     1688 us) (n =     1) (lvls, us =     1680,     1680,     1680,     1680,     1688)
[7.747s][info][gc,stats    ] Concurrent Marking             =    0.014 s (a =    14341 us) (n =     1) (lvls, us =    14258,    14258,    14258,    14258,    14341)
[7.747s][info][gc,stats    ] Pause Final Mark (G)           =    0.000 s (a =      424 us) (n =     1) (lvls, us =      424,      424,      424,      424,      424)
[7.747s][info][gc,stats    ] Pause Final Mark (N)           =    0.000 s (a =      308 us) (n =     1) (lvls, us =      307,      307,      307,      307,      308)
[7.747s][info][gc,stats    ]   Finish Mark                  =    0.000 s (a =      146 us) (n =     1) (lvls, us =      145,      145,      145,      145,      146)
[7.747s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       16 us) (n =     1) (lvls, us =       16,       16,       16,       16,       16)
[7.747s][info][gc,stats    ]   Choose Collection Set        =    0.000 s (a =       63 us) (n =     1) (lvls, us =       62,       62,       62,       62,       63)
[7.747s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       16 us) (n =     1) (lvls, us =       16,       16,       16,       16,       16)
[7.747s][info][gc,stats    ] Concurrent Thread Roots        =    0.006 s (a =     6093 us) (n =     1) (lvls, us =     6074,     6074,     6074,     6074,     6093)
[7.747s][info][gc,stats    ]   CTR: <total>                 =    0.012 s (a =    12006 us) (n =     1) (lvls, us =    11914,    11914,    11914,    11914,    12006)
[7.747s][info][gc,stats    ]   CTR: Thread Roots            =    0.012 s (a =    12006 us) (n =     1) (lvls, us =    11914,    11914,    11914,    11914,    12006)
[7.747s][info][gc,stats    ] Concurrent Weak References     =    0.000 s (a =      397 us) (n =     1) (lvls, us =      396,      396,      396,      396,      397)
[7.747s][info][gc,stats    ]   CWRF: <total>                =    0.000 s (a =      363 us) (n =     1) (lvls, us =      361,      361,      361,      361,      363)
[7.747s][info][gc,stats    ]   CWRF: Weak References        =    0.000 s (a =      363 us) (n =     1) (lvls, us =      361,      361,      361,      361,      363)
[7.747s][info][gc,stats    ] Concurrent Weak Roots          =    0.004 s (a =     3565 us) (n =     1) (lvls, us =     3555,     3555,     3555,     3555,     3565)
[7.747s][info][gc,stats    ]   Roots                        =    0.002 s (a =     2229 us) (n =     1) (lvls, us =     2227,     2227,     2227,     2227,     2229)
[7.747s][info][gc,stats    ]     CWR: <total>               =    0.004 s (a =     3761 us) (n =     1) (lvls, us =     3750,     3750,     3750,     3750,     3761)
[7.747s][info][gc,stats    ]     CWR: Code Cache Roots      =    0.002 s (a =     1908 us) (n =     1) (lvls, us =     1895,     1895,     1895,     1895,     1908)
[7.747s][info][gc,stats    ]     CWR: VM Weak Roots         =    0.002 s (a =     1843 us) (n =     1) (lvls, us =     1836,     1836,     1836,     1836,     1843)
[7.747s][info][gc,stats    ]     CWR: CLDG Roots            =    0.000 s (a =       11 us) (n =     1) (lvls, us =       10,       10,       10,       10,       11)
[7.747s][info][gc,stats    ]   Rendezvous                   =    0.001 s (a =     1285 us) (n =     1) (lvls, us =     1270,     1270,     1270,     1270,     1285)
[7.747s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =       75 us) (n =     1) (lvls, us =       75,       75,       75,       75,       75)
[7.747s][info][gc,stats    ] Concurrent Class Unloading     =    0.006 s (a =     5525 us) (n =     1) (lvls, us =     5508,     5508,     5508,     5508,     5525)
[7.747s][info][gc,stats    ]   Unlink Stale                 =    0.003 s (a =     2638 us) (n =     1) (lvls, us =     2637,     2637,     2637,     2637,     2638)
[7.747s][info][gc,stats    ]     System Dictionary          =    0.000 s (a =       40 us) (n =     1) (lvls, us =       40,       40,       40,       40,       40)
[7.747s][info][gc,stats    ]     Weak Class Links           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[7.747s][info][gc,stats    ]     Code Roots                 =    0.003 s (a =     2597 us) (n =     1) (lvls, us =     2578,     2578,     2578,     2578,     2597)
[7.747s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =      117 us) (n =     1) (lvls, us =      115,      115,      115,      115,      117)
[7.747s][info][gc,stats    ]   Purge Unlinked               =    0.003 s (a =     2734 us) (n =     1) (lvls, us =     2734,     2734,     2734,     2734,     2734)
[7.747s][info][gc,stats    ]     Code Roots                 =    0.003 s (a =     2723 us) (n =     1) (lvls, us =     2715,     2715,     2715,     2715,     2723)
[7.747s][info][gc,stats    ]     CLDG                       =    0.000 s (a =       11 us) (n =     1) (lvls, us =       11,       11,       11,       11,       11)
[7.747s][info][gc,stats    ]     Exception Caches           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[7.747s][info][gc,stats    ] Concurrent Strong Roots        =    0.001 s (a =     1458 us) (n =     1) (lvls, us =     1445,     1445,     1445,     1445,     1458)
[7.747s][info][gc,stats    ]   CSR: <total>                 =    0.001 s (a =     1419 us) (n =     1) (lvls, us =     1406,     1406,     1406,     1406,     1419)
[7.747s][info][gc,stats    ]   CSR: VM Strong Roots         =    0.000 s (a =       38 us) (n =     1) (lvls, us =       38,       38,       38,       38,       38)
[7.747s][info][gc,stats    ]   CSR: CLDG Roots              =    0.001 s (a =     1381 us) (n =     1) (lvls, us =     1367,     1367,     1367,     1367,     1381)
[7.747s][info][gc,stats    ] Concurrent Evacuation          =    0.006 s (a =     5546 us) (n =     1) (lvls, us =     5527,     5527,     5527,     5527,     5546)
[7.747s][info][gc,stats    ] Pause Init Update Refs (G)     =    0.000 s (a =      156 us) (n =     1) (lvls, us =      154,      154,      154,      154,      156)
[7.747s][info][gc,stats    ] Pause Init Update Refs (N)     =    0.000 s (a =       50 us) (n =     1) (lvls, us =       50,       50,       50,       50,       50)
[7.747s][info][gc,stats    ]   Manage GCLABs                =    0.000 s (a =        4 us) (n =     1) (lvls, us =        4,        4,        4,        4,        4)
[7.747s][info][gc,stats    ] Concurrent Update Refs         =    0.008 s (a =     7774 us) (n =     1) (lvls, us =     7773,     7773,     7773,     7773,     7774)
[7.747s][info][gc,stats    ] Concurrent Update Thread Roots =    0.000 s (a =      313 us) (n =     1) (lvls, us =      312,      312,      312,      312,      313)
[7.747s][info][gc,stats    ] Pause Final Update Refs (G)    =    0.000 s (a =      307 us) (n =     1) (lvls, us =      307,      307,      307,      307,      307)
[7.747s][info][gc,stats    ] Pause Final Update Refs (N)    =    0.000 s (a =       79 us) (n =     1) (lvls, us =       78,       78,       78,       78,       79)
[7.747s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       16 us) (n =     1) (lvls, us =       16,       16,       16,       16,       16)
[7.747s][info][gc,stats    ]   Trash Collection Set         =    0.000 s (a =        4 us) (n =     1) (lvls, us =        4,        4,        4,        4,        4)
[7.747s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       16 us) (n =     1) (lvls, us =       16,       16,       16,       16,       16)
[7.747s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =       84 us) (n =     1) (lvls, us =       84,       84,       84,       84,       84)
[7.747s][info][gc,stats    ] 
[7.747s][info][gc,stats    ] 
[7.748s][info][gc,stats    ] Under allocation pressure, concurrent cycles may cancel, and either continue cycle
[7.748s][info][gc,stats    ] under stop-the-world pause or result in stop-the-world Full GC. Increase heap size,
[7.748s][info][gc,stats    ] tune GC heuristics, set more aggressive pacing delay, or lower allocation rate
[7.748s][info][gc,stats    ] to avoid Degenerated and Full GC cycles.
[7.748s][info][gc,stats    ] 
[7.748s][info][gc,stats    ]     1 successful concurrent GCs
[7.748s][info][gc,stats    ]       0 invoked explicitly
[7.748s][info][gc,stats    ]       0 invoked implicitly
[7.748s][info][gc,stats    ] 
[7.748s][info][gc,stats    ]     0 Degenerated GCs
[7.748s][info][gc,stats    ]       0 caused by allocation failure
[7.748s][info][gc,stats    ]       0 upgraded to Full GC
[7.748s][info][gc,stats    ] 
[7.748s][info][gc,stats    ]     0 Full GCs
[7.748s][info][gc,stats    ]       0 invoked explicitly
[7.748s][info][gc,stats    ]       0 invoked implicitly
[7.748s][info][gc,stats    ]       0 caused by allocation failure
[7.748s][info][gc,stats    ]       0 upgraded from Degenerated GC
[7.748s][info][gc,stats    ] 
[7.748s][info][gc,stats    ] 
