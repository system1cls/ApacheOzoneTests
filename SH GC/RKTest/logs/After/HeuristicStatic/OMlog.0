[0.004s][info][gc] Heuristics ergonomically sets -XX:+ExplicitGCInvokesConcurrent
[0.004s][info][gc] Heuristics ergonomically sets -XX:+ShenandoahImplicitGCInvokesConcurrent
[0.004s][info][gc] Using Shenandoah
[0.005s][info][gc,ergo] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[0.005s][info][gc,init] Version: 21.0.7+6-Ubuntu-0ubuntu122.04 (release)
[0.005s][info][gc,init] CPUs: 4 total, 4 available
[0.005s][info][gc,init] Memory: 7937M
[0.005s][info][gc,init] Large Page Support: Disabled
[0.005s][info][gc,init] NUMA Support: Disabled
[0.005s][info][gc,init] Compressed Oops: Enabled (32-bit)
[0.005s][info][gc,init] Heap Min Capacity: 6656K
[0.005s][info][gc,init] Heap Initial Capacity: 127488K
[0.005s][info][gc,init] Heap Max Capacity: 2032128K
[0.005s][info][gc,init] Pre-touch: Disabled
[0.005s][info][gc,init] Mode: Snapshot-At-The-Beginning (SATB)
[0.005s][info][gc,init] Heuristics: Static
[0.005s][info][gc,init] Heap Region Count: 3969
[0.005s][info][gc,init] Heap Region Size: 512K
[0.005s][info][gc,init] TLAB Size Max: 512K
[0.005s][info][gc,init] Humongous Object Threshold: 512K
[0.005s][info][gc,init] Parallel Workers: 8
[0.005s][info][gc,init] Concurrent Workers: 2
[0.012s][info][gc,metaspace] CDS archive(s) mapped at: [0x00007f6353000000-0x00007f6353c97000-0x00007f6353c97000), size 13201408, SharedBaseAddress: 0x00007f6353000000, ArchiveRelocationMode: 1.
[0.012s][info][gc,metaspace] Compressed class space mapped at: 0x00007f6354000000-0x00007f6394000000, reserved size: 1073741824
[0.012s][info][gc,metaspace] Narrow klass base: 0x00007f6353000000, Narrow klass shift: 0, Narrow klass range: 0x100000000
[1.768s][info][gc          ] Trigger: Metadata GC Threshold
[1.768s][info][gc,ergo     ] Free: 1746M, Max: 512K regular, 1746M humongous, Frag: 0% external, 0% internal; Reserve: 101888K, Max: 512K
[1.769s][info][gc,start    ] GC(0) Concurrent reset
[1.769s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reset
[1.769s][info][gc,ergo     ] GC(0) Pacer for Reset. Non-Taxable: 1984M
[1.769s][info][gc          ] GC(0) Concurrent reset 0.395ms
[1.769s][info][gc,start    ] GC(0) Pause Init Mark (unload classes)
[1.769s][info][gc,task     ] GC(0) Using 8 of 8 workers for init marking
[1.769s][info][gc,ergo     ] GC(0) Pacer for Mark. Expected Live: 198M, Free: 1746M, Non-Taxable: 174M, Alloc Tax Rate: 0.1x
[1.769s][info][gc          ] GC(0) Pause Init Mark (unload classes) 0.378ms
[1.769s][info][gc,start    ] GC(0) Concurrent marking roots
[1.769s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking roots
[1.771s][info][gc          ] GC(0) Concurrent marking roots 1.383ms
[1.771s][info][gc,start    ] GC(0) Concurrent marking (unload classes)
[1.771s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking
[1.811s][info][gc          ] GC(0) Concurrent marking (unload classes) 40.622ms
[1.812s][info][gc,start    ] GC(0) Pause Final Mark (unload classes)
[1.812s][info][gc,task     ] GC(0) Using 8 of 8 workers for final marking
[1.822s][info][gc,ergo     ] GC(0) Collectable Garbage: 73047K (98%), Immediate: 4335K (5%), CSet: 68712K (92%)
[1.822s][info][gc,ergo     ] GC(0) Pacer for Evacuation. Used CSet: 76800K, Free: 1747M, Non-Taxable: 174M, Alloc Tax Rate: 1.1x
[1.822s][info][gc          ] GC(0) Pause Final Mark (unload classes) 10.612ms
[1.822s][info][gc,start    ] GC(0) Concurrent thread roots
[1.822s][info][gc,task     ] GC(0) Using 2 of 8 workers for Concurrent thread roots
[1.823s][info][gc          ] GC(0) Concurrent thread roots 0.318ms
[1.823s][info][gc,start    ] GC(0) Concurrent weak references
[1.823s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak references
[1.823s][info][gc,ref      ] GC(0) Encountered references: Soft: 3955, Weak: 2094, Final: 4, Phantom: 820
[1.823s][info][gc,ref      ] GC(0) Discovered  references: Soft: 0, Weak: 589, Final: 0, Phantom: 582
[1.823s][info][gc,ref      ] GC(0) Enqueued    references: Soft: 0, Weak: 498, Final: 0, Phantom: 230
[1.823s][info][gc          ] GC(0) Concurrent weak references 0.292ms
[1.823s][info][gc,start    ] GC(0) Concurrent weak roots
[1.823s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak root
[1.828s][info][gc          ] GC(0) Concurrent weak roots 4.791ms
[1.828s][info][gc,start    ] GC(0) Concurrent cleanup
[1.828s][info][gc          ] GC(0) Concurrent cleanup 141M->137M(144M) 0.093ms
[1.828s][info][gc,ergo     ] GC(0) Free: 1746M, Max: 512K regular, 1741M humongous, Frag: 1% external, 0% internal; Reserve: 101359K, Max: 512K
[1.828s][info][gc,start    ] GC(0) Concurrent class unloading
[1.828s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent class unloading
[1.839s][info][gc          ] GC(0) Concurrent class unloading 11.483ms
[1.839s][info][gc,start    ] GC(0) Concurrent strong roots
[1.839s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent strong root
[1.841s][info][gc          ] GC(0) Concurrent strong roots 1.468ms
[1.841s][info][gc,start    ] GC(0) Concurrent evacuation
[1.841s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent evacuation
[1.848s][info][gc          ] GC(0) Concurrent evacuation 6.528ms
[1.848s][info][gc,start    ] GC(0) Pause Init Update Refs
[1.848s][info][gc,ergo     ] GC(0) Pacer for Update Refs. Used: 145M, Free: 1745M, Non-Taxable: 174M, Alloc Tax Rate: 1.1x
[1.848s][info][gc          ] GC(0) Pause Init Update Refs 0.029ms
[1.848s][info][gc,start    ] GC(0) Concurrent update references
[1.848s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reference update
[1.875s][info][gc          ] GC(0) Concurrent update references 27.258ms
[1.875s][info][gc,start    ] GC(0) Concurrent update thread roots
[1.875s][info][gc          ] GC(0) Concurrent update thread roots 0.202ms
[1.875s][info][gc,start    ] GC(0) Pause Final Update Refs
[1.875s][info][gc,task     ] GC(0) Using 8 of 8 workers for final reference update
[1.875s][info][gc          ] GC(0) Pause Final Update Refs 0.071ms
[1.875s][info][gc,start    ] GC(0) Concurrent cleanup
[1.876s][info][gc          ] GC(0) Concurrent cleanup 146M->71M(152M) 0.067ms
[1.876s][info][gc,ergo     ] Free: 1810M, Max: 512K regular, 1732M humongous, Frag: 5% external, 0% internal; Reserve: 101888K, Max: 512K
[1.876s][info][gc,stats    ] 
[1.876s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[1.876s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[1.876s][info][gc,stats    ] 
[1.876s][info][gc,stats    ] Concurrent Reset                    413 us
[1.876s][info][gc,stats    ] Pause Init Mark (G)                 505 us
[1.876s][info][gc,stats    ] Pause Init Mark (N)                 391 us
[1.876s][info][gc,stats    ]   Update Region States               22 us
[1.876s][info][gc,stats    ] Concurrent Mark Roots              1404 us, parallelism: 1.84x
[1.876s][info][gc,stats    ]   CMR: <total>                     2588 us
[1.876s][info][gc,stats    ]   CMR: Thread Roots                1081 us, workers (us): 919, 162, ---, ---, ---, ---, ---, ---, 
[1.876s][info][gc,stats    ]   CMR: VM Strong Roots              549 us, workers (us): 386, 163, ---, ---, ---, ---, ---, ---, 
[1.876s][info][gc,stats    ]   CMR: CLDG Roots                   958 us, workers (us): ---, 958, ---, ---, ---, ---, ---, ---, 
[1.876s][info][gc,stats    ] Concurrent Marking                40649 us
[1.876s][info][gc,stats    ] Pause Final Mark (G)              10774 us
[1.876s][info][gc,stats    ] Pause Final Mark (N)              10628 us
[1.876s][info][gc,stats    ]   Finish Mark                     10414 us
[1.876s][info][gc,stats    ]   Update Region States               39 us
[1.876s][info][gc,stats    ]   Choose Collection Set              79 us
[1.876s][info][gc,stats    ]   Rebuild Free Set                   22 us
[1.876s][info][gc,stats    ] Concurrent Thread Roots             334 us, parallelism: 1.20x
[1.876s][info][gc,stats    ]   CTR: <total>                      402 us
[1.876s][info][gc,stats    ]   CTR: Thread Roots                 402 us, workers (us): 189, 213, ---, ---, ---, ---, ---, ---, 
[1.876s][info][gc,stats    ] Concurrent Weak References          300 us, parallelism: 0.76x
[1.876s][info][gc,stats    ]   CWRF: <total>                     227 us
[1.876s][info][gc,stats    ]   CWRF: Weak References             227 us, workers (us): 227,   1, ---, ---, ---, ---, ---, ---, 
[1.876s][info][gc,stats    ] Concurrent Weak Roots              4816 us
[1.876s][info][gc,stats    ]   Roots                            2893 us, parallelism: 0.88x
[1.876s][info][gc,stats    ]     CWR: <total>                   2554 us
[1.876s][info][gc,stats    ]     CWR: Code Cache Roots           726 us, workers (us): 726,   0, ---, ---, ---, ---, ---, ---, 
[1.876s][info][gc,stats    ]     CWR: VM Weak Roots             1810 us, workers (us): 1810,   1, ---, ---, ---, ---, ---, ---, 
[1.876s][info][gc,stats    ]     CWR: CLDG Roots                  18 us, workers (us):  18, ---, ---, ---, ---, ---, ---, ---, 
[1.876s][info][gc,stats    ]   Rendezvous                       1869 us
[1.876s][info][gc,stats    ] Concurrent Cleanup                  106 us
[1.876s][info][gc,stats    ] Concurrent Class Unloading        11520 us
[1.876s][info][gc,stats    ]   Unlink Stale                     6590 us
[1.876s][info][gc,stats    ]     System Dictionary                49 us
[1.876s][info][gc,stats    ]     Weak Class Links                  0 us
[1.876s][info][gc,stats    ]     Code Roots                     6540 us
[1.876s][info][gc,stats    ]   Rendezvous                        125 us
[1.876s][info][gc,stats    ]   Purge Unlinked                   4743 us
[1.876s][info][gc,stats    ]     Code Roots                     4726 us
[1.876s][info][gc,stats    ]     CLDG                             16 us
[1.876s][info][gc,stats    ]     Exception Caches                  0 us
[1.876s][info][gc,stats    ] Concurrent Strong Roots            1766 us, parallelism: 0.81x
[1.876s][info][gc,stats    ]   CSR: <total>                     1426 us
[1.876s][info][gc,stats    ]   CSR: VM Strong Roots               26 us, workers (us):  18,   8, ---, ---, ---, ---, ---, ---, 
[1.876s][info][gc,stats    ]   CSR: CLDG Roots                  1400 us, workers (us): ---, 1400, ---, ---, ---, ---, ---, ---, 
[1.876s][info][gc,stats    ] Concurrent Evacuation              6551 us
[1.876s][info][gc,stats    ] Pause Init Update Refs (G)          125 us
[1.876s][info][gc,stats    ] Pause Init Update Refs (N)           37 us
[1.876s][info][gc,stats    ]   Manage GCLABs                       4 us
[1.876s][info][gc,stats    ] Concurrent Update Refs            27287 us
[1.876s][info][gc,stats    ] Concurrent Update Thread Roots      214 us
[1.876s][info][gc,stats    ] Pause Final Update Refs (G)         172 us
[1.876s][info][gc,stats    ] Pause Final Update Refs (N)          80 us
[1.876s][info][gc,stats    ]   Update Region States               30 us
[1.876s][info][gc,stats    ]   Trash Collection Set                3 us
[1.876s][info][gc,stats    ]   Rebuild Free Set                   17 us
[1.876s][info][gc,stats    ] Concurrent Cleanup                   76 us
[1.876s][info][gc,stats    ] 
[1.876s][info][gc,stats    ] Allocation pacing accrued:
[1.876s][info][gc,stats    ]       0 of  1871 ms (  0.0%): <total>
[1.876s][info][gc,stats    ]       0 of  1871 ms (  0.0%): <average total>
[1.876s][info][gc,stats    ] 
[1.876s][info][gc,metaspace] Metaspace: 21254K(21568K)->21772K(22144K) NonClass: 18905K(19072K)->19351K(19520K) Class: 2348K(2496K)->2420K(2624K)
[1.876s][info][gc,ergo     ] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[6.174s][info][gc          ] Cancelling GC: Stopping VM
[6.175s][info][gc,heap,exit] Heap
[6.175s][info][gc,heap,exit] Shenandoah Heap
[6.175s][info][gc,heap,exit]  1984M max, 1984M soft max, 152M committed, 85956K used
[6.175s][info][gc,heap,exit]  3969 x 512K regions
[6.175s][info][gc,heap,exit] Status: cancelled
[6.175s][info][gc,heap,exit] Reserved region:
[6.175s][info][gc,heap,exit]  - [0x0000000083f80000, 0x0000000100000000) 
[6.175s][info][gc,heap,exit] Collection set:
[6.175s][info][gc,heap,exit]  - map (vanilla): 0x000000000001107f
[6.175s][info][gc,heap,exit]  - map (biased):  0x0000000000010000
[6.175s][info][gc,heap,exit] 
[6.175s][info][gc,heap,exit]  Metaspace       used 25109K, committed 25408K, reserved 1114112K
[6.175s][info][gc,heap,exit]   class space    used 2775K, committed 2880K, reserved 1048576K
[6.175s][info][gc,stats    ] 
[6.175s][info][gc,stats    ] GC STATISTICS:
[6.175s][info][gc,stats    ]   "(G)" (gross) pauses include VM time: time to notify and block threads, do the pre-
[6.175s][info][gc,stats    ]         and post-safepoint housekeeping. Use -Xlog:safepoint+stats to dissect.
[6.175s][info][gc,stats    ]   "(N)" (net) pauses are the times spent in the actual GC code.
[6.175s][info][gc,stats    ]   "a" is average time for each phase, look at levels to see if average makes sense.
[6.175s][info][gc,stats    ]   "lvls" are quantiles: 0% (minimum), 25%, 50% (median), 75%, 100% (maximum).
[6.175s][info][gc,stats    ] 
[6.175s][info][gc,stats    ]   All times are wall-clock times, except per-root-class counters, that are sum over
[6.175s][info][gc,stats    ]   all workers. Dividing the <total> over the root stage time estimates parallelism.
[6.175s][info][gc,stats    ] 
[6.175s][info][gc,stats    ]   Pacing delays are measured from entering the pacing code till exiting it. Therefore,
[6.175s][info][gc,stats    ]   observed pacing delays may be higher than the threshold when paced thread spent more
[6.175s][info][gc,stats    ]   time in the pacing code. It usually happens when thread is de-scheduled while paced,
[6.175s][info][gc,stats    ]   OS takes longer to unblock the thread, or JVM experiences an STW pause.
[6.175s][info][gc,stats    ] 
[6.175s][info][gc,stats    ]   Higher delay would prevent application outpacing the GC, but it will hide the GC latencies
[6.175s][info][gc,stats    ]   from the STW pause times. Pacing affects the individual threads, and so it would also be
[6.175s][info][gc,stats    ]   invisible to the usual profiling tools, but would add up to end-to-end application latency.
[6.175s][info][gc,stats    ]   Raise max pacing delay with care.
[6.175s][info][gc,stats    ] 
[6.175s][info][gc,stats    ] Concurrent Reset               =    0.000 s (a =      413 us) (n =     1) (lvls, us =      412,      412,      412,      412,      413)
[6.175s][info][gc,stats    ] Pause Init Mark (G)            =    0.001 s (a =      505 us) (n =     1) (lvls, us =      504,      504,      504,      504,      505)
[6.175s][info][gc,stats    ] Pause Init Mark (N)            =    0.000 s (a =      391 us) (n =     1) (lvls, us =      391,      391,      391,      391,      391)
[6.175s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       22 us) (n =     1) (lvls, us =       21,       21,       21,       21,       22)
[6.175s][info][gc,stats    ] Concurrent Mark Roots          =    0.001 s (a =     1404 us) (n =     1) (lvls, us =     1387,     1387,     1387,     1387,     1404)
[6.175s][info][gc,stats    ]   CMR: <total>                 =    0.003 s (a =     2588 us) (n =     1) (lvls, us =     2578,     2578,     2578,     2578,     2588)
[6.175s][info][gc,stats    ]   CMR: Thread Roots            =    0.001 s (a =     1081 us) (n =     1) (lvls, us =     1074,     1074,     1074,     1074,     1081)
[6.175s][info][gc,stats    ]   CMR: VM Strong Roots         =    0.001 s (a =      549 us) (n =     1) (lvls, us =      549,      549,      549,      549,      549)
[6.175s][info][gc,stats    ]   CMR: CLDG Roots              =    0.001 s (a =      958 us) (n =     1) (lvls, us =      957,      957,      957,      957,      958)
[6.175s][info][gc,stats    ] Concurrent Marking             =    0.041 s (a =    40649 us) (n =     1) (lvls, us =    40625,    40625,    40625,    40625,    40649)
[6.175s][info][gc,stats    ] Pause Final Mark (G)           =    0.011 s (a =    10774 us) (n =     1) (lvls, us =    10742,    10742,    10742,    10742,    10774)
[6.175s][info][gc,stats    ] Pause Final Mark (N)           =    0.011 s (a =    10628 us) (n =     1) (lvls, us =    10547,    10547,    10547,    10547,    10628)
[6.175s][info][gc,stats    ]   Finish Mark                  =    0.010 s (a =    10414 us) (n =     1) (lvls, us =    10352,    10352,    10352,    10352,    10414)
[6.175s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       39 us) (n =     1) (lvls, us =       39,       39,       39,       39,       39)
[6.175s][info][gc,stats    ]   Choose Collection Set        =    0.000 s (a =       79 us) (n =     1) (lvls, us =       79,       79,       79,       79,       79)
[6.175s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       22 us) (n =     1) (lvls, us =       22,       22,       22,       22,       22)
[6.175s][info][gc,stats    ] Concurrent Thread Roots        =    0.000 s (a =      334 us) (n =     1) (lvls, us =      332,      332,      332,      332,      334)
[6.175s][info][gc,stats    ]   CTR: <total>                 =    0.000 s (a =      402 us) (n =     1) (lvls, us =      400,      400,      400,      400,      402)
[6.175s][info][gc,stats    ]   CTR: Thread Roots            =    0.000 s (a =      402 us) (n =     1) (lvls, us =      400,      400,      400,      400,      402)
[6.175s][info][gc,stats    ] Concurrent Weak References     =    0.000 s (a =      300 us) (n =     1) (lvls, us =      299,      299,      299,      299,      300)
[6.175s][info][gc,stats    ]   CWRF: <total>                =    0.000 s (a =      227 us) (n =     1) (lvls, us =      227,      227,      227,      227,      227)
[6.175s][info][gc,stats    ]   CWRF: Weak References        =    0.000 s (a =      227 us) (n =     1) (lvls, us =      227,      227,      227,      227,      227)
[6.175s][info][gc,stats    ] Concurrent Weak Roots          =    0.005 s (a =     4816 us) (n =     1) (lvls, us =     4805,     4805,     4805,     4805,     4816)
[6.175s][info][gc,stats    ]   Roots                        =    0.003 s (a =     2893 us) (n =     1) (lvls, us =     2891,     2891,     2891,     2891,     2893)
[6.175s][info][gc,stats    ]     CWR: <total>               =    0.003 s (a =     2554 us) (n =     1) (lvls, us =     2539,     2539,     2539,     2539,     2554)
[6.175s][info][gc,stats    ]     CWR: Code Cache Roots      =    0.001 s (a =      726 us) (n =     1) (lvls, us =      725,      725,      725,      725,      726)
[6.176s][info][gc,stats    ]     CWR: VM Weak Roots         =    0.002 s (a =     1810 us) (n =     1) (lvls, us =     1797,     1797,     1797,     1797,     1810)
[6.176s][info][gc,stats    ]     CWR: CLDG Roots            =    0.000 s (a =       18 us) (n =     1) (lvls, us =       18,       18,       18,       18,       18)
[6.176s][info][gc,stats    ]   Rendezvous                   =    0.002 s (a =     1869 us) (n =     1) (lvls, us =     1855,     1855,     1855,     1855,     1869)
[6.176s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =      106 us) (n =     1) (lvls, us =      105,      105,      105,      105,      106)
[6.176s][info][gc,stats    ] Concurrent Class Unloading     =    0.012 s (a =    11520 us) (n =     1) (lvls, us =    11328,    11328,    11328,    11328,    11520)
[6.176s][info][gc,stats    ]   Unlink Stale                 =    0.007 s (a =     6590 us) (n =     1) (lvls, us =     6582,     6582,     6582,     6582,     6590)
[6.176s][info][gc,stats    ]     System Dictionary          =    0.000 s (a =       49 us) (n =     1) (lvls, us =       49,       49,       49,       49,       49)
[6.176s][info][gc,stats    ]     Weak Class Links           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[6.176s][info][gc,stats    ]     Code Roots                 =    0.007 s (a =     6540 us) (n =     1) (lvls, us =     6523,     6523,     6523,     6523,     6540)
[6.176s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =      125 us) (n =     1) (lvls, us =      123,      123,      123,      123,      125)
[6.176s][info][gc,stats    ]   Purge Unlinked               =    0.005 s (a =     4743 us) (n =     1) (lvls, us =     4727,     4727,     4727,     4727,     4743)
[6.176s][info][gc,stats    ]     Code Roots                 =    0.005 s (a =     4726 us) (n =     1) (lvls, us =     4707,     4707,     4707,     4707,     4726)
[6.176s][info][gc,stats    ]     CLDG                       =    0.000 s (a =       16 us) (n =     1) (lvls, us =       16,       16,       16,       16,       16)
[6.176s][info][gc,stats    ]     Exception Caches           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[6.176s][info][gc,stats    ] Concurrent Strong Roots        =    0.002 s (a =     1766 us) (n =     1) (lvls, us =     1758,     1758,     1758,     1758,     1766)
[6.176s][info][gc,stats    ]   CSR: <total>                 =    0.001 s (a =     1426 us) (n =     1) (lvls, us =     1406,     1406,     1406,     1406,     1426)
[6.176s][info][gc,stats    ]   CSR: VM Strong Roots         =    0.000 s (a =       26 us) (n =     1) (lvls, us =       26,       26,       26,       26,       26)
[6.176s][info][gc,stats    ]   CSR: CLDG Roots              =    0.001 s (a =     1400 us) (n =     1) (lvls, us =     1387,     1387,     1387,     1387,     1400)
[6.176s][info][gc,stats    ] Concurrent Evacuation          =    0.007 s (a =     6551 us) (n =     1) (lvls, us =     6543,     6543,     6543,     6543,     6551)
[6.176s][info][gc,stats    ] Pause Init Update Refs (G)     =    0.000 s (a =      125 us) (n =     1) (lvls, us =      123,      123,      123,      123,      125)
[6.176s][info][gc,stats    ] Pause Init Update Refs (N)     =    0.000 s (a =       37 us) (n =     1) (lvls, us =       37,       37,       37,       37,       37)
[6.176s][info][gc,stats    ]   Manage GCLABs                =    0.000 s (a =        4 us) (n =     1) (lvls, us =        4,        4,        4,        4,        4)
[6.176s][info][gc,stats    ] Concurrent Update Refs         =    0.027 s (a =    27287 us) (n =     1) (lvls, us =    27148,    27148,    27148,    27148,    27287)
[6.176s][info][gc,stats    ] Concurrent Update Thread Roots =    0.000 s (a =      214 us) (n =     1) (lvls, us =      213,      213,      213,      213,      214)
[6.176s][info][gc,stats    ] Pause Final Update Refs (G)    =    0.000 s (a =      172 us) (n =     1) (lvls, us =      172,      172,      172,      172,      172)
[6.176s][info][gc,stats    ] Pause Final Update Refs (N)    =    0.000 s (a =       80 us) (n =     1) (lvls, us =       80,       80,       80,       80,       80)
[6.176s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       30 us) (n =     1) (lvls, us =       30,       30,       30,       30,       30)
[6.176s][info][gc,stats    ]   Trash Collection Set         =    0.000 s (a =        3 us) (n =     1) (lvls, us =        3,        3,        3,        3,        3)
[6.176s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       17 us) (n =     1) (lvls, us =       16,       16,       16,       16,       17)
[6.176s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =       76 us) (n =     1) (lvls, us =       75,       75,       75,       75,       76)
[6.176s][info][gc,stats    ] 
[6.176s][info][gc,stats    ] 
[6.176s][info][gc,stats    ] Under allocation pressure, concurrent cycles may cancel, and either continue cycle
[6.176s][info][gc,stats    ] under stop-the-world pause or result in stop-the-world Full GC. Increase heap size,
[6.176s][info][gc,stats    ] tune GC heuristics, set more aggressive pacing delay, or lower allocation rate
[6.176s][info][gc,stats    ] to avoid Degenerated and Full GC cycles.
[6.176s][info][gc,stats    ] 
[6.176s][info][gc,stats    ]     1 successful concurrent GCs
[6.176s][info][gc,stats    ]       0 invoked explicitly
[6.176s][info][gc,stats    ]       0 invoked implicitly
[6.176s][info][gc,stats    ] 
[6.176s][info][gc,stats    ]     0 Degenerated GCs
[6.176s][info][gc,stats    ]       0 caused by allocation failure
[6.176s][info][gc,stats    ]       0 upgraded to Full GC
[6.176s][info][gc,stats    ] 
[6.176s][info][gc,stats    ]     0 Full GCs
[6.176s][info][gc,stats    ]       0 invoked explicitly
[6.176s][info][gc,stats    ]       0 invoked implicitly
[6.176s][info][gc,stats    ]       0 caused by allocation failure
[6.176s][info][gc,stats    ]       0 upgraded from Degenerated GC
[6.176s][info][gc,stats    ] 
[6.176s][info][gc,stats    ] 
