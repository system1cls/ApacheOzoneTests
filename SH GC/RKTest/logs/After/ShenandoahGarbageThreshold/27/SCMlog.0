[0.010s][info][gc] Heuristics ergonomically sets -XX:+ExplicitGCInvokesConcurrent
[0.010s][info][gc] Heuristics ergonomically sets -XX:+ShenandoahImplicitGCInvokesConcurrent
[0.010s][info][gc] Using Shenandoah
[0.011s][info][gc,ergo] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[0.011s][info][gc,init] Version: 21.0.7+6-Ubuntu-0ubuntu122.04 (release)
[0.011s][info][gc,init] CPUs: 4 total, 4 available
[0.011s][info][gc,init] Memory: 7937M
[0.011s][info][gc,init] Large Page Support: Disabled
[0.011s][info][gc,init] NUMA Support: Disabled
[0.012s][info][gc,init] Compressed Oops: Enabled (32-bit)
[0.012s][info][gc,init] Heap Min Capacity: 6656K
[0.012s][info][gc,init] Heap Initial Capacity: 127488K
[0.012s][info][gc,init] Heap Max Capacity: 2032128K
[0.012s][info][gc,init] Pre-touch: Disabled
[0.012s][info][gc,init] Mode: Snapshot-At-The-Beginning (SATB)
[0.012s][info][gc,init] Heuristics: Adaptive
[0.012s][info][gc,init] Heap Region Count: 3969
[0.012s][info][gc,init] Heap Region Size: 512K
[0.012s][info][gc,init] TLAB Size Max: 512K
[0.012s][info][gc,init] Humongous Object Threshold: 512K
[0.012s][info][gc,init] Parallel Workers: 8
[0.012s][info][gc,init] Concurrent Workers: 2
[0.021s][info][gc,metaspace] CDS archive(s) mapped at: [0x00007f239b000000-0x00007f239bc97000-0x00007f239bc97000), size 13201408, SharedBaseAddress: 0x00007f239b000000, ArchiveRelocationMode: 1.
[0.021s][info][gc,metaspace] Compressed class space mapped at: 0x00007f239c000000-0x00007f23dc000000, reserved size: 1073741824
[0.021s][info][gc,metaspace] Narrow klass base: 0x00007f239b000000, Narrow klass shift: 0, Narrow klass range: 0x100000000
[1.365s][info][gc          ] Trigger: Metadata GC Threshold
[1.365s][info][gc,ergo     ] Free: 1790M, Max: 512K regular, 1790M humongous, Frag: 0% external, 0% internal; Reserve: 101888K, Max: 512K
[1.365s][info][gc,start    ] GC(0) Concurrent reset
[1.365s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reset
[1.365s][info][gc,ergo     ] GC(0) Pacer for Reset. Non-Taxable: 1984M
[1.366s][info][gc          ] GC(0) Concurrent reset 0.623ms
[1.366s][info][gc,start    ] GC(0) Pause Init Mark (unload classes)
[1.366s][info][gc,task     ] GC(0) Using 8 of 8 workers for init marking
[1.367s][info][gc,ergo     ] GC(0) Pacer for Mark. Expected Live: 198M, Free: 1790M, Non-Taxable: 179M, Alloc Tax Rate: 0.1x
[1.367s][info][gc          ] GC(0) Pause Init Mark (unload classes) 0.707ms
[1.369s][info][gc,start    ] GC(0) Concurrent marking roots
[1.369s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking roots
[1.373s][info][gc          ] GC(0) Concurrent marking roots 4.508ms
[1.373s][info][gc,start    ] GC(0) Concurrent marking (unload classes)
[1.373s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking
[1.387s][info][gc          ] GC(0) Concurrent marking (unload classes) 14.051ms
[1.387s][info][gc,start    ] GC(0) Pause Final Mark (unload classes)
[1.388s][info][gc,task     ] GC(0) Using 8 of 8 workers for final marking
[1.388s][info][gc,ergo     ] GC(0) Adaptive CSet Selection. Target Free: 281M, Actual Free: 1893M, Max CSet: 84672K, Min Garbage: 0B
[1.388s][info][gc,ergo     ] GC(0) Collectable Garbage: 81575K (99%), Immediate: 5855K (7%), CSet: 75719K (91%)
[1.388s][info][gc,ergo     ] GC(0) Pacer for Evacuation. Used CSet: 83456K, Free: 1794M, Non-Taxable: 179M, Alloc Tax Rate: 1.1x
[1.388s][info][gc          ] GC(0) Pause Final Mark (unload classes) 0.509ms
[1.388s][info][gc,start    ] GC(0) Concurrent thread roots
[1.388s][info][gc,task     ] GC(0) Using 2 of 8 workers for Concurrent thread roots
[1.388s][info][gc          ] GC(0) Concurrent thread roots 0.342ms
[1.388s][info][gc,start    ] GC(0) Concurrent weak references
[1.388s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak references
[1.389s][info][gc,ref      ] GC(0) Encountered references: Soft: 3955, Weak: 2121, Final: 20, Phantom: 791
[1.389s][info][gc,ref      ] GC(0) Discovered  references: Soft: 0, Weak: 908, Final: 0, Phantom: 735
[1.389s][info][gc,ref      ] GC(0) Enqueued    references: Soft: 0, Weak: 478, Final: 0, Phantom: 313
[1.389s][info][gc          ] GC(0) Concurrent weak references 0.375ms
[1.389s][info][gc,start    ] GC(0) Concurrent weak roots
[1.389s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak root
[1.393s][info][gc          ] GC(0) Concurrent weak roots 3.861ms
[1.393s][info][gc,start    ] GC(0) Concurrent cleanup
[1.393s][info][gc          ] GC(0) Concurrent cleanup 96M->91M(125M) 0.112ms
[1.393s][info][gc,ergo     ] GC(0) Free: 1794M, Max: 512K regular, 1788M humongous, Frag: 1% external, 0% internal; Reserve: 101244K, Max: 512K
[1.393s][info][gc,start    ] GC(0) Concurrent class unloading
[1.393s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent class unloading
[1.401s][info][gc          ] GC(0) Concurrent class unloading 8.433ms
[1.401s][info][gc,start    ] GC(0) Concurrent strong roots
[1.401s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent strong root
[1.403s][info][gc          ] GC(0) Concurrent strong roots 1.616ms
[1.403s][info][gc,start    ] GC(0) Concurrent evacuation
[1.403s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent evacuation
[1.410s][info][gc          ] GC(0) Concurrent evacuation 7.525ms
[1.411s][info][gc,start    ] GC(0) Pause Init Update Refs
[1.411s][info][gc,ergo     ] GC(0) Pacer for Update Refs. Used: 102365K, Free: 1793M, Non-Taxable: 179M, Alloc Tax Rate: 1.1x
[1.411s][info][gc          ] GC(0) Pause Init Update Refs 0.053ms
[1.411s][info][gc,start    ] GC(0) Concurrent update references
[1.411s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reference update
[1.417s][info][gc          ] GC(0) Concurrent update references 6.414ms
[1.418s][info][gc,start    ] GC(0) Concurrent update thread roots
[1.418s][info][gc          ] GC(0) Concurrent update thread roots 0.138ms
[1.418s][info][gc,start    ] GC(0) Pause Final Update Refs
[1.418s][info][gc,task     ] GC(0) Using 8 of 8 workers for final reference update
[1.418s][info][gc          ] GC(0) Pause Final Update Refs 0.082ms
[1.418s][info][gc,start    ] GC(0) Concurrent cleanup
[1.418s][info][gc          ] GC(0) Concurrent cleanup 99M->18M(133M) 0.087ms
[1.418s][info][gc,ergo     ] Free: 1866M, Max: 512K regular, 1779M humongous, Frag: 5% external, 0% internal; Reserve: 101888K, Max: 512K
[1.418s][info][gc,stats    ] 
[1.418s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[1.418s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[1.418s][info][gc,stats    ] 
[1.418s][info][gc,stats    ] Concurrent Reset                    693 us
[1.418s][info][gc,stats    ] Pause Init Mark (G)                2783 us
[1.418s][info][gc,stats    ] Pause Init Mark (N)                 732 us
[1.418s][info][gc,stats    ]   Update Region States               29 us
[1.418s][info][gc,stats    ] Concurrent Mark Roots              4571 us, parallelism: 1.25x
[1.418s][info][gc,stats    ]   CMR: <total>                     5722 us
[1.418s][info][gc,stats    ]   CMR: Thread Roots                1335 us, workers (us):   0, 1335, ---, ---, ---, ---, ---, ---, 
[1.418s][info][gc,stats    ]   CMR: VM Strong Roots              830 us, workers (us): 829,   0, ---, ---, ---, ---, ---, ---, 
[1.418s][info][gc,stats    ]   CMR: CLDG Roots                  3558 us, workers (us): 3558, ---, ---, ---, ---, ---, ---, ---, 
[1.418s][info][gc,stats    ] Concurrent Marking                14077 us
[1.418s][info][gc,stats    ] Pause Final Mark (G)                875 us
[1.418s][info][gc,stats    ] Pause Final Mark (N)                542 us
[1.418s][info][gc,stats    ]   Finish Mark                       156 us
[1.418s][info][gc,stats    ]   Update Region States               26 us
[1.418s][info][gc,stats    ]   Choose Collection Set             154 us
[1.418s][info][gc,stats    ]   Rebuild Free Set                   24 us
[1.418s][info][gc,stats    ] Concurrent Thread Roots             358 us, parallelism: 1.23x
[1.418s][info][gc,stats    ]   CTR: <total>                      442 us
[1.418s][info][gc,stats    ]   CTR: Thread Roots                 442 us, workers (us): 154, 288, ---, ---, ---, ---, ---, ---, 
[1.418s][info][gc,stats    ] Concurrent Weak References          396 us, parallelism: 0.81x
[1.418s][info][gc,stats    ]   CWRF: <total>                     319 us
[1.418s][info][gc,stats    ]   CWRF: Weak References             319 us, workers (us): 278,  41, ---, ---, ---, ---, ---, ---, 
[1.418s][info][gc,stats    ] Concurrent Weak Roots              3884 us
[1.418s][info][gc,stats    ]   Roots                            1695 us, parallelism: 1.48x
[1.418s][info][gc,stats    ]     CWR: <total>                   2511 us
[1.418s][info][gc,stats    ]     CWR: Code Cache Roots           793 us, workers (us): 410, 384, ---, ---, ---, ---, ---, ---, 
[1.418s][info][gc,stats    ]     CWR: VM Weak Roots             1702 us, workers (us): 1202, 500, ---, ---, ---, ---, ---, ---, 
[1.418s][info][gc,stats    ]     CWR: CLDG Roots                  16 us, workers (us):  16, ---, ---, ---, ---, ---, ---, ---, 
[1.418s][info][gc,stats    ]   Rendezvous                       2113 us
[1.418s][info][gc,stats    ] Concurrent Cleanup                  127 us
[1.418s][info][gc,stats    ] Concurrent Class Unloading         8451 us
[1.418s][info][gc,stats    ]   Unlink Stale                     4589 us
[1.418s][info][gc,stats    ]     System Dictionary                71 us
[1.418s][info][gc,stats    ]     Weak Class Links                  0 us
[1.418s][info][gc,stats    ]     Code Roots                     4516 us
[1.418s][info][gc,stats    ]   Rendezvous                         40 us
[1.418s][info][gc,stats    ]   Purge Unlinked                   3779 us
[1.418s][info][gc,stats    ]     Code Roots                     3750 us
[1.418s][info][gc,stats    ]     CLDG                             29 us
[1.418s][info][gc,stats    ]     Exception Caches                  0 us
[1.418s][info][gc,stats    ] Concurrent Strong Roots            1636 us, parallelism: 0.89x
[1.418s][info][gc,stats    ]   CSR: <total>                     1454 us
[1.418s][info][gc,stats    ]   CSR: VM Strong Roots               25 us, workers (us):  24,   1, ---, ---, ---, ---, ---, ---, 
[1.418s][info][gc,stats    ]   CSR: CLDG Roots                  1429 us, workers (us): 1429, ---, ---, ---, ---, ---, ---, ---, 
[1.418s][info][gc,stats    ] Concurrent Evacuation              7548 us
[1.418s][info][gc,stats    ] Pause Init Update Refs (G)          598 us
[1.418s][info][gc,stats    ] Pause Init Update Refs (N)           64 us
[1.418s][info][gc,stats    ]   Manage GCLABs                       5 us
[1.418s][info][gc,stats    ] Concurrent Update Refs             6434 us
[1.418s][info][gc,stats    ] Concurrent Update Thread Roots      150 us
[1.418s][info][gc,stats    ] Pause Final Update Refs (G)         219 us
[1.418s][info][gc,stats    ] Pause Final Update Refs (N)          94 us
[1.418s][info][gc,stats    ]   Update Region States               23 us
[1.418s][info][gc,stats    ]   Trash Collection Set                4 us
[1.418s][info][gc,stats    ]   Rebuild Free Set                   18 us
[1.418s][info][gc,stats    ] Concurrent Cleanup                   98 us
[1.418s][info][gc,stats    ] 
[1.419s][info][gc,stats    ] Allocation pacing accrued:
[1.419s][info][gc,stats    ]       0 of  1407 ms (  0.0%): <total>
[1.419s][info][gc,stats    ]       0 of  1407 ms (  0.0%): <average total>
[1.419s][info][gc,stats    ] 
[1.419s][info][gc,metaspace] Metaspace: 21180K(21568K)->21530K(21888K) NonClass: 18845K(19072K)->19154K(19328K) Class: 2334K(2496K)->2375K(2560K)
[1.419s][info][gc,ergo     ] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[7.803s][info][gc          ] Cancelling GC: Stopping VM
[7.804s][info][gc,heap,exit] Heap
[7.804s][info][gc,heap,exit] Shenandoah Heap
[7.804s][info][gc,heap,exit]  1984M max, 1984M soft max, 133M committed, 38380K used
[7.804s][info][gc,heap,exit]  3969 x 512K regions
[7.804s][info][gc,heap,exit] Status: cancelled
[7.804s][info][gc,heap,exit] Reserved region:
[7.804s][info][gc,heap,exit]  - [0x0000000083f80000, 0x0000000100000000) 
[7.804s][info][gc,heap,exit] Collection set:
[7.805s][info][gc,heap,exit]  - map (vanilla): 0x000000000001107f
[7.805s][info][gc,heap,exit]  - map (biased):  0x0000000000010000
[7.805s][info][gc,heap,exit] 
[7.805s][info][gc,heap,exit]  Metaspace       used 25453K, committed 25792K, reserved 1114112K
[7.805s][info][gc,heap,exit]   class space    used 2924K, committed 3072K, reserved 1048576K
[7.805s][info][gc,stats    ] 
[7.805s][info][gc,stats    ] GC STATISTICS:
[7.805s][info][gc,stats    ]   "(G)" (gross) pauses include VM time: time to notify and block threads, do the pre-
[7.805s][info][gc,stats    ]         and post-safepoint housekeeping. Use -Xlog:safepoint+stats to dissect.
[7.805s][info][gc,stats    ]   "(N)" (net) pauses are the times spent in the actual GC code.
[7.805s][info][gc,stats    ]   "a" is average time for each phase, look at levels to see if average makes sense.
[7.805s][info][gc,stats    ]   "lvls" are quantiles: 0% (minimum), 25%, 50% (median), 75%, 100% (maximum).
[7.805s][info][gc,stats    ] 
[7.805s][info][gc,stats    ]   All times are wall-clock times, except per-root-class counters, that are sum over
[7.806s][info][gc,stats    ]   all workers. Dividing the <total> over the root stage time estimates parallelism.
[7.806s][info][gc,stats    ] 
[7.806s][info][gc,stats    ]   Pacing delays are measured from entering the pacing code till exiting it. Therefore,
[7.806s][info][gc,stats    ]   observed pacing delays may be higher than the threshold when paced thread spent more
[7.806s][info][gc,stats    ]   time in the pacing code. It usually happens when thread is de-scheduled while paced,
[7.806s][info][gc,stats    ]   OS takes longer to unblock the thread, or JVM experiences an STW pause.
[7.806s][info][gc,stats    ] 
[7.806s][info][gc,stats    ]   Higher delay would prevent application outpacing the GC, but it will hide the GC latencies
[7.806s][info][gc,stats    ]   from the STW pause times. Pacing affects the individual threads, and so it would also be
[7.806s][info][gc,stats    ]   invisible to the usual profiling tools, but would add up to end-to-end application latency.
[7.806s][info][gc,stats    ]   Raise max pacing delay with care.
[7.806s][info][gc,stats    ] 
[7.806s][info][gc,stats    ] Concurrent Reset               =    0.001 s (a =      693 us) (n =     1) (lvls, us =      691,      691,      691,      691,      693)
[7.806s][info][gc,stats    ] Pause Init Mark (G)            =    0.003 s (a =     2783 us) (n =     1) (lvls, us =     2773,     2773,     2773,     2773,     2783)
[7.806s][info][gc,stats    ] Pause Init Mark (N)            =    0.001 s (a =      732 us) (n =     1) (lvls, us =      730,      730,      730,      730,      732)
[7.806s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       29 us) (n =     1) (lvls, us =       29,       29,       29,       29,       29)
[7.806s][info][gc,stats    ] Concurrent Mark Roots          =    0.005 s (a =     4571 us) (n =     1) (lvls, us =     4570,     4570,     4570,     4570,     4571)
[7.806s][info][gc,stats    ]   CMR: <total>                 =    0.006 s (a =     5722 us) (n =     1) (lvls, us =     5703,     5703,     5703,     5703,     5722)
[7.807s][info][gc,stats    ]   CMR: Thread Roots            =    0.001 s (a =     1335 us) (n =     1) (lvls, us =     1328,     1328,     1328,     1328,     1335)
[7.807s][info][gc,stats    ]   CMR: VM Strong Roots         =    0.001 s (a =      830 us) (n =     1) (lvls, us =      828,      828,      828,      828,      830)
[7.807s][info][gc,stats    ]   CMR: CLDG Roots              =    0.004 s (a =     3558 us) (n =     1) (lvls, us =     3555,     3555,     3555,     3555,     3558)
[7.807s][info][gc,stats    ] Concurrent Marking             =    0.014 s (a =    14077 us) (n =     1) (lvls, us =    14062,    14062,    14062,    14062,    14077)
[7.807s][info][gc,stats    ] Pause Final Mark (G)           =    0.001 s (a =      875 us) (n =     1) (lvls, us =      873,      873,      873,      873,      875)
[7.807s][info][gc,stats    ] Pause Final Mark (N)           =    0.001 s (a =      542 us) (n =     1) (lvls, us =      541,      541,      541,      541,      542)
[7.807s][info][gc,stats    ]   Finish Mark                  =    0.000 s (a =      156 us) (n =     1) (lvls, us =      154,      154,      154,      154,      156)
[7.807s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       26 us) (n =     1) (lvls, us =       26,       26,       26,       26,       26)
[7.807s][info][gc,stats    ]   Choose Collection Set        =    0.000 s (a =      154 us) (n =     1) (lvls, us =      152,      152,      152,      152,      154)
[7.807s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       24 us) (n =     1) (lvls, us =       24,       24,       24,       24,       24)
[7.807s][info][gc,stats    ] Concurrent Thread Roots        =    0.000 s (a =      358 us) (n =     1) (lvls, us =      357,      357,      357,      357,      358)
[7.807s][info][gc,stats    ]   CTR: <total>                 =    0.000 s (a =      442 us) (n =     1) (lvls, us =      441,      441,      441,      441,      442)
[7.807s][info][gc,stats    ]   CTR: Thread Roots            =    0.000 s (a =      442 us) (n =     1) (lvls, us =      441,      441,      441,      441,      442)
[7.807s][info][gc,stats    ] Concurrent Weak References     =    0.000 s (a =      396 us) (n =     1) (lvls, us =      395,      395,      395,      395,      396)
[7.807s][info][gc,stats    ]   CWRF: <total>                =    0.000 s (a =      319 us) (n =     1) (lvls, us =      318,      318,      318,      318,      319)
[7.808s][info][gc,stats    ]   CWRF: Weak References        =    0.000 s (a =      319 us) (n =     1) (lvls, us =      318,      318,      318,      318,      319)
[7.808s][info][gc,stats    ] Concurrent Weak Roots          =    0.004 s (a =     3884 us) (n =     1) (lvls, us =     3867,     3867,     3867,     3867,     3884)
[7.808s][info][gc,stats    ]   Roots                        =    0.002 s (a =     1695 us) (n =     1) (lvls, us =     1680,     1680,     1680,     1680,     1695)
[7.808s][info][gc,stats    ]     CWR: <total>               =    0.003 s (a =     2511 us) (n =     1) (lvls, us =     2500,     2500,     2500,     2500,     2511)
[7.808s][info][gc,stats    ]     CWR: Code Cache Roots      =    0.001 s (a =      793 us) (n =     1) (lvls, us =      793,      793,      793,      793,      793)
[7.808s][info][gc,stats    ]     CWR: VM Weak Roots         =    0.002 s (a =     1702 us) (n =     1) (lvls, us =     1699,     1699,     1699,     1699,     1702)
[7.808s][info][gc,stats    ]     CWR: CLDG Roots            =    0.000 s (a =       16 us) (n =     1) (lvls, us =       15,       15,       15,       15,       16)
[7.808s][info][gc,stats    ]   Rendezvous                   =    0.002 s (a =     2113 us) (n =     1) (lvls, us =     2109,     2109,     2109,     2109,     2113)
[7.808s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =      127 us) (n =     1) (lvls, us =      125,      125,      125,      125,      127)
[7.808s][info][gc,stats    ] Concurrent Class Unloading     =    0.008 s (a =     8451 us) (n =     1) (lvls, us =     8438,     8438,     8438,     8438,     8451)
[7.808s][info][gc,stats    ]   Unlink Stale                 =    0.005 s (a =     4589 us) (n =     1) (lvls, us =     4570,     4570,     4570,     4570,     4589)
[7.808s][info][gc,stats    ]     System Dictionary          =    0.000 s (a =       71 us) (n =     1) (lvls, us =       71,       71,       71,       71,       71)
[7.808s][info][gc,stats    ]     Weak Class Links           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[7.808s][info][gc,stats    ]     Code Roots                 =    0.005 s (a =     4516 us) (n =     1) (lvls, us =     4512,     4512,     4512,     4512,     4516)
[7.809s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =       40 us) (n =     1) (lvls, us =       40,       40,       40,       40,       40)
[7.809s][info][gc,stats    ]   Purge Unlinked               =    0.004 s (a =     3779 us) (n =     1) (lvls, us =     3770,     3770,     3770,     3770,     3779)
[7.809s][info][gc,stats    ]     Code Roots                 =    0.004 s (a =     3750 us) (n =     1) (lvls, us =     3730,     3730,     3730,     3730,     3750)
[7.809s][info][gc,stats    ]     CLDG                       =    0.000 s (a =       29 us) (n =     1) (lvls, us =       29,       29,       29,       29,       29)
[7.809s][info][gc,stats    ]     Exception Caches           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[7.809s][info][gc,stats    ] Concurrent Strong Roots        =    0.002 s (a =     1636 us) (n =     1) (lvls, us =     1621,     1621,     1621,     1621,     1636)
[7.809s][info][gc,stats    ]   CSR: <total>                 =    0.001 s (a =     1454 us) (n =     1) (lvls, us =     1445,     1445,     1445,     1445,     1454)
[7.809s][info][gc,stats    ]   CSR: VM Strong Roots         =    0.000 s (a =       25 us) (n =     1) (lvls, us =       25,       25,       25,       25,       25)
[7.809s][info][gc,stats    ]   CSR: CLDG Roots              =    0.001 s (a =     1429 us) (n =     1) (lvls, us =     1426,     1426,     1426,     1426,     1429)
[7.809s][info][gc,stats    ] Concurrent Evacuation          =    0.008 s (a =     7548 us) (n =     1) (lvls, us =     7539,     7539,     7539,     7539,     7548)
[7.809s][info][gc,stats    ] Pause Init Update Refs (G)     =    0.001 s (a =      598 us) (n =     1) (lvls, us =      598,      598,      598,      598,      598)
[7.809s][info][gc,stats    ] Pause Init Update Refs (N)     =    0.000 s (a =       64 us) (n =     1) (lvls, us =       64,       64,       64,       64,       64)
[7.809s][info][gc,stats    ]   Manage GCLABs                =    0.000 s (a =        5 us) (n =     1) (lvls, us =        5,        5,        5,        5,        5)
[7.809s][info][gc,stats    ] Concurrent Update Refs         =    0.006 s (a =     6434 us) (n =     1) (lvls, us =     6426,     6426,     6426,     6426,     6434)
[7.810s][info][gc,stats    ] Concurrent Update Thread Roots =    0.000 s (a =      150 us) (n =     1) (lvls, us =      148,      148,      148,      148,      150)
[7.810s][info][gc,stats    ] Pause Final Update Refs (G)    =    0.000 s (a =      219 us) (n =     1) (lvls, us =      217,      217,      217,      217,      219)
[7.810s][info][gc,stats    ] Pause Final Update Refs (N)    =    0.000 s (a =       94 us) (n =     1) (lvls, us =       94,       94,       94,       94,       94)
[7.810s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       23 us) (n =     1) (lvls, us =       23,       23,       23,       23,       23)
[7.810s][info][gc,stats    ]   Trash Collection Set         =    0.000 s (a =        4 us) (n =     1) (lvls, us =        4,        4,        4,        4,        4)
[7.810s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       18 us) (n =     1) (lvls, us =       18,       18,       18,       18,       18)
[7.810s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =       98 us) (n =     1) (lvls, us =       98,       98,       98,       98,       98)
[7.810s][info][gc,stats    ] 
[7.810s][info][gc,stats    ] 
[7.810s][info][gc,stats    ] Under allocation pressure, concurrent cycles may cancel, and either continue cycle
[7.810s][info][gc,stats    ] under stop-the-world pause or result in stop-the-world Full GC. Increase heap size,
[7.810s][info][gc,stats    ] tune GC heuristics, set more aggressive pacing delay, or lower allocation rate
[7.810s][info][gc,stats    ] to avoid Degenerated and Full GC cycles.
[7.810s][info][gc,stats    ] 
[7.810s][info][gc,stats    ]     1 successful concurrent GCs
[7.810s][info][gc,stats    ]       0 invoked explicitly
[7.810s][info][gc,stats    ]       0 invoked implicitly
[7.810s][info][gc,stats    ] 
[7.810s][info][gc,stats    ]     0 Degenerated GCs
[7.811s][info][gc,stats    ]       0 caused by allocation failure
[7.811s][info][gc,stats    ]       0 upgraded to Full GC
[7.811s][info][gc,stats    ] 
[7.811s][info][gc,stats    ]     0 Full GCs
[7.811s][info][gc,stats    ]       0 invoked explicitly
[7.811s][info][gc,stats    ]       0 invoked implicitly
[7.811s][info][gc,stats    ]       0 caused by allocation failure
[7.811s][info][gc,stats    ]       0 upgraded from Degenerated GC
[7.811s][info][gc,stats    ] 
[7.811s][info][gc,stats    ] 
