[0.007s][info][gc] Heuristics ergonomically sets -XX:+ExplicitGCInvokesConcurrent
[0.007s][info][gc] Heuristics ergonomically sets -XX:+ShenandoahImplicitGCInvokesConcurrent
[0.007s][info][gc] Using Shenandoah
[0.008s][info][gc,ergo] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[0.008s][info][gc,init] Version: 21.0.7+6-Ubuntu-0ubuntu122.04 (release)
[0.008s][info][gc,init] CPUs: 4 total, 4 available
[0.009s][info][gc,init] Memory: 7937M
[0.009s][info][gc,init] Large Page Support: Disabled
[0.009s][info][gc,init] NUMA Support: Disabled
[0.009s][info][gc,init] Compressed Oops: Enabled (32-bit)
[0.009s][info][gc,init] Heap Min Capacity: 6656K
[0.009s][info][gc,init] Heap Initial Capacity: 127488K
[0.009s][info][gc,init] Heap Max Capacity: 2032128K
[0.009s][info][gc,init] Pre-touch: Disabled
[0.009s][info][gc,init] Mode: Snapshot-At-The-Beginning (SATB)
[0.009s][info][gc,init] Heuristics: Adaptive
[0.009s][info][gc,init] Heap Region Count: 3969
[0.009s][info][gc,init] Heap Region Size: 512K
[0.009s][info][gc,init] TLAB Size Max: 512K
[0.009s][info][gc,init] Humongous Object Threshold: 512K
[0.009s][info][gc,init] Parallel Workers: 8
[0.009s][info][gc,init] Concurrent Workers: 2
[0.019s][info][gc,metaspace] CDS archive(s) mapped at: [0x00007fa72f000000-0x00007fa72fc97000-0x00007fa72fc97000), size 13201408, SharedBaseAddress: 0x00007fa72f000000, ArchiveRelocationMode: 1.
[0.019s][info][gc,metaspace] Compressed class space mapped at: 0x00007fa730000000-0x00007fa770000000, reserved size: 1073741824
[0.019s][info][gc,metaspace] Narrow klass base: 0x00007fa72f000000, Narrow klass shift: 0, Narrow klass range: 0x100000000
[1.382s][info][gc          ] Trigger: Metadata GC Threshold
[1.382s][info][gc,ergo     ] Free: 1790M, Max: 512K regular, 1790M humongous, Frag: 0% external, 0% internal; Reserve: 101888K, Max: 512K
[1.383s][info][gc,start    ] GC(0) Concurrent reset
[1.383s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reset
[1.383s][info][gc,ergo     ] GC(0) Pacer for Reset. Non-Taxable: 1984M
[1.383s][info][gc          ] GC(0) Concurrent reset 0.444ms
[1.383s][info][gc,start    ] GC(0) Pause Init Mark (unload classes)
[1.384s][info][gc,task     ] GC(0) Using 8 of 8 workers for init marking
[1.384s][info][gc,ergo     ] GC(0) Pacer for Mark. Expected Live: 198M, Free: 1790M, Non-Taxable: 179M, Alloc Tax Rate: 0.1x
[1.384s][info][gc          ] GC(0) Pause Init Mark (unload classes) 0.478ms
[1.385s][info][gc,start    ] GC(0) Concurrent marking roots
[1.385s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking roots
[1.387s][info][gc          ] GC(0) Concurrent marking roots 1.865ms
[1.387s][info][gc,start    ] GC(0) Concurrent marking (unload classes)
[1.387s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking
[1.397s][info][gc          ] GC(0) Concurrent marking (unload classes) 10.802ms
[1.398s][info][gc,start    ] GC(0) Pause Final Mark (unload classes)
[1.398s][info][gc,task     ] GC(0) Using 8 of 8 workers for final marking
[1.398s][info][gc,ergo     ] GC(0) Adaptive CSet Selection. Target Free: 281M, Actual Free: 1893M, Max CSet: 84672K, Min Garbage: 0B
[1.398s][info][gc,ergo     ] GC(0) Collectable Garbage: 81788K (98%), Immediate: 5343K (6%), CSet: 76444K (92%)
[1.398s][info][gc,ergo     ] GC(0) Pacer for Evacuation. Used CSet: 83456K, Free: 1794M, Non-Taxable: 179M, Alloc Tax Rate: 1.1x
[1.398s][info][gc          ] GC(0) Pause Final Mark (unload classes) 0.254ms
[1.398s][info][gc,start    ] GC(0) Concurrent thread roots
[1.398s][info][gc,task     ] GC(0) Using 2 of 8 workers for Concurrent thread roots
[1.399s][info][gc          ] GC(0) Concurrent thread roots 0.270ms
[1.399s][info][gc,start    ] GC(0) Concurrent weak references
[1.399s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak references
[1.399s][info][gc,ref      ] GC(0) Encountered references: Soft: 3956, Weak: 2145, Final: 20, Phantom: 797
[1.399s][info][gc,ref      ] GC(0) Discovered  references: Soft: 0, Weak: 1253, Final: 16, Phantom: 487
[1.399s][info][gc,ref      ] GC(0) Enqueued    references: Soft: 0, Weak: 484, Final: 0, Phantom: 318
[1.399s][info][gc          ] GC(0) Concurrent weak references 0.283ms
[1.399s][info][gc,start    ] GC(0) Concurrent weak roots
[1.399s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak root
[1.402s][info][gc          ] GC(0) Concurrent weak roots 2.584ms
[1.402s][info][gc,start    ] GC(0) Concurrent cleanup
[1.402s][info][gc          ] GC(0) Concurrent cleanup 97M->91M(125M) 0.080ms
[1.402s][info][gc,ergo     ] GC(0) Free: 1793M, Max: 512K regular, 1788M humongous, Frag: 1% external, 0% internal; Reserve: 101037K, Max: 512K
[1.402s][info][gc,start    ] GC(0) Concurrent class unloading
[1.402s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent class unloading
[1.407s][info][gc          ] GC(0) Concurrent class unloading 5.197ms
[1.407s][info][gc,start    ] GC(0) Concurrent strong roots
[1.407s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent strong root
[1.409s][info][gc          ] GC(0) Concurrent strong roots 1.479ms
[1.409s][info][gc,start    ] GC(0) Concurrent evacuation
[1.409s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent evacuation
[1.413s][info][gc          ] GC(0) Concurrent evacuation 4.227ms
[1.413s][info][gc,start    ] GC(0) Pause Init Update Refs
[1.413s][info][gc,ergo     ] GC(0) Pacer for Update Refs. Used: 101418K, Free: 1793M, Non-Taxable: 179M, Alloc Tax Rate: 1.1x
[1.413s][info][gc          ] GC(0) Pause Init Update Refs 0.045ms
[1.413s][info][gc,start    ] GC(0) Concurrent update references
[1.413s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reference update
[1.417s][info][gc          ] GC(0) Concurrent update references 4.200ms
[1.417s][info][gc,start    ] GC(0) Concurrent update thread roots
[1.420s][info][gc          ] GC(0) Concurrent update thread roots 2.967ms
[1.420s][info][gc,start    ] GC(0) Pause Final Update Refs
[1.420s][info][gc,task     ] GC(0) Using 8 of 8 workers for final reference update
[1.420s][info][gc          ] GC(0) Pause Final Update Refs 0.097ms
[1.421s][info][gc,start    ] GC(0) Concurrent cleanup
[1.421s][info][gc          ] GC(0) Concurrent cleanup 99M->17M(132M) 0.102ms
[1.421s][info][gc,ergo     ] Free: 1867M, Max: 512K regular, 1780M humongous, Frag: 5% external, 0% internal; Reserve: 101888K, Max: 512K
[1.421s][info][gc,stats    ] 
[1.421s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[1.421s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[1.421s][info][gc,stats    ] 
[1.421s][info][gc,stats    ] Concurrent Reset                    496 us
[1.421s][info][gc,stats    ] Pause Init Mark (G)                1729 us
[1.421s][info][gc,stats    ] Pause Init Mark (N)                 500 us
[1.421s][info][gc,stats    ]   Update Region States               31 us
[1.421s][info][gc,stats    ] Concurrent Mark Roots              1894 us, parallelism: 1.75x
[1.421s][info][gc,stats    ]   CMR: <total>                     3323 us
[1.421s][info][gc,stats    ]   CMR: Thread Roots                1355 us, workers (us): 1250, 105, ---, ---, ---, ---, ---, ---, 
[1.421s][info][gc,stats    ]   CMR: VM Strong Roots              600 us, workers (us): 423, 177, ---, ---, ---, ---, ---, ---, 
[1.421s][info][gc,stats    ]   CMR: CLDG Roots                  1368 us, workers (us): ---, 1368, ---, ---, ---, ---, ---, ---, 
[1.421s][info][gc,stats    ] Concurrent Marking                10826 us
[1.421s][info][gc,stats    ] Pause Final Mark (G)                936 us
[1.421s][info][gc,stats    ] Pause Final Mark (N)                263 us
[1.421s][info][gc,stats    ]   Finish Mark                       103 us
[1.421s][info][gc,stats    ]   Update Region States               21 us
[1.421s][info][gc,stats    ]   Choose Collection Set              70 us
[1.421s][info][gc,stats    ]   Rebuild Free Set                   15 us
[1.421s][info][gc,stats    ] Concurrent Thread Roots             280 us, parallelism: 0.76x
[1.421s][info][gc,stats    ]   CTR: <total>                      213 us
[1.421s][info][gc,stats    ]   CTR: Thread Roots                 213 us, workers (us): 213,   0, ---, ---, ---, ---, ---, ---, 
[1.421s][info][gc,stats    ] Concurrent Weak References          456 us, parallelism: 0.63x
[1.421s][info][gc,stats    ]   CWRF: <total>                     288 us
[1.421s][info][gc,stats    ]   CWRF: Weak References             288 us, workers (us): 112, 176, ---, ---, ---, ---, ---, ---, 
[1.421s][info][gc,stats    ] Concurrent Weak Roots              2607 us
[1.421s][info][gc,stats    ]   Roots                            2002 us, parallelism: 1.59x
[1.421s][info][gc,stats    ]     CWR: <total>                   3183 us
[1.421s][info][gc,stats    ]     CWR: Code Cache Roots          1725 us, workers (us): 560, 1165, ---, ---, ---, ---, ---, ---, 
[1.421s][info][gc,stats    ]     CWR: VM Weak Roots             1447 us, workers (us): 776, 670, ---, ---, ---, ---, ---, ---, 
[1.421s][info][gc,stats    ]     CWR: CLDG Roots                  11 us, workers (us): ---,  11, ---, ---, ---, ---, ---, ---, 
[1.421s][info][gc,stats    ]   Rendezvous                        552 us
[1.421s][info][gc,stats    ] Concurrent Cleanup                   94 us
[1.421s][info][gc,stats    ] Concurrent Class Unloading         5213 us
[1.421s][info][gc,stats    ]   Unlink Stale                     2086 us
[1.421s][info][gc,stats    ]     System Dictionary                62 us
[1.421s][info][gc,stats    ]     Weak Class Links                  0 us
[1.421s][info][gc,stats    ]     Code Roots                     2023 us
[1.421s][info][gc,stats    ]   Rendezvous                         38 us
[1.421s][info][gc,stats    ]   Purge Unlinked                   3034 us
[1.421s][info][gc,stats    ]     Code Roots                     3025 us
[1.421s][info][gc,stats    ]     CLDG                              9 us
[1.421s][info][gc,stats    ]     Exception Caches                  0 us
[1.421s][info][gc,stats    ] Concurrent Strong Roots            1490 us, parallelism: 0.94x
[1.421s][info][gc,stats    ]   CSR: <total>                     1405 us
[1.421s][info][gc,stats    ]   CSR: VM Strong Roots               20 us, workers (us):  20,   0, ---, ---, ---, ---, ---, ---, 
[1.421s][info][gc,stats    ]   CSR: CLDG Roots                  1385 us, workers (us): 1385, ---, ---, ---, ---, ---, ---, ---, 
[1.421s][info][gc,stats    ] Concurrent Evacuation              4249 us
[1.421s][info][gc,stats    ] Pause Init Update Refs (G)          254 us
[1.421s][info][gc,stats    ] Pause Init Update Refs (N)           54 us
[1.421s][info][gc,stats    ]   Manage GCLABs                       4 us
[1.421s][info][gc,stats    ] Concurrent Update Refs             4226 us
[1.422s][info][gc,stats    ] Concurrent Update Thread Roots     3008 us
[1.422s][info][gc,stats    ] Pause Final Update Refs (G)         229 us
[1.422s][info][gc,stats    ] Pause Final Update Refs (N)         110 us
[1.422s][info][gc,stats    ]   Update Region States               22 us
[1.422s][info][gc,stats    ]   Trash Collection Set                5 us
[1.422s][info][gc,stats    ]   Rebuild Free Set                   22 us
[1.422s][info][gc,stats    ] Concurrent Cleanup                  114 us
[1.422s][info][gc,stats    ] 
[1.422s][info][gc,stats    ] Allocation pacing accrued:
[1.422s][info][gc,stats    ]       0 of  1413 ms (  0.0%): <total>
[1.422s][info][gc,stats    ]       0 of  1413 ms (  0.0%): <average total>
[1.422s][info][gc,stats    ] 
[1.422s][info][gc,metaspace] Metaspace: 21244K(21568K)->21484K(21824K) NonClass: 18907K(19072K)->19111K(19264K) Class: 2337K(2496K)->2373K(2560K)
[1.422s][info][gc,ergo     ] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[7.786s][info][gc          ] Cancelling GC: Stopping VM
[7.786s][info][gc,heap,exit] Heap
[7.786s][info][gc,heap,exit] Shenandoah Heap
[7.786s][info][gc,heap,exit]  1984M max, 1984M soft max, 132M committed, 37930K used
[7.786s][info][gc,heap,exit]  3969 x 512K regions
[7.786s][info][gc,heap,exit] Status: cancelled
[7.786s][info][gc,heap,exit] Reserved region:
[7.786s][info][gc,heap,exit]  - [0x0000000083f80000, 0x0000000100000000) 
[7.786s][info][gc,heap,exit] Collection set:
[7.786s][info][gc,heap,exit]  - map (vanilla): 0x000000000001107f
[7.786s][info][gc,heap,exit]  - map (biased):  0x0000000000010000
[7.786s][info][gc,heap,exit] 
[7.786s][info][gc,heap,exit]  Metaspace       used 25412K, committed 25728K, reserved 1114112K
[7.786s][info][gc,heap,exit]   class space    used 2924K, committed 3072K, reserved 1048576K
[7.786s][info][gc,stats    ] 
[7.787s][info][gc,stats    ] GC STATISTICS:
[7.787s][info][gc,stats    ]   "(G)" (gross) pauses include VM time: time to notify and block threads, do the pre-
[7.787s][info][gc,stats    ]         and post-safepoint housekeeping. Use -Xlog:safepoint+stats to dissect.
[7.787s][info][gc,stats    ]   "(N)" (net) pauses are the times spent in the actual GC code.
[7.787s][info][gc,stats    ]   "a" is average time for each phase, look at levels to see if average makes sense.
[7.787s][info][gc,stats    ]   "lvls" are quantiles: 0% (minimum), 25%, 50% (median), 75%, 100% (maximum).
[7.787s][info][gc,stats    ] 
[7.787s][info][gc,stats    ]   All times are wall-clock times, except per-root-class counters, that are sum over
[7.787s][info][gc,stats    ]   all workers. Dividing the <total> over the root stage time estimates parallelism.
[7.787s][info][gc,stats    ] 
[7.787s][info][gc,stats    ]   Pacing delays are measured from entering the pacing code till exiting it. Therefore,
[7.787s][info][gc,stats    ]   observed pacing delays may be higher than the threshold when paced thread spent more
[7.787s][info][gc,stats    ]   time in the pacing code. It usually happens when thread is de-scheduled while paced,
[7.787s][info][gc,stats    ]   OS takes longer to unblock the thread, or JVM experiences an STW pause.
[7.787s][info][gc,stats    ] 
[7.787s][info][gc,stats    ]   Higher delay would prevent application outpacing the GC, but it will hide the GC latencies
[7.787s][info][gc,stats    ]   from the STW pause times. Pacing affects the individual threads, and so it would also be
[7.787s][info][gc,stats    ]   invisible to the usual profiling tools, but would add up to end-to-end application latency.
[7.787s][info][gc,stats    ]   Raise max pacing delay with care.
[7.787s][info][gc,stats    ] 
[7.787s][info][gc,stats    ] Concurrent Reset               =    0.000 s (a =      496 us) (n =     1) (lvls, us =      496,      496,      496,      496,      496)
[7.787s][info][gc,stats    ] Pause Init Mark (G)            =    0.002 s (a =     1729 us) (n =     1) (lvls, us =     1719,     1719,     1719,     1719,     1729)
[7.787s][info][gc,stats    ] Pause Init Mark (N)            =    0.000 s (a =      500 us) (n =     1) (lvls, us =      498,      498,      498,      498,      500)
[7.787s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       31 us) (n =     1) (lvls, us =       31,       31,       31,       31,       31)
[7.787s][info][gc,stats    ] Concurrent Mark Roots          =    0.002 s (a =     1894 us) (n =     1) (lvls, us =     1875,     1875,     1875,     1875,     1894)
[7.787s][info][gc,stats    ]   CMR: <total>                 =    0.003 s (a =     3323 us) (n =     1) (lvls, us =     3320,     3320,     3320,     3320,     3323)
[7.787s][info][gc,stats    ]   CMR: Thread Roots            =    0.001 s (a =     1355 us) (n =     1) (lvls, us =     1348,     1348,     1348,     1348,     1355)
[7.787s][info][gc,stats    ]   CMR: VM Strong Roots         =    0.001 s (a =      600 us) (n =     1) (lvls, us =      600,      600,      600,      600,      600)
[7.787s][info][gc,stats    ]   CMR: CLDG Roots              =    0.001 s (a =     1368 us) (n =     1) (lvls, us =     1367,     1367,     1367,     1367,     1368)
[7.787s][info][gc,stats    ] Concurrent Marking             =    0.011 s (a =    10826 us) (n =     1) (lvls, us =    10742,    10742,    10742,    10742,    10826)
[7.787s][info][gc,stats    ] Pause Final Mark (G)           =    0.001 s (a =      936 us) (n =     1) (lvls, us =      936,      936,      936,      936,      936)
[7.787s][info][gc,stats    ] Pause Final Mark (N)           =    0.000 s (a =      263 us) (n =     1) (lvls, us =      262,      262,      262,      262,      263)
[7.787s][info][gc,stats    ]   Finish Mark                  =    0.000 s (a =      103 us) (n =     1) (lvls, us =      102,      102,      102,      102,      103)
[7.787s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       21 us) (n =     1) (lvls, us =       21,       21,       21,       21,       21)
[7.788s][info][gc,stats    ]   Choose Collection Set        =    0.000 s (a =       70 us) (n =     1) (lvls, us =       70,       70,       70,       70,       70)
[7.788s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       15 us) (n =     1) (lvls, us =       15,       15,       15,       15,       15)
[7.788s][info][gc,stats    ] Concurrent Thread Roots        =    0.000 s (a =      280 us) (n =     1) (lvls, us =      279,      279,      279,      279,      280)
[7.788s][info][gc,stats    ]   CTR: <total>                 =    0.000 s (a =      213 us) (n =     1) (lvls, us =      213,      213,      213,      213,      213)
[7.788s][info][gc,stats    ]   CTR: Thread Roots            =    0.000 s (a =      213 us) (n =     1) (lvls, us =      213,      213,      213,      213,      213)
[7.788s][info][gc,stats    ] Concurrent Weak References     =    0.000 s (a =      456 us) (n =     1) (lvls, us =      455,      455,      455,      455,      456)
[7.788s][info][gc,stats    ]   CWRF: <total>                =    0.000 s (a =      288 us) (n =     1) (lvls, us =      287,      287,      287,      287,      288)
[7.788s][info][gc,stats    ]   CWRF: Weak References        =    0.000 s (a =      288 us) (n =     1) (lvls, us =      287,      287,      287,      287,      288)
[7.788s][info][gc,stats    ] Concurrent Weak Roots          =    0.003 s (a =     2607 us) (n =     1) (lvls, us =     2598,     2598,     2598,     2598,     2607)
[7.788s][info][gc,stats    ]   Roots                        =    0.002 s (a =     2002 us) (n =     1) (lvls, us =     1992,     1992,     1992,     1992,     2002)
[7.788s][info][gc,stats    ]     CWR: <total>               =    0.003 s (a =     3183 us) (n =     1) (lvls, us =     3164,     3164,     3164,     3164,     3183)
[7.788s][info][gc,stats    ]     CWR: Code Cache Roots      =    0.002 s (a =     1725 us) (n =     1) (lvls, us =     1719,     1719,     1719,     1719,     1725)
[7.788s][info][gc,stats    ]     CWR: VM Weak Roots         =    0.001 s (a =     1447 us) (n =     1) (lvls, us =     1445,     1445,     1445,     1445,     1447)
[7.788s][info][gc,stats    ]     CWR: CLDG Roots            =    0.000 s (a =       11 us) (n =     1) (lvls, us =       11,       11,       11,       11,       11)
[7.788s][info][gc,stats    ]   Rendezvous                   =    0.001 s (a =      552 us) (n =     1) (lvls, us =      551,      551,      551,      551,      552)
[7.788s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =       94 us) (n =     1) (lvls, us =       94,       94,       94,       94,       94)
[7.788s][info][gc,stats    ] Concurrent Class Unloading     =    0.005 s (a =     5213 us) (n =     1) (lvls, us =     5195,     5195,     5195,     5195,     5213)
[7.788s][info][gc,stats    ]   Unlink Stale                 =    0.002 s (a =     2086 us) (n =     1) (lvls, us =     2070,     2070,     2070,     2070,     2086)
[7.788s][info][gc,stats    ]     System Dictionary          =    0.000 s (a =       62 us) (n =     1) (lvls, us =       62,       62,       62,       62,       62)
[7.788s][info][gc,stats    ]     Weak Class Links           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[7.788s][info][gc,stats    ]     Code Roots                 =    0.002 s (a =     2023 us) (n =     1) (lvls, us =     2012,     2012,     2012,     2012,     2023)
[7.788s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =       38 us) (n =     1) (lvls, us =       38,       38,       38,       38,       38)
[7.788s][info][gc,stats    ]   Purge Unlinked               =    0.003 s (a =     3034 us) (n =     1) (lvls, us =     3027,     3027,     3027,     3027,     3034)
[7.788s][info][gc,stats    ]     Code Roots                 =    0.003 s (a =     3025 us) (n =     1) (lvls, us =     3008,     3008,     3008,     3008,     3025)
[7.788s][info][gc,stats    ]     CLDG                       =    0.000 s (a =        9 us) (n =     1) (lvls, us =        9,        9,        9,        9,        9)
[7.788s][info][gc,stats    ]     Exception Caches           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[7.788s][info][gc,stats    ] Concurrent Strong Roots        =    0.001 s (a =     1490 us) (n =     1) (lvls, us =     1484,     1484,     1484,     1484,     1490)
[7.788s][info][gc,stats    ]   CSR: <total>                 =    0.001 s (a =     1405 us) (n =     1) (lvls, us =     1387,     1387,     1387,     1387,     1405)
[7.788s][info][gc,stats    ]   CSR: VM Strong Roots         =    0.000 s (a =       20 us) (n =     1) (lvls, us =       20,       20,       20,       20,       20)
[7.788s][info][gc,stats    ]   CSR: CLDG Roots              =    0.001 s (a =     1385 us) (n =     1) (lvls, us =     1367,     1367,     1367,     1367,     1385)
[7.788s][info][gc,stats    ] Concurrent Evacuation          =    0.004 s (a =     4249 us) (n =     1) (lvls, us =     4238,     4238,     4238,     4238,     4249)
[7.788s][info][gc,stats    ] Pause Init Update Refs (G)     =    0.000 s (a =      254 us) (n =     1) (lvls, us =      254,      254,      254,      254,      254)
[7.788s][info][gc,stats    ] Pause Init Update Refs (N)     =    0.000 s (a =       54 us) (n =     1) (lvls, us =       54,       54,       54,       54,       54)
[7.788s][info][gc,stats    ]   Manage GCLABs                =    0.000 s (a =        4 us) (n =     1) (lvls, us =        4,        4,        4,        4,        4)
[7.788s][info][gc,stats    ] Concurrent Update Refs         =    0.004 s (a =     4226 us) (n =     1) (lvls, us =     4219,     4219,     4219,     4219,     4226)
[7.788s][info][gc,stats    ] Concurrent Update Thread Roots =    0.003 s (a =     3008 us) (n =     1) (lvls, us =     3008,     3008,     3008,     3008,     3008)
[7.788s][info][gc,stats    ] Pause Final Update Refs (G)    =    0.000 s (a =      229 us) (n =     1) (lvls, us =      229,      229,      229,      229,      229)
[7.788s][info][gc,stats    ] Pause Final Update Refs (N)    =    0.000 s (a =      110 us) (n =     1) (lvls, us =      109,      109,      109,      109,      110)
[7.789s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       22 us) (n =     1) (lvls, us =       22,       22,       22,       22,       22)
[7.789s][info][gc,stats    ]   Trash Collection Set         =    0.000 s (a =        5 us) (n =     1) (lvls, us =        5,        5,        5,        5,        5)
[7.789s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       22 us) (n =     1) (lvls, us =       22,       22,       22,       22,       22)
[7.789s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =      114 us) (n =     1) (lvls, us =      113,      113,      113,      113,      114)
[7.789s][info][gc,stats    ] 
[7.789s][info][gc,stats    ] 
[7.789s][info][gc,stats    ] Under allocation pressure, concurrent cycles may cancel, and either continue cycle
[7.789s][info][gc,stats    ] under stop-the-world pause or result in stop-the-world Full GC. Increase heap size,
[7.789s][info][gc,stats    ] tune GC heuristics, set more aggressive pacing delay, or lower allocation rate
[7.789s][info][gc,stats    ] to avoid Degenerated and Full GC cycles.
[7.789s][info][gc,stats    ] 
[7.789s][info][gc,stats    ]     1 successful concurrent GCs
[7.789s][info][gc,stats    ]       0 invoked explicitly
[7.789s][info][gc,stats    ]       0 invoked implicitly
[7.789s][info][gc,stats    ] 
[7.789s][info][gc,stats    ]     0 Degenerated GCs
[7.789s][info][gc,stats    ]       0 caused by allocation failure
[7.789s][info][gc,stats    ]       0 upgraded to Full GC
[7.789s][info][gc,stats    ] 
[7.789s][info][gc,stats    ]     0 Full GCs
[7.789s][info][gc,stats    ]       0 invoked explicitly
[7.789s][info][gc,stats    ]       0 invoked implicitly
[7.789s][info][gc,stats    ]       0 caused by allocation failure
[7.789s][info][gc,stats    ]       0 upgraded from Degenerated GC
[7.789s][info][gc,stats    ] 
[7.789s][info][gc,stats    ] 
