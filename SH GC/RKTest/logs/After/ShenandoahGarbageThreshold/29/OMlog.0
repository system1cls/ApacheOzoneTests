[0.005s][info][gc] Heuristics ergonomically sets -XX:+ExplicitGCInvokesConcurrent
[0.005s][info][gc] Heuristics ergonomically sets -XX:+ShenandoahImplicitGCInvokesConcurrent
[0.011s][info][gc] Using Shenandoah
[0.012s][info][gc,ergo] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[0.012s][info][gc,init] Version: 21.0.7+6-Ubuntu-0ubuntu122.04 (release)
[0.012s][info][gc,init] CPUs: 4 total, 4 available
[0.012s][info][gc,init] Memory: 7937M
[0.012s][info][gc,init] Large Page Support: Disabled
[0.012s][info][gc,init] NUMA Support: Disabled
[0.012s][info][gc,init] Compressed Oops: Enabled (32-bit)
[0.012s][info][gc,init] Heap Min Capacity: 6656K
[0.012s][info][gc,init] Heap Initial Capacity: 127488K
[0.012s][info][gc,init] Heap Max Capacity: 2032128K
[0.012s][info][gc,init] Pre-touch: Disabled
[0.012s][info][gc,init] Mode: Snapshot-At-The-Beginning (SATB)
[0.012s][info][gc,init] Heuristics: Adaptive
[0.012s][info][gc,init] Heap Region Count: 3969
[0.012s][info][gc,init] Heap Region Size: 512K
[0.012s][info][gc,init] TLAB Size Max: 512K
[0.012s][info][gc,init] Humongous Object Threshold: 512K
[0.012s][info][gc,init] Parallel Workers: 8
[0.012s][info][gc,init] Concurrent Workers: 2
[0.020s][info][gc,metaspace] CDS archive(s) mapped at: [0x00007fcb7f000000-0x00007fcb7fc97000-0x00007fcb7fc97000), size 13201408, SharedBaseAddress: 0x00007fcb7f000000, ArchiveRelocationMode: 1.
[0.021s][info][gc,metaspace] Compressed class space mapped at: 0x00007fcb80000000-0x00007fcbc0000000, reserved size: 1073741824
[0.021s][info][gc,metaspace] Narrow klass base: 0x00007fcb7f000000, Narrow klass shift: 0, Narrow klass range: 0x100000000
[2.277s][info][gc          ] Trigger: Metadata GC Threshold
[2.277s][info][gc,ergo     ] Free: 1746M, Max: 512K regular, 1746M humongous, Frag: 0% external, 0% internal; Reserve: 101888K, Max: 512K
[2.277s][info][gc,start    ] GC(0) Concurrent reset
[2.282s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reset
[2.282s][info][gc,ergo     ] GC(0) Pacer for Reset. Non-Taxable: 1984M
[2.282s][info][gc          ] GC(0) Concurrent reset 4.944ms
[2.282s][info][gc,start    ] GC(0) Pause Init Mark (unload classes)
[2.283s][info][gc,task     ] GC(0) Using 8 of 8 workers for init marking
[2.283s][info][gc,ergo     ] GC(0) Pacer for Mark. Expected Live: 198M, Free: 1746M, Non-Taxable: 174M, Alloc Tax Rate: 0.1x
[2.283s][info][gc          ] GC(0) Pause Init Mark (unload classes) 0.578ms
[2.283s][info][gc,start    ] GC(0) Concurrent marking roots
[2.283s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking roots
[2.285s][info][gc          ] GC(0) Concurrent marking roots 2.290ms
[2.285s][info][gc,start    ] GC(0) Concurrent marking (unload classes)
[2.285s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking
[2.334s][info][gc          ] GC(0) Concurrent marking (unload classes) 48.932ms
[2.334s][info][gc,start    ] GC(0) Pause Final Mark (unload classes)
[2.334s][info][gc,task     ] GC(0) Using 8 of 8 workers for final marking
[2.334s][info][gc,ergo     ] GC(0) Adaptive CSet Selection. Target Free: 281M, Actual Free: 1848M, Max CSet: 84672K, Min Garbage: 0B
[2.334s][info][gc,ergo     ] GC(0) Collectable Garbage: 72806K (98%), Immediate: 5359K (7%), CSet: 67447K (91%)
[2.335s][info][gc,ergo     ] GC(0) Pacer for Evacuation. Used CSet: 74752K, Free: 1749M, Non-Taxable: 174M, Alloc Tax Rate: 1.1x
[2.335s][info][gc          ] GC(0) Pause Final Mark (unload classes) 0.402ms
[2.335s][info][gc,start    ] GC(0) Concurrent thread roots
[2.335s][info][gc,task     ] GC(0) Using 2 of 8 workers for Concurrent thread roots
[2.335s][info][gc          ] GC(0) Concurrent thread roots 0.338ms
[2.335s][info][gc,start    ] GC(0) Concurrent weak references
[2.335s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak references
[2.335s][info][gc,ref      ] GC(0) Encountered references: Soft: 3957, Weak: 2104, Final: 4, Phantom: 822
[2.335s][info][gc,ref      ] GC(0) Discovered  references: Soft: 0, Weak: 985, Final: 0, Phantom: 679
[2.335s][info][gc,ref      ] GC(0) Enqueued    references: Soft: 0, Weak: 502, Final: 0, Phantom: 231
[2.335s][info][gc          ] GC(0) Concurrent weak references 0.335ms
[2.335s][info][gc,start    ] GC(0) Concurrent weak roots
[2.335s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak root
[2.340s][info][gc          ] GC(0) Concurrent weak roots 4.961ms
[2.340s][info][gc,start    ] GC(0) Concurrent cleanup
[2.340s][info][gc          ] GC(0) Concurrent cleanup 140M->135M(144M) 0.101ms
[2.340s][info][gc,ergo     ] GC(0) Free: 1748M, Max: 512K regular, 1742M humongous, Frag: 1% external, 0% internal; Reserve: 100855K, Max: 512K
[2.340s][info][gc,start    ] GC(0) Concurrent class unloading
[2.340s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent class unloading
[2.349s][info][gc          ] GC(0) Concurrent class unloading 8.868ms
[2.349s][info][gc,start    ] GC(0) Concurrent strong roots
[2.349s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent strong root
[2.351s][info][gc          ] GC(0) Concurrent strong roots 1.427ms
[2.351s][info][gc,start    ] GC(0) Concurrent evacuation
[2.351s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent evacuation
[2.361s][info][gc          ] GC(0) Concurrent evacuation 10.541ms
[2.362s][info][gc,start    ] GC(0) Pause Init Update Refs
[2.362s][info][gc,ergo     ] GC(0) Pacer for Update Refs. Used: 143M, Free: 1747M, Non-Taxable: 174M, Alloc Tax Rate: 1.1x
[2.362s][info][gc          ] GC(0) Pause Init Update Refs 0.072ms
[2.365s][info][gc,start    ] GC(0) Concurrent update references
[2.365s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reference update
[2.400s][info][gc          ] GC(0) Concurrent update references 34.791ms
[2.400s][info][gc,start    ] GC(0) Concurrent update thread roots
[2.400s][info][gc          ] GC(0) Concurrent update thread roots 0.356ms
[2.400s][info][gc,start    ] GC(0) Pause Final Update Refs
[2.400s][info][gc,task     ] GC(0) Using 8 of 8 workers for final reference update
[2.400s][info][gc          ] GC(0) Pause Final Update Refs 0.176ms
[2.400s][info][gc,start    ] GC(0) Concurrent cleanup
[2.401s][info][gc          ] GC(0) Concurrent cleanup 144M->71M(150M) 0.110ms
[2.401s][info][gc,ergo     ] Free: 1811M, Max: 512K regular, 1734M humongous, Frag: 5% external, 0% internal; Reserve: 101888K, Max: 512K
[2.401s][info][gc,stats    ] 
[2.401s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[2.401s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[2.401s][info][gc,stats    ] 
[2.401s][info][gc,stats    ] Concurrent Reset                   4976 us
[2.401s][info][gc,stats    ] Pause Init Mark (G)                 787 us
[2.401s][info][gc,stats    ] Pause Init Mark (N)                 595 us
[2.401s][info][gc,stats    ]   Update Region States               22 us
[2.401s][info][gc,stats    ] Concurrent Mark Roots              2313 us, parallelism: 1.88x
[2.401s][info][gc,stats    ]   CMR: <total>                     4344 us
[2.401s][info][gc,stats    ]   CMR: Thread Roots                 749 us, workers (us): 749,   0, ---, ---, ---, ---, ---, ---, 
[2.401s][info][gc,stats    ]   CMR: VM Strong Roots             2493 us, workers (us): 341, 2152, ---, ---, ---, ---, ---, ---, 
[2.401s][info][gc,stats    ]   CMR: CLDG Roots                  1102 us, workers (us): 1102, ---, ---, ---, ---, ---, ---, ---, 
[2.401s][info][gc,stats    ] Concurrent Marking                48961 us
[2.401s][info][gc,stats    ] Pause Final Mark (G)                532 us
[2.401s][info][gc,stats    ] Pause Final Mark (N)                421 us
[2.401s][info][gc,stats    ]   Finish Mark                       137 us
[2.401s][info][gc,stats    ]   Update Region States               38 us
[2.401s][info][gc,stats    ]   Choose Collection Set              94 us
[2.401s][info][gc,stats    ]   Rebuild Free Set                   35 us
[2.401s][info][gc,stats    ] Concurrent Thread Roots             348 us, parallelism: 0.83x
[2.401s][info][gc,stats    ]   CTR: <total>                      288 us
[2.401s][info][gc,stats    ]   CTR: Thread Roots                 288 us, workers (us): 288,   0, ---, ---, ---, ---, ---, ---, 
[2.401s][info][gc,stats    ] Concurrent Weak References          343 us, parallelism: 1.14x
[2.401s][info][gc,stats    ]   CWRF: <total>                     392 us
[2.401s][info][gc,stats    ]   CWRF: Weak References             392 us, workers (us): 266, 126, ---, ---, ---, ---, ---, ---, 
[2.401s][info][gc,stats    ] Concurrent Weak Roots              4987 us
[2.401s][info][gc,stats    ]   Roots                            4819 us, parallelism: 0.60x
[2.401s][info][gc,stats    ]     CWR: <total>                   2898 us
[2.401s][info][gc,stats    ]     CWR: Code Cache Roots           832 us, workers (us): 832,   0, ---, ---, ---, ---, ---, ---, 
[2.401s][info][gc,stats    ]     CWR: VM Weak Roots             2045 us, workers (us): 2044,   1, ---, ---, ---, ---, ---, ---, 
[2.401s][info][gc,stats    ]     CWR: CLDG Roots                  21 us, workers (us):  21, ---, ---, ---, ---, ---, ---, ---, 
[2.401s][info][gc,stats    ]   Rendezvous                        124 us
[2.401s][info][gc,stats    ] Concurrent Cleanup                  115 us
[2.401s][info][gc,stats    ] Concurrent Class Unloading         8885 us
[2.401s][info][gc,stats    ]   Unlink Stale                     6162 us
[2.401s][info][gc,stats    ]     System Dictionary                42 us
[2.401s][info][gc,stats    ]     Weak Class Links                  0 us
[2.401s][info][gc,stats    ]     Code Roots                     6118 us
[2.401s][info][gc,stats    ]   Rendezvous                        119 us
[2.401s][info][gc,stats    ]   Purge Unlinked                   2561 us
[2.401s][info][gc,stats    ]     Code Roots                     2551 us
[2.401s][info][gc,stats    ]     CLDG                              9 us
[2.401s][info][gc,stats    ]     Exception Caches                  0 us
[2.401s][info][gc,stats    ] Concurrent Strong Roots            1446 us, parallelism: 0.95x
[2.401s][info][gc,stats    ]   CSR: <total>                     1368 us
[2.401s][info][gc,stats    ]   CSR: VM Strong Roots               23 us, workers (us):  23,   0, ---, ---, ---, ---, ---, ---, 
[2.401s][info][gc,stats    ]   CSR: CLDG Roots                  1344 us, workers (us): 1344, ---, ---, ---, ---, ---, ---, ---, 
[2.401s][info][gc,stats    ] Concurrent Evacuation             10560 us
[2.401s][info][gc,stats    ] Pause Init Update Refs (G)         3478 us
[2.401s][info][gc,stats    ] Pause Init Update Refs (N)           83 us
[2.401s][info][gc,stats    ]   Manage GCLABs                       5 us
[2.401s][info][gc,stats    ] Concurrent Update Refs            34830 us
[2.401s][info][gc,stats    ] Concurrent Update Thread Roots      384 us
[2.401s][info][gc,stats    ] Pause Final Update Refs (G)         357 us
[2.401s][info][gc,stats    ] Pause Final Update Refs (N)         219 us
[2.401s][info][gc,stats    ]   Update Region States               48 us
[2.401s][info][gc,stats    ]   Trash Collection Set                4 us
[2.401s][info][gc,stats    ]   Rebuild Free Set                   23 us
[2.401s][info][gc,stats    ] Concurrent Cleanup                  124 us
[2.401s][info][gc,stats    ] 
[2.401s][info][gc,stats    ] Allocation pacing accrued:
[2.401s][info][gc,stats    ]       0 of  2389 ms (  0.0%): <total>
[2.401s][info][gc,stats    ]       0 of  2389 ms (  0.0%): <average total>
[2.401s][info][gc,stats    ] 
[2.401s][info][gc,metaspace] Metaspace: 21237K(21632K)->21767K(22144K) NonClass: 18886K(19072K)->19343K(19520K) Class: 2350K(2560K)->2423K(2624K)
[2.401s][info][gc,ergo     ] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[8.721s][info][gc          ] Cancelling GC: Stopping VM
[8.722s][info][gc,heap,exit] Heap
[8.722s][info][gc,heap,exit] Shenandoah Heap
[8.722s][info][gc,heap,exit]  1984M max, 1984M soft max, 150M committed, 84925K used
[8.722s][info][gc,heap,exit]  3969 x 512K regions
[8.722s][info][gc,heap,exit] Status: cancelled
[8.722s][info][gc,heap,exit] Reserved region:
[8.722s][info][gc,heap,exit]  - [0x0000000083f80000, 0x0000000100000000) 
[8.722s][info][gc,heap,exit] Collection set:
[8.722s][info][gc,heap,exit]  - map (vanilla): 0x000000000001107f
[8.722s][info][gc,heap,exit]  - map (biased):  0x0000000000010000
[8.722s][info][gc,heap,exit] 
[8.722s][info][gc,heap,exit]  Metaspace       used 25086K, committed 25408K, reserved 1114112K
[8.722s][info][gc,heap,exit]   class space    used 2774K, committed 2880K, reserved 1048576K
[8.722s][info][gc,stats    ] 
[8.722s][info][gc,stats    ] GC STATISTICS:
[8.722s][info][gc,stats    ]   "(G)" (gross) pauses include VM time: time to notify and block threads, do the pre-
[8.722s][info][gc,stats    ]         and post-safepoint housekeeping. Use -Xlog:safepoint+stats to dissect.
[8.722s][info][gc,stats    ]   "(N)" (net) pauses are the times spent in the actual GC code.
[8.722s][info][gc,stats    ]   "a" is average time for each phase, look at levels to see if average makes sense.
[8.722s][info][gc,stats    ]   "lvls" are quantiles: 0% (minimum), 25%, 50% (median), 75%, 100% (maximum).
[8.722s][info][gc,stats    ] 
[8.722s][info][gc,stats    ]   All times are wall-clock times, except per-root-class counters, that are sum over
[8.722s][info][gc,stats    ]   all workers. Dividing the <total> over the root stage time estimates parallelism.
[8.722s][info][gc,stats    ] 
[8.722s][info][gc,stats    ]   Pacing delays are measured from entering the pacing code till exiting it. Therefore,
[8.722s][info][gc,stats    ]   observed pacing delays may be higher than the threshold when paced thread spent more
[8.722s][info][gc,stats    ]   time in the pacing code. It usually happens when thread is de-scheduled while paced,
[8.722s][info][gc,stats    ]   OS takes longer to unblock the thread, or JVM experiences an STW pause.
[8.722s][info][gc,stats    ] 
[8.722s][info][gc,stats    ]   Higher delay would prevent application outpacing the GC, but it will hide the GC latencies
[8.722s][info][gc,stats    ]   from the STW pause times. Pacing affects the individual threads, and so it would also be
[8.722s][info][gc,stats    ]   invisible to the usual profiling tools, but would add up to end-to-end application latency.
[8.722s][info][gc,stats    ]   Raise max pacing delay with care.
[8.722s][info][gc,stats    ] 
[8.722s][info][gc,stats    ] Concurrent Reset               =    0.005 s (a =     4976 us) (n =     1) (lvls, us =     4961,     4961,     4961,     4961,     4976)
[8.722s][info][gc,stats    ] Pause Init Mark (G)            =    0.001 s (a =      787 us) (n =     1) (lvls, us =      785,      785,      785,      785,      787)
[8.722s][info][gc,stats    ] Pause Init Mark (N)            =    0.001 s (a =      595 us) (n =     1) (lvls, us =      594,      594,      594,      594,      595)
[8.722s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       22 us) (n =     1) (lvls, us =       22,       22,       22,       22,       22)
[8.722s][info][gc,stats    ] Concurrent Mark Roots          =    0.002 s (a =     2313 us) (n =     1) (lvls, us =     2305,     2305,     2305,     2305,     2313)
[8.722s][info][gc,stats    ]   CMR: <total>                 =    0.004 s (a =     4344 us) (n =     1) (lvls, us =     4336,     4336,     4336,     4336,     4344)
[8.722s][info][gc,stats    ]   CMR: Thread Roots            =    0.001 s (a =      749 us) (n =     1) (lvls, us =      748,      748,      748,      748,      749)
[8.722s][info][gc,stats    ]   CMR: VM Strong Roots         =    0.002 s (a =     2493 us) (n =     1) (lvls, us =     2480,     2480,     2480,     2480,     2493)
[8.722s][info][gc,stats    ]   CMR: CLDG Roots              =    0.001 s (a =     1102 us) (n =     1) (lvls, us =     1094,     1094,     1094,     1094,     1102)
[8.722s][info][gc,stats    ] Concurrent Marking             =    0.049 s (a =    48961 us) (n =     1) (lvls, us =    48828,    48828,    48828,    48828,    48961)
[8.722s][info][gc,stats    ] Pause Final Mark (G)           =    0.001 s (a =      532 us) (n =     1) (lvls, us =      531,      531,      531,      531,      532)
[8.722s][info][gc,stats    ] Pause Final Mark (N)           =    0.000 s (a =      421 us) (n =     1) (lvls, us =      420,      420,      420,      420,      421)
[8.722s][info][gc,stats    ]   Finish Mark                  =    0.000 s (a =      137 us) (n =     1) (lvls, us =      137,      137,      137,      137,      137)
[8.722s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       38 us) (n =     1) (lvls, us =       38,       38,       38,       38,       38)
[8.722s][info][gc,stats    ]   Choose Collection Set        =    0.000 s (a =       94 us) (n =     1) (lvls, us =       94,       94,       94,       94,       94)
[8.722s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       35 us) (n =     1) (lvls, us =       35,       35,       35,       35,       35)
[8.722s][info][gc,stats    ] Concurrent Thread Roots        =    0.000 s (a =      348 us) (n =     1) (lvls, us =      348,      348,      348,      348,      348)
[8.722s][info][gc,stats    ]   CTR: <total>                 =    0.000 s (a =      288 us) (n =     1) (lvls, us =      287,      287,      287,      287,      288)
[8.722s][info][gc,stats    ]   CTR: Thread Roots            =    0.000 s (a =      288 us) (n =     1) (lvls, us =      287,      287,      287,      287,      288)
[8.722s][info][gc,stats    ] Concurrent Weak References     =    0.000 s (a =      343 us) (n =     1) (lvls, us =      342,      342,      342,      342,      343)
[8.722s][info][gc,stats    ]   CWRF: <total>                =    0.000 s (a =      392 us) (n =     1) (lvls, us =      391,      391,      391,      391,      392)
[8.722s][info][gc,stats    ]   CWRF: Weak References        =    0.000 s (a =      392 us) (n =     1) (lvls, us =      391,      391,      391,      391,      392)
[8.722s][info][gc,stats    ] Concurrent Weak Roots          =    0.005 s (a =     4987 us) (n =     1) (lvls, us =     4980,     4980,     4980,     4980,     4987)
[8.722s][info][gc,stats    ]   Roots                        =    0.005 s (a =     4819 us) (n =     1) (lvls, us =     4805,     4805,     4805,     4805,     4819)
[8.722s][info][gc,stats    ]     CWR: <total>               =    0.003 s (a =     2898 us) (n =     1) (lvls, us =     2891,     2891,     2891,     2891,     2898)
[8.722s][info][gc,stats    ]     CWR: Code Cache Roots      =    0.001 s (a =      832 us) (n =     1) (lvls, us =      830,      830,      830,      830,      832)
[8.722s][info][gc,stats    ]     CWR: VM Weak Roots         =    0.002 s (a =     2045 us) (n =     1) (lvls, us =     2031,     2031,     2031,     2031,     2045)
[8.722s][info][gc,stats    ]     CWR: CLDG Roots            =    0.000 s (a =       21 us) (n =     1) (lvls, us =       21,       21,       21,       21,       21)
[8.722s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =      124 us) (n =     1) (lvls, us =      123,      123,      123,      123,      124)
[8.722s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =      115 us) (n =     1) (lvls, us =      113,      113,      113,      113,      115)
[8.722s][info][gc,stats    ] Concurrent Class Unloading     =    0.009 s (a =     8885 us) (n =     1) (lvls, us =     8867,     8867,     8867,     8867,     8885)
[8.722s][info][gc,stats    ]   Unlink Stale                 =    0.006 s (a =     6162 us) (n =     1) (lvls, us =     6152,     6152,     6152,     6152,     6162)
[8.722s][info][gc,stats    ]     System Dictionary          =    0.000 s (a =       42 us) (n =     1) (lvls, us =       42,       42,       42,       42,       42)
[8.722s][info][gc,stats    ]     Weak Class Links           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[8.722s][info][gc,stats    ]     Code Roots                 =    0.006 s (a =     6118 us) (n =     1) (lvls, us =     6113,     6113,     6113,     6113,     6118)
[8.722s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =      119 us) (n =     1) (lvls, us =      117,      117,      117,      117,      119)
[8.722s][info][gc,stats    ]   Purge Unlinked               =    0.003 s (a =     2561 us) (n =     1) (lvls, us =     2559,     2559,     2559,     2559,     2561)
[8.722s][info][gc,stats    ]     Code Roots                 =    0.003 s (a =     2551 us) (n =     1) (lvls, us =     2539,     2539,     2539,     2539,     2551)
[8.722s][info][gc,stats    ]     CLDG                       =    0.000 s (a =        9 us) (n =     1) (lvls, us =        9,        9,        9,        9,        9)
[8.722s][info][gc,stats    ]     Exception Caches           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[8.722s][info][gc,stats    ] Concurrent Strong Roots        =    0.001 s (a =     1446 us) (n =     1) (lvls, us =     1445,     1445,     1445,     1445,     1446)
[8.722s][info][gc,stats    ]   CSR: <total>                 =    0.001 s (a =     1368 us) (n =     1) (lvls, us =     1367,     1367,     1367,     1367,     1368)
[8.722s][info][gc,stats    ]   CSR: VM Strong Roots         =    0.000 s (a =       23 us) (n =     1) (lvls, us =       23,       23,       23,       23,       23)
[8.722s][info][gc,stats    ]   CSR: CLDG Roots              =    0.001 s (a =     1344 us) (n =     1) (lvls, us =     1328,     1328,     1328,     1328,     1344)
[8.722s][info][gc,stats    ] Concurrent Evacuation          =    0.011 s (a =    10560 us) (n =     1) (lvls, us =    10547,    10547,    10547,    10547,    10560)
[8.722s][info][gc,stats    ] Pause Init Update Refs (G)     =    0.003 s (a =     3478 us) (n =     1) (lvls, us =     3477,     3477,     3477,     3477,     3478)
[8.722s][info][gc,stats    ] Pause Init Update Refs (N)     =    0.000 s (a =       83 us) (n =     1) (lvls, us =       83,       83,       83,       83,       83)
[8.722s][info][gc,stats    ]   Manage GCLABs                =    0.000 s (a =        5 us) (n =     1) (lvls, us =        5,        5,        5,        5,        5)
[8.722s][info][gc,stats    ] Concurrent Update Refs         =    0.035 s (a =    34830 us) (n =     1) (lvls, us =    34766,    34766,    34766,    34766,    34830)
[8.722s][info][gc,stats    ] Concurrent Update Thread Roots =    0.000 s (a =      384 us) (n =     1) (lvls, us =      383,      383,      383,      383,      384)
[8.722s][info][gc,stats    ] Pause Final Update Refs (G)    =    0.000 s (a =      357 us) (n =     1) (lvls, us =      355,      355,      355,      355,      357)
[8.722s][info][gc,stats    ] Pause Final Update Refs (N)    =    0.000 s (a =      219 us) (n =     1) (lvls, us =      219,      219,      219,      219,      219)
[8.722s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       48 us) (n =     1) (lvls, us =       48,       48,       48,       48,       48)
[8.722s][info][gc,stats    ]   Trash Collection Set         =    0.000 s (a =        4 us) (n =     1) (lvls, us =        4,        4,        4,        4,        4)
[8.722s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       23 us) (n =     1) (lvls, us =       23,       23,       23,       23,       23)
[8.722s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =      124 us) (n =     1) (lvls, us =      123,      123,      123,      123,      124)
[8.723s][info][gc,stats    ] 
[8.723s][info][gc,stats    ] 
[8.723s][info][gc,stats    ] Under allocation pressure, concurrent cycles may cancel, and either continue cycle
[8.723s][info][gc,stats    ] under stop-the-world pause or result in stop-the-world Full GC. Increase heap size,
[8.723s][info][gc,stats    ] tune GC heuristics, set more aggressive pacing delay, or lower allocation rate
[8.723s][info][gc,stats    ] to avoid Degenerated and Full GC cycles.
[8.723s][info][gc,stats    ] 
[8.723s][info][gc,stats    ]     1 successful concurrent GCs
[8.723s][info][gc,stats    ]       0 invoked explicitly
[8.723s][info][gc,stats    ]       0 invoked implicitly
[8.723s][info][gc,stats    ] 
[8.723s][info][gc,stats    ]     0 Degenerated GCs
[8.723s][info][gc,stats    ]       0 caused by allocation failure
[8.723s][info][gc,stats    ]       0 upgraded to Full GC
[8.723s][info][gc,stats    ] 
[8.723s][info][gc,stats    ]     0 Full GCs
[8.723s][info][gc,stats    ]       0 invoked explicitly
[8.723s][info][gc,stats    ]       0 invoked implicitly
[8.723s][info][gc,stats    ]       0 caused by allocation failure
[8.723s][info][gc,stats    ]       0 upgraded from Degenerated GC
[8.723s][info][gc,stats    ] 
[8.723s][info][gc,stats    ] 
