[0.006s][info][gc] Heuristics ergonomically sets -XX:+ExplicitGCInvokesConcurrent
[0.006s][info][gc] Heuristics ergonomically sets -XX:+ShenandoahImplicitGCInvokesConcurrent
[0.007s][info][gc] Using Shenandoah
[0.008s][info][gc,ergo] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[0.008s][info][gc,init] Version: 21.0.7+6-Ubuntu-0ubuntu122.04 (release)
[0.008s][info][gc,init] CPUs: 4 total, 4 available
[0.008s][info][gc,init] Memory: 7937M
[0.008s][info][gc,init] Large Page Support: Disabled
[0.008s][info][gc,init] NUMA Support: Disabled
[0.008s][info][gc,init] Compressed Oops: Enabled (32-bit)
[0.008s][info][gc,init] Heap Min Capacity: 6656K
[0.008s][info][gc,init] Heap Initial Capacity: 127488K
[0.008s][info][gc,init] Heap Max Capacity: 2032128K
[0.008s][info][gc,init] Pre-touch: Disabled
[0.008s][info][gc,init] Mode: Snapshot-At-The-Beginning (SATB)
[0.008s][info][gc,init] Heuristics: Adaptive
[0.008s][info][gc,init] Heap Region Count: 3969
[0.008s][info][gc,init] Heap Region Size: 512K
[0.008s][info][gc,init] TLAB Size Max: 512K
[0.008s][info][gc,init] Humongous Object Threshold: 512K
[0.008s][info][gc,init] Parallel Workers: 8
[0.008s][info][gc,init] Concurrent Workers: 2
[0.016s][info][gc,metaspace] CDS archive(s) mapped at: [0x00007fb92b000000-0x00007fb92bc97000-0x00007fb92bc97000), size 13201408, SharedBaseAddress: 0x00007fb92b000000, ArchiveRelocationMode: 1.
[0.016s][info][gc,metaspace] Compressed class space mapped at: 0x00007fb92c000000-0x00007fb96c000000, reserved size: 1073741824
[0.016s][info][gc,metaspace] Narrow klass base: 0x00007fb92b000000, Narrow klass shift: 0, Narrow klass range: 0x100000000
[1.286s][info][gc          ] Trigger: Metadata GC Threshold
[1.287s][info][gc,ergo     ] Free: 1790M, Max: 512K regular, 1790M humongous, Frag: 0% external, 0% internal; Reserve: 101888K, Max: 512K
[1.287s][info][gc,start    ] GC(0) Concurrent reset
[1.287s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reset
[1.287s][info][gc,ergo     ] GC(0) Pacer for Reset. Non-Taxable: 1984M
[1.287s][info][gc          ] GC(0) Concurrent reset 0.472ms
[1.287s][info][gc,start    ] GC(0) Pause Init Mark (unload classes)
[1.288s][info][gc,task     ] GC(0) Using 8 of 8 workers for init marking
[1.288s][info][gc,ergo     ] GC(0) Pacer for Mark. Expected Live: 198M, Free: 1790M, Non-Taxable: 179M, Alloc Tax Rate: 0.1x
[1.288s][info][gc          ] GC(0) Pause Init Mark (unload classes) 0.614ms
[1.288s][info][gc,start    ] GC(0) Concurrent marking roots
[1.288s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking roots
[1.290s][info][gc          ] GC(0) Concurrent marking roots 2.420ms
[1.290s][info][gc,start    ] GC(0) Concurrent marking (unload classes)
[1.290s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking
[1.304s][info][gc          ] GC(0) Concurrent marking (unload classes) 13.183ms
[1.304s][info][gc,start    ] GC(0) Pause Final Mark (unload classes)
[1.304s][info][gc,task     ] GC(0) Using 8 of 8 workers for final marking
[1.305s][info][gc,ergo     ] GC(0) Adaptive CSet Selection. Target Free: 281M, Actual Free: 1892M, Max CSet: 84672K, Min Garbage: 0B
[1.305s][info][gc,ergo     ] GC(0) Collectable Garbage: 82089K (99%), Immediate: 5343K (6%), CSet: 76746K (92%)
[1.305s][info][gc,ergo     ] GC(0) Pacer for Evacuation. Used CSet: 84480K, Free: 1793M, Non-Taxable: 179M, Alloc Tax Rate: 1.1x
[1.305s][info][gc          ] GC(0) Pause Final Mark (unload classes) 1.309ms
[1.305s][info][gc,start    ] GC(0) Concurrent thread roots
[1.305s][info][gc,task     ] GC(0) Using 2 of 8 workers for Concurrent thread roots
[1.305s][info][gc          ] GC(0) Concurrent thread roots 0.228ms
[1.305s][info][gc,start    ] GC(0) Concurrent weak references
[1.305s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak references
[1.306s][info][gc,ref      ] GC(0) Encountered references: Soft: 3955, Weak: 2133, Final: 20, Phantom: 795
[1.306s][info][gc,ref      ] GC(0) Discovered  references: Soft: 0, Weak: 787, Final: 0, Phantom: 484
[1.306s][info][gc,ref      ] GC(0) Enqueued    references: Soft: 0, Weak: 481, Final: 0, Phantom: 316
[1.306s][info][gc          ] GC(0) Concurrent weak references 0.282ms
[1.306s][info][gc,start    ] GC(0) Concurrent weak roots
[1.306s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak root
[1.308s][info][gc          ] GC(0) Concurrent weak roots 2.178ms
[1.308s][info][gc,start    ] GC(0) Concurrent cleanup
[1.308s][info][gc          ] GC(0) Concurrent cleanup 97M->92M(125M) 0.064ms
[1.308s][info][gc,ergo     ] GC(0) Free: 1793M, Max: 512K regular, 1787M humongous, Frag: 1% external, 0% internal; Reserve: 101005K, Max: 512K
[1.308s][info][gc,start    ] GC(0) Concurrent class unloading
[1.308s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent class unloading
[1.314s][info][gc          ] GC(0) Concurrent class unloading 6.445ms
[1.314s][info][gc,start    ] GC(0) Concurrent strong roots
[1.314s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent strong root
[1.316s][info][gc          ] GC(0) Concurrent strong roots 1.510ms
[1.316s][info][gc,start    ] GC(0) Concurrent evacuation
[1.316s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent evacuation
[1.324s][info][gc          ] GC(0) Concurrent evacuation 7.895ms
[1.324s][info][gc,start    ] GC(0) Pause Init Update Refs
[1.324s][info][gc,ergo     ] GC(0) Pacer for Update Refs. Used: 100M, Free: 1793M, Non-Taxable: 179M, Alloc Tax Rate: 1.1x
[1.324s][info][gc          ] GC(0) Pause Init Update Refs 0.043ms
[1.324s][info][gc,start    ] GC(0) Concurrent update references
[1.324s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reference update
[1.329s][info][gc          ] GC(0) Concurrent update references 4.667ms
[1.329s][info][gc,start    ] GC(0) Concurrent update thread roots
[1.329s][info][gc          ] GC(0) Concurrent update thread roots 0.236ms
[1.329s][info][gc,start    ] GC(0) Pause Final Update Refs
[1.329s][info][gc,task     ] GC(0) Using 8 of 8 workers for final reference update
[1.329s][info][gc          ] GC(0) Pause Final Update Refs 0.080ms
[1.329s][info][gc,start    ] GC(0) Concurrent cleanup
[1.329s][info][gc          ] GC(0) Concurrent cleanup 101M->18M(133M) 0.077ms
[1.329s][info][gc,ergo     ] Free: 1866M, Max: 512K regular, 1778M humongous, Frag: 5% external, 0% internal; Reserve: 101888K, Max: 512K
[1.329s][info][gc,stats    ] 
[1.329s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[1.329s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[1.329s][info][gc,stats    ] 
[1.329s][info][gc,stats    ] Concurrent Reset                    503 us
[1.329s][info][gc,stats    ] Pause Init Mark (G)                 853 us
[1.329s][info][gc,stats    ] Pause Init Mark (N)                 629 us
[1.329s][info][gc,stats    ]   Update Region States               27 us
[1.329s][info][gc,stats    ] Concurrent Mark Roots              2442 us, parallelism: 0.95x
[1.329s][info][gc,stats    ]   CMR: <total>                     2317 us
[1.329s][info][gc,stats    ]   CMR: Thread Roots                 621 us, workers (us): 621,   0, ---, ---, ---, ---, ---, ---, 
[1.329s][info][gc,stats    ]   CMR: VM Strong Roots              474 us, workers (us): 474,   0, ---, ---, ---, ---, ---, ---, 
[1.329s][info][gc,stats    ]   CMR: CLDG Roots                  1221 us, workers (us): 1221, ---, ---, ---, ---, ---, ---, ---, 
[1.329s][info][gc,stats    ] Concurrent Marking                13207 us
[1.329s][info][gc,stats    ] Pause Final Mark (G)               1419 us
[1.329s][info][gc,stats    ] Pause Final Mark (N)               1318 us
[1.329s][info][gc,stats    ]   Finish Mark                      1156 us
[1.329s][info][gc,stats    ]   Update Region States               20 us
[1.329s][info][gc,stats    ]   Choose Collection Set              74 us
[1.329s][info][gc,stats    ]   Rebuild Free Set                   17 us
[1.329s][info][gc,stats    ] Concurrent Thread Roots             237 us, parallelism: 1.25x
[1.329s][info][gc,stats    ]   CTR: <total>                      297 us
[1.329s][info][gc,stats    ]   CTR: Thread Roots                 297 us, workers (us): 123, 174, ---, ---, ---, ---, ---, ---, 
[1.329s][info][gc,stats    ] Concurrent Weak References          290 us, parallelism: 0.78x
[1.329s][info][gc,stats    ]   CWRF: <total>                     226 us
[1.329s][info][gc,stats    ]   CWRF: Weak References             226 us, workers (us): 216,  10, ---, ---, ---, ---, ---, ---, 
[1.329s][info][gc,stats    ] Concurrent Weak Roots              2204 us
[1.329s][info][gc,stats    ]   Roots                            2103 us, parallelism: 1.88x
[1.329s][info][gc,stats    ]     CWR: <total>                   3944 us
[1.329s][info][gc,stats    ]     CWR: Code Cache Roots           717 us, workers (us): 443, 274, ---, ---, ---, ---, ---, ---, 
[1.329s][info][gc,stats    ]     CWR: VM Weak Roots             3216 us, workers (us): 1524, 1691, ---, ---, ---, ---, ---, ---, 
[1.329s][info][gc,stats    ]     CWR: CLDG Roots                  11 us, workers (us):  11, ---, ---, ---, ---, ---, ---, ---, 
[1.329s][info][gc,stats    ]   Rendezvous                         56 us
[1.330s][info][gc,stats    ] Concurrent Cleanup                   74 us
[1.330s][info][gc,stats    ] Concurrent Class Unloading         6462 us
[1.330s][info][gc,stats    ]   Unlink Stale                     3247 us
[1.330s][info][gc,stats    ]     System Dictionary                31 us
[1.330s][info][gc,stats    ]     Weak Class Links                  0 us
[1.330s][info][gc,stats    ]     Code Roots                     3214 us
[1.330s][info][gc,stats    ]   Rendezvous                         43 us
[1.330s][info][gc,stats    ]   Purge Unlinked                   3137 us
[1.330s][info][gc,stats    ]     Code Roots                     3109 us
[1.330s][info][gc,stats    ]     CLDG                             28 us
[1.330s][info][gc,stats    ]     Exception Caches                  0 us
[1.330s][info][gc,stats    ] Concurrent Strong Roots            1522 us, parallelism: 0.97x
[1.330s][info][gc,stats    ]   CSR: <total>                     1479 us
[1.330s][info][gc,stats    ]   CSR: VM Strong Roots               23 us, workers (us):  17,   6, ---, ---, ---, ---, ---, ---, 
[1.330s][info][gc,stats    ]   CSR: CLDG Roots                  1456 us, workers (us): ---, 1456, ---, ---, ---, ---, ---, ---, 
[1.330s][info][gc,stats    ] Concurrent Evacuation              7921 us
[1.330s][info][gc,stats    ] Pause Init Update Refs (G)          171 us
[1.330s][info][gc,stats    ] Pause Init Update Refs (N)           53 us
[1.330s][info][gc,stats    ]   Manage GCLABs                       5 us
[1.330s][info][gc,stats    ] Concurrent Update Refs             4694 us
[1.330s][info][gc,stats    ] Concurrent Update Thread Roots      254 us
[1.330s][info][gc,stats    ] Pause Final Update Refs (G)         195 us
[1.330s][info][gc,stats    ] Pause Final Update Refs (N)          96 us
[1.330s][info][gc,stats    ]   Update Region States               21 us
[1.330s][info][gc,stats    ]   Trash Collection Set                4 us
[1.330s][info][gc,stats    ]   Rebuild Free Set                   16 us
[1.330s][info][gc,stats    ] Concurrent Cleanup                   88 us
[1.330s][info][gc,stats    ] 
[1.330s][info][gc,stats    ] Allocation pacing accrued:
[1.330s][info][gc,stats    ]       0 of  1322 ms (  0.0%): <total>
[1.330s][info][gc,stats    ]       0 of  1322 ms (  0.0%): <average total>
[1.330s][info][gc,stats    ] 
[1.330s][info][gc,metaspace] Metaspace: 21215K(21568K)->21546K(21888K) NonClass: 18877K(19072K)->19163K(19328K) Class: 2337K(2496K)->2382K(2560K)
[1.330s][info][gc,ergo     ] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[7.630s][info][gc          ] Cancelling GC: Stopping VM
[7.631s][info][gc,heap,exit] Heap
[7.631s][info][gc,heap,exit] Shenandoah Heap
[7.631s][info][gc,heap,exit]  1984M max, 1984M soft max, 133M committed, 37954K used
[7.631s][info][gc,heap,exit]  3969 x 512K regions
[7.631s][info][gc,heap,exit] Status: cancelled
[7.631s][info][gc,heap,exit] Reserved region:
[7.631s][info][gc,heap,exit]  - [0x0000000083f80000, 0x0000000100000000) 
[7.631s][info][gc,heap,exit] Collection set:
[7.631s][info][gc,heap,exit]  - map (vanilla): 0x000000000001107f
[7.631s][info][gc,heap,exit]  - map (biased):  0x0000000000010000
[7.631s][info][gc,heap,exit] 
[7.631s][info][gc,heap,exit]  Metaspace       used 25395K, committed 25792K, reserved 1114112K
[7.631s][info][gc,heap,exit]   class space    used 2925K, committed 3136K, reserved 1048576K
[7.631s][info][gc,stats    ] 
[7.631s][info][gc,stats    ] GC STATISTICS:
[7.631s][info][gc,stats    ]   "(G)" (gross) pauses include VM time: time to notify and block threads, do the pre-
[7.631s][info][gc,stats    ]         and post-safepoint housekeeping. Use -Xlog:safepoint+stats to dissect.
[7.631s][info][gc,stats    ]   "(N)" (net) pauses are the times spent in the actual GC code.
[7.632s][info][gc,stats    ]   "a" is average time for each phase, look at levels to see if average makes sense.
[7.632s][info][gc,stats    ]   "lvls" are quantiles: 0% (minimum), 25%, 50% (median), 75%, 100% (maximum).
[7.632s][info][gc,stats    ] 
[7.632s][info][gc,stats    ]   All times are wall-clock times, except per-root-class counters, that are sum over
[7.632s][info][gc,stats    ]   all workers. Dividing the <total> over the root stage time estimates parallelism.
[7.632s][info][gc,stats    ] 
[7.632s][info][gc,stats    ]   Pacing delays are measured from entering the pacing code till exiting it. Therefore,
[7.632s][info][gc,stats    ]   observed pacing delays may be higher than the threshold when paced thread spent more
[7.632s][info][gc,stats    ]   time in the pacing code. It usually happens when thread is de-scheduled while paced,
[7.632s][info][gc,stats    ]   OS takes longer to unblock the thread, or JVM experiences an STW pause.
[7.632s][info][gc,stats    ] 
[7.632s][info][gc,stats    ]   Higher delay would prevent application outpacing the GC, but it will hide the GC latencies
[7.632s][info][gc,stats    ]   from the STW pause times. Pacing affects the individual threads, and so it would also be
[7.632s][info][gc,stats    ]   invisible to the usual profiling tools, but would add up to end-to-end application latency.
[7.632s][info][gc,stats    ]   Raise max pacing delay with care.
[7.632s][info][gc,stats    ] 
[7.632s][info][gc,stats    ] Concurrent Reset               =    0.001 s (a =      503 us) (n =     1) (lvls, us =      502,      502,      502,      502,      503)
[7.632s][info][gc,stats    ] Pause Init Mark (G)            =    0.001 s (a =      853 us) (n =     1) (lvls, us =      852,      852,      852,      852,      853)
[7.632s][info][gc,stats    ] Pause Init Mark (N)            =    0.001 s (a =      629 us) (n =     1) (lvls, us =      627,      627,      627,      627,      629)
[7.632s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       27 us) (n =     1) (lvls, us =       27,       27,       27,       27,       27)
[7.632s][info][gc,stats    ] Concurrent Mark Roots          =    0.002 s (a =     2442 us) (n =     1) (lvls, us =     2441,     2441,     2441,     2441,     2442)
[7.632s][info][gc,stats    ]   CMR: <total>                 =    0.002 s (a =     2317 us) (n =     1) (lvls, us =     2305,     2305,     2305,     2305,     2317)
[7.632s][info][gc,stats    ]   CMR: Thread Roots            =    0.001 s (a =      621 us) (n =     1) (lvls, us =      621,      621,      621,      621,      621)
[7.632s][info][gc,stats    ]   CMR: VM Strong Roots         =    0.000 s (a =      474 us) (n =     1) (lvls, us =      473,      473,      473,      473,      474)
[7.632s][info][gc,stats    ]   CMR: CLDG Roots              =    0.001 s (a =     1221 us) (n =     1) (lvls, us =     1211,     1211,     1211,     1211,     1221)
[7.632s][info][gc,stats    ] Concurrent Marking             =    0.013 s (a =    13207 us) (n =     1) (lvls, us =    13086,    13086,    13086,    13086,    13207)
[7.632s][info][gc,stats    ] Pause Final Mark (G)           =    0.001 s (a =     1419 us) (n =     1) (lvls, us =     1406,     1406,     1406,     1406,     1419)
[7.632s][info][gc,stats    ] Pause Final Mark (N)           =    0.001 s (a =     1318 us) (n =     1) (lvls, us =     1309,     1309,     1309,     1309,     1318)
[7.632s][info][gc,stats    ]   Finish Mark                  =    0.001 s (a =     1156 us) (n =     1) (lvls, us =     1152,     1152,     1152,     1152,     1156)
[7.632s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       20 us) (n =     1) (lvls, us =       20,       20,       20,       20,       20)
[7.632s][info][gc,stats    ]   Choose Collection Set        =    0.000 s (a =       74 us) (n =     1) (lvls, us =       74,       74,       74,       74,       74)
[7.632s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       17 us) (n =     1) (lvls, us =       17,       17,       17,       17,       17)
[7.632s][info][gc,stats    ] Concurrent Thread Roots        =    0.000 s (a =      237 us) (n =     1) (lvls, us =      236,      236,      236,      236,      237)
[7.632s][info][gc,stats    ]   CTR: <total>                 =    0.000 s (a =      297 us) (n =     1) (lvls, us =      297,      297,      297,      297,      297)
[7.632s][info][gc,stats    ]   CTR: Thread Roots            =    0.000 s (a =      297 us) (n =     1) (lvls, us =      297,      297,      297,      297,      297)
[7.632s][info][gc,stats    ] Concurrent Weak References     =    0.000 s (a =      290 us) (n =     1) (lvls, us =      289,      289,      289,      289,      290)
[7.632s][info][gc,stats    ]   CWRF: <total>                =    0.000 s (a =      226 us) (n =     1) (lvls, us =      225,      225,      225,      225,      226)
[7.632s][info][gc,stats    ]   CWRF: Weak References        =    0.000 s (a =      226 us) (n =     1) (lvls, us =      225,      225,      225,      225,      226)
[7.633s][info][gc,stats    ] Concurrent Weak Roots          =    0.002 s (a =     2204 us) (n =     1) (lvls, us =     2188,     2188,     2188,     2188,     2204)
[7.633s][info][gc,stats    ]   Roots                        =    0.002 s (a =     2103 us) (n =     1) (lvls, us =     2090,     2090,     2090,     2090,     2103)
[7.633s][info][gc,stats    ]     CWR: <total>               =    0.004 s (a =     3944 us) (n =     1) (lvls, us =     3926,     3926,     3926,     3926,     3944)
[7.633s][info][gc,stats    ]     CWR: Code Cache Roots      =    0.001 s (a =      717 us) (n =     1) (lvls, us =      717,      717,      717,      717,      717)
[7.633s][info][gc,stats    ]     CWR: VM Weak Roots         =    0.003 s (a =     3216 us) (n =     1) (lvls, us =     3203,     3203,     3203,     3203,     3216)
[7.633s][info][gc,stats    ]     CWR: CLDG Roots            =    0.000 s (a =       11 us) (n =     1) (lvls, us =       11,       11,       11,       11,       11)
[7.633s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =       56 us) (n =     1) (lvls, us =       56,       56,       56,       56,       56)
[7.633s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =       74 us) (n =     1) (lvls, us =       74,       74,       74,       74,       74)
[7.633s][info][gc,stats    ] Concurrent Class Unloading     =    0.006 s (a =     6462 us) (n =     1) (lvls, us =     6445,     6445,     6445,     6445,     6462)
[7.633s][info][gc,stats    ]   Unlink Stale                 =    0.003 s (a =     3247 us) (n =     1) (lvls, us =     3242,     3242,     3242,     3242,     3247)
[7.633s][info][gc,stats    ]     System Dictionary          =    0.000 s (a =       31 us) (n =     1) (lvls, us =       31,       31,       31,       31,       31)
[7.633s][info][gc,stats    ]     Weak Class Links           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[7.633s][info][gc,stats    ]     Code Roots                 =    0.003 s (a =     3214 us) (n =     1) (lvls, us =     3203,     3203,     3203,     3203,     3214)
[7.633s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =       43 us) (n =     1) (lvls, us =       43,       43,       43,       43,       43)
[7.633s][info][gc,stats    ]   Purge Unlinked               =    0.003 s (a =     3137 us) (n =     1) (lvls, us =     3125,     3125,     3125,     3125,     3137)
[7.633s][info][gc,stats    ]     Code Roots                 =    0.003 s (a =     3109 us) (n =     1) (lvls, us =     3105,     3105,     3105,     3105,     3109)
[7.633s][info][gc,stats    ]     CLDG                       =    0.000 s (a =       28 us) (n =     1) (lvls, us =       28,       28,       28,       28,       28)
[7.633s][info][gc,stats    ]     Exception Caches           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[7.633s][info][gc,stats    ] Concurrent Strong Roots        =    0.002 s (a =     1522 us) (n =     1) (lvls, us =     1504,     1504,     1504,     1504,     1522)
[7.633s][info][gc,stats    ]   CSR: <total>                 =    0.001 s (a =     1479 us) (n =     1) (lvls, us =     1465,     1465,     1465,     1465,     1479)
[7.633s][info][gc,stats    ]   CSR: VM Strong Roots         =    0.000 s (a =       23 us) (n =     1) (lvls, us =       23,       23,       23,       23,       23)
[7.633s][info][gc,stats    ]   CSR: CLDG Roots              =    0.001 s (a =     1456 us) (n =     1) (lvls, us =     1445,     1445,     1445,     1445,     1456)
[7.633s][info][gc,stats    ] Concurrent Evacuation          =    0.008 s (a =     7921 us) (n =     1) (lvls, us =     7910,     7910,     7910,     7910,     7921)
[7.633s][info][gc,stats    ] Pause Init Update Refs (G)     =    0.000 s (a =      171 us) (n =     1) (lvls, us =      170,      170,      170,      170,      171)
[7.633s][info][gc,stats    ] Pause Init Update Refs (N)     =    0.000 s (a =       53 us) (n =     1) (lvls, us =       53,       53,       53,       53,       53)
[7.633s][info][gc,stats    ]   Manage GCLABs                =    0.000 s (a =        5 us) (n =     1) (lvls, us =        5,        5,        5,        5,        5)
[7.633s][info][gc,stats    ] Concurrent Update Refs         =    0.005 s (a =     4694 us) (n =     1) (lvls, us =     4688,     4688,     4688,     4688,     4694)
[7.633s][info][gc,stats    ] Concurrent Update Thread Roots =    0.000 s (a =      254 us) (n =     1) (lvls, us =      254,      254,      254,      254,      254)
[7.633s][info][gc,stats    ] Pause Final Update Refs (G)    =    0.000 s (a =      195 us) (n =     1) (lvls, us =      193,      193,      193,      193,      195)
[7.633s][info][gc,stats    ] Pause Final Update Refs (N)    =    0.000 s (a =       96 us) (n =     1) (lvls, us =       96,       96,       96,       96,       96)
[7.633s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       21 us) (n =     1) (lvls, us =       21,       21,       21,       21,       21)
[7.633s][info][gc,stats    ]   Trash Collection Set         =    0.000 s (a =        4 us) (n =     1) (lvls, us =        4,        4,        4,        4,        4)
[7.634s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       16 us) (n =     1) (lvls, us =       16,       16,       16,       16,       16)
[7.634s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =       88 us) (n =     1) (lvls, us =       88,       88,       88,       88,       88)
[7.634s][info][gc,stats    ] 
[7.634s][info][gc,stats    ] 
[7.634s][info][gc,stats    ] Under allocation pressure, concurrent cycles may cancel, and either continue cycle
[7.634s][info][gc,stats    ] under stop-the-world pause or result in stop-the-world Full GC. Increase heap size,
[7.634s][info][gc,stats    ] tune GC heuristics, set more aggressive pacing delay, or lower allocation rate
[7.634s][info][gc,stats    ] to avoid Degenerated and Full GC cycles.
[7.634s][info][gc,stats    ] 
[7.634s][info][gc,stats    ]     1 successful concurrent GCs
[7.634s][info][gc,stats    ]       0 invoked explicitly
[7.634s][info][gc,stats    ]       0 invoked implicitly
[7.634s][info][gc,stats    ] 
[7.634s][info][gc,stats    ]     0 Degenerated GCs
[7.634s][info][gc,stats    ]       0 caused by allocation failure
[7.634s][info][gc,stats    ]       0 upgraded to Full GC
[7.634s][info][gc,stats    ] 
[7.634s][info][gc,stats    ]     0 Full GCs
[7.634s][info][gc,stats    ]       0 invoked explicitly
[7.634s][info][gc,stats    ]       0 invoked implicitly
[7.634s][info][gc,stats    ]       0 caused by allocation failure
[7.634s][info][gc,stats    ]       0 upgraded from Degenerated GC
[7.634s][info][gc,stats    ] 
[7.634s][info][gc,stats    ] 
