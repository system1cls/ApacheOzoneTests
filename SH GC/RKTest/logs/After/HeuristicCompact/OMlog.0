[0.005s][info][gc] Heuristics ergonomically sets -XX:+ExplicitGCInvokesConcurrent
[0.005s][info][gc] Heuristics ergonomically sets -XX:+ShenandoahImplicitGCInvokesConcurrent
[0.005s][info][gc] Using Shenandoah
[0.005s][info][gc] Heuristics ergonomically sets -XX:+ShenandoahAlwaysClearSoftRefs
[0.005s][info][gc] Heuristics ergonomically sets -XX:ShenandoahAllocationThreshold=10
[0.005s][info][gc] Heuristics ergonomically sets -XX:ShenandoahImmediateThreshold=100
[0.005s][info][gc] Heuristics ergonomically sets -XX:ShenandoahUncommitDelay=1000
[0.005s][info][gc] Heuristics ergonomically sets -XX:ShenandoahGuaranteedGCInterval=30000
[0.005s][info][gc] Heuristics ergonomically sets -XX:ShenandoahGarbageThreshold=10
[0.006s][info][gc,ergo] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[0.006s][info][gc,init] Version: 21.0.7+6-Ubuntu-0ubuntu122.04 (release)
[0.006s][info][gc,init] CPUs: 4 total, 4 available
[0.006s][info][gc,init] Memory: 7937M
[0.006s][info][gc,init] Large Page Support: Disabled
[0.006s][info][gc,init] NUMA Support: Disabled
[0.006s][info][gc,init] Compressed Oops: Enabled (32-bit)
[0.006s][info][gc,init] Heap Min Capacity: 6656K
[0.006s][info][gc,init] Heap Initial Capacity: 127488K
[0.006s][info][gc,init] Heap Max Capacity: 2032128K
[0.006s][info][gc,init] Pre-touch: Disabled
[0.006s][info][gc,init] Mode: Snapshot-At-The-Beginning (SATB)
[0.006s][info][gc,init] Heuristics: Compact
[0.006s][info][gc,init] Heap Region Count: 3969
[0.006s][info][gc,init] Heap Region Size: 512K
[0.006s][info][gc,init] TLAB Size Max: 512K
[0.006s][info][gc,init] Humongous Object Threshold: 512K
[0.006s][info][gc,init] Parallel Workers: 8
[0.006s][info][gc,init] Concurrent Workers: 2
[0.013s][info][gc,metaspace] CDS archive(s) mapped at: [0x00007f66fb000000-0x00007f66fbc97000-0x00007f66fbc97000), size 13201408, SharedBaseAddress: 0x00007f66fb000000, ArchiveRelocationMode: 1.
[0.014s][info][gc,metaspace] Compressed class space mapped at: 0x00007f66fc000000-0x00007f673c000000, reserved size: 1073741824
[0.014s][info][gc,metaspace] Narrow klass base: 0x00007f66fb000000, Narrow klass shift: 0, Narrow klass range: 0x100000000
[1.031s][info][gc,start    ] Concurrent uncommit
[1.032s][info][gc          ] Concurrent uncommit 41M->41M(42M) 0.616ms
[1.825s][info][gc          ] Trigger: Metadata GC Threshold
[1.825s][info][gc,ergo     ] Free: 1745M, Max: 512K regular, 1745M humongous, Frag: 0% external, 0% internal; Reserve: 101888K, Max: 512K
[1.825s][info][gc,start    ] GC(0) Concurrent reset
[1.825s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reset
[1.825s][info][gc,ergo     ] GC(0) Pacer for Reset. Non-Taxable: 1984M
[1.825s][info][gc          ] GC(0) Concurrent reset 0.324ms
[1.825s][info][gc,start    ] GC(0) Pause Init Mark (unload classes)
[1.825s][info][gc,task     ] GC(0) Using 8 of 8 workers for init marking
[1.825s][info][gc,ref      ] GC(0) Clearing All SoftReferences
[1.825s][info][gc,ergo     ] GC(0) Pacer for Mark. Expected Live: 198M, Free: 1745M, Non-Taxable: 174M, Alloc Tax Rate: 0.1x
[1.825s][info][gc          ] GC(0) Pause Init Mark (unload classes) 0.390ms
[1.826s][info][gc,start    ] GC(0) Concurrent marking roots
[1.826s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking roots
[1.827s][info][gc          ] GC(0) Concurrent marking roots 1.551ms
[1.827s][info][gc,start    ] GC(0) Concurrent marking (unload classes)
[1.827s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking
[1.861s][info][gc          ] GC(0) Concurrent marking (unload classes) 33.826ms
[1.861s][info][gc,start    ] GC(0) Pause Final Mark (unload classes)
[1.861s][info][gc,task     ] GC(0) Using 8 of 8 workers for final marking
[1.868s][info][gc,ergo     ] GC(0) CSet Selection. Actual Free: 1847M, Max CSet: 1385M
[1.868s][info][gc,ergo     ] GC(0) Collectable Garbage: 75094K (99%), Immediate: 4335K (5%), CSet: 70759K (94%)
[1.868s][info][gc,ergo     ] GC(0) Pacer for Evacuation. Used CSet: 82432K, Free: 1748M, Non-Taxable: 174M, Alloc Tax Rate: 1.1x
[1.868s][info][gc          ] GC(0) Pause Final Mark (unload classes) 6.802ms
[1.868s][info][gc,start    ] GC(0) Concurrent thread roots
[1.868s][info][gc,task     ] GC(0) Using 2 of 8 workers for Concurrent thread roots
[1.871s][info][gc          ] GC(0) Concurrent thread roots 2.790ms
[1.871s][info][gc,start    ] GC(0) Concurrent weak references
[1.871s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak references
[1.871s][info][gc,ref      ] GC(0) Encountered references: Soft: 3871, Weak: 2095, Final: 4, Phantom: 821
[1.871s][info][gc,ref      ] GC(0) Discovered  references: Soft: 1707, Weak: 1352, Final: 0, Phantom: 500
[1.871s][info][gc,ref      ] GC(0) Enqueued    references: Soft: 1579, Weak: 642, Final: 0, Phantom: 230
[1.871s][info][gc          ] GC(0) Concurrent weak references 0.768ms
[1.871s][info][gc,start    ] GC(0) Concurrent weak roots
[1.871s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak root
[1.879s][info][gc          ] GC(0) Concurrent weak roots 7.825ms
[1.879s][info][gc,start    ] GC(0) Concurrent cleanup
[1.880s][info][gc          ] GC(0) Concurrent cleanup 142M->137M(145M) 0.131ms
[1.880s][info][gc,ergo     ] GC(0) Free: 1746M, Max: 512K regular, 1742M humongous, Frag: 1% external, 0% internal; Reserve: 100073K, Max: 512K
[1.880s][info][gc,start    ] GC(0) Concurrent class unloading
[1.880s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent class unloading
[1.887s][info][gc          ] GC(0) Concurrent class unloading 7.445ms
[1.887s][info][gc,start    ] GC(0) Concurrent strong roots
[1.887s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent strong root
[1.888s][info][gc          ] GC(0) Concurrent strong roots 0.887ms
[1.888s][info][gc,start    ] GC(0) Concurrent evacuation
[1.888s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent evacuation
[1.897s][info][gc          ] GC(0) Concurrent evacuation 9.407ms
[1.897s][info][gc,start    ] GC(0) Pause Init Update Refs
[1.898s][info][gc,ergo     ] GC(0) Pacer for Update Refs. Used: 149M, Free: 1746M, Non-Taxable: 174M, Alloc Tax Rate: 1.1x
[1.898s][info][gc          ] GC(0) Pause Init Update Refs 0.029ms
[1.898s][info][gc,start    ] GC(0) Concurrent update references
[1.898s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reference update
[1.919s][info][gc          ] GC(0) Concurrent update references 21.727ms
[1.919s][info][gc,start    ] GC(0) Concurrent update thread roots
[1.920s][info][gc          ] GC(0) Concurrent update thread roots 0.313ms
[1.920s][info][gc,start    ] GC(0) Pause Final Update Refs
[1.920s][info][gc,task     ] GC(0) Using 8 of 8 workers for final reference update
[1.920s][info][gc          ] GC(0) Pause Final Update Refs 0.078ms
[1.920s][info][gc,start    ] GC(0) Concurrent cleanup
[1.920s][info][gc          ] GC(0) Concurrent cleanup 151M->70M(156M) 0.069ms
[1.920s][info][gc,ergo     ] Free: 1811M, Max: 512K regular, 1728M humongous, Frag: 5% external, 0% internal; Reserve: 101888K, Max: 512K
[1.920s][info][gc,stats    ] 
[1.920s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[1.920s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[1.920s][info][gc,stats    ] 
[1.920s][info][gc,stats    ] Concurrent Reset                    339 us
[1.920s][info][gc,stats    ] Pause Init Mark (G)                 562 us
[1.920s][info][gc,stats    ] Pause Init Mark (N)                 402 us
[1.920s][info][gc,stats    ]   Update Region States               27 us
[1.920s][info][gc,stats    ] Concurrent Mark Roots              1572 us, parallelism: 1.84x
[1.920s][info][gc,stats    ]   CMR: <total>                     2901 us
[1.920s][info][gc,stats    ]   CMR: Thread Roots                1343 us, workers (us): 1046, 297, ---, ---, ---, ---, ---, ---, 
[1.920s][info][gc,stats    ]   CMR: VM Strong Roots              558 us, workers (us): 403, 155, ---, ---, ---, ---, ---, ---, 
[1.920s][info][gc,stats    ]   CMR: CLDG Roots                  1000 us, workers (us): ---, 1000, ---, ---, ---, ---, ---, ---, 
[1.920s][info][gc,stats    ] Concurrent Marking                33851 us
[1.920s][info][gc,stats    ] Pause Final Mark (G)               6933 us
[1.920s][info][gc,stats    ] Pause Final Mark (N)               6821 us
[1.920s][info][gc,stats    ]   Finish Mark                      6629 us
[1.920s][info][gc,stats    ]   Update Region States               39 us
[1.920s][info][gc,stats    ]   Choose Collection Set              75 us
[1.920s][info][gc,stats    ]   Rebuild Free Set                   18 us
[1.920s][info][gc,stats    ] Concurrent Thread Roots            2807 us, parallelism: 0.99x
[1.920s][info][gc,stats    ]   CTR: <total>                     2776 us
[1.920s][info][gc,stats    ]   CTR: Thread Roots                2776 us, workers (us): 164, 2612, ---, ---, ---, ---, ---, ---, 
[1.920s][info][gc,stats    ] Concurrent Weak References          779 us, parallelism: 0.89x
[1.920s][info][gc,stats    ]   CWRF: <total>                     693 us
[1.920s][info][gc,stats    ]   CWRF: Weak References             693 us, workers (us): 692,   1, ---, ---, ---, ---, ---, ---, 
[1.920s][info][gc,stats    ] Concurrent Weak Roots              7893 us
[1.920s][info][gc,stats    ]   Roots                            7755 us, parallelism: 1.31x
[1.920s][info][gc,stats    ]     CWR: <total>                  10153 us
[1.920s][info][gc,stats    ]     CWR: Code Cache Roots           688 us, workers (us):   0, 687, ---, ---, ---, ---, ---, ---, 
[1.920s][info][gc,stats    ]     CWR: VM Weak Roots             9448 us, workers (us): 7700, 1748, ---, ---, ---, ---, ---, ---, 
[1.920s][info][gc,stats    ]     CWR: CLDG Roots                  17 us, workers (us): ---,  17, ---, ---, ---, ---, ---, ---, 
[1.920s][info][gc,stats    ]   Rendezvous                         49 us
[1.920s][info][gc,stats    ] Concurrent Cleanup                  142 us
[1.920s][info][gc,stats    ] Concurrent Class Unloading         7481 us
[1.920s][info][gc,stats    ]   Unlink Stale                     4523 us
[1.920s][info][gc,stats    ]     System Dictionary               222 us
[1.920s][info][gc,stats    ]     Weak Class Links               2565 us
[1.920s][info][gc,stats    ]     Code Roots                     1734 us
[1.920s][info][gc,stats    ]   Rendezvous                         24 us
[1.920s][info][gc,stats    ]   Purge Unlinked                   2869 us
[1.920s][info][gc,stats    ]     Code Roots                     2732 us
[1.920s][info][gc,stats    ]     CLDG                            137 us
[1.920s][info][gc,stats    ]     Exception Caches                  0 us
[1.920s][info][gc,stats    ] Concurrent Strong Roots             908 us, parallelism: 1.22x
[1.920s][info][gc,stats    ]   CSR: <total>                     1111 us
[1.920s][info][gc,stats    ]   CSR: VM Strong Roots              322 us, workers (us): 317,   5, ---, ---, ---, ---, ---, ---, 
[1.920s][info][gc,stats    ]   CSR: CLDG Roots                   789 us, workers (us): ---, 789, ---, ---, ---, ---, ---, ---, 
[1.920s][info][gc,stats    ] Concurrent Evacuation              9432 us
[1.920s][info][gc,stats    ] Pause Init Update Refs (G)          137 us
[1.920s][info][gc,stats    ] Pause Init Update Refs (N)           35 us
[1.920s][info][gc,stats    ]   Manage GCLABs                       5 us
[1.920s][info][gc,stats    ] Concurrent Update Refs            21760 us
[1.920s][info][gc,stats    ] Concurrent Update Thread Roots      331 us
[1.920s][info][gc,stats    ] Pause Final Update Refs (G)         193 us
[1.920s][info][gc,stats    ] Pause Final Update Refs (N)          89 us
[1.920s][info][gc,stats    ]   Update Region States               33 us
[1.920s][info][gc,stats    ]   Trash Collection Set                4 us
[1.920s][info][gc,stats    ]   Rebuild Free Set                   19 us
[1.920s][info][gc,stats    ] Concurrent Cleanup                   78 us
[1.920s][info][gc,stats    ] 
[1.920s][info][gc,stats    ] Allocation pacing accrued:
[1.920s][info][gc,stats    ]       0 of  1914 ms (  0.0%): <total>
[1.920s][info][gc,stats    ]       0 of  1914 ms (  0.0%): <average total>
[1.920s][info][gc,stats    ] 
[1.921s][info][gc,metaspace] Metaspace: 21209K(21632K)->21606K(21952K) NonClass: 18858K(19072K)->19217K(19392K) Class: 2351K(2560K)->2389K(2560K)
[1.921s][info][gc,ergo     ] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[2.925s][info][gc,start    ] Concurrent uncommit
[2.937s][info][gc          ] Concurrent uncommit 79M->79M(82M) 11.876ms
[6.245s][info][gc          ] Cancelling GC: Stopping VM
[6.246s][info][gc,heap,exit] Heap
[6.246s][info][gc,heap,exit] Shenandoah Heap
[6.246s][info][gc,heap,exit]  1984M max, 1984M soft max, 87552K committed, 84930K used
[6.246s][info][gc,heap,exit]  3969 x 512K regions
[6.246s][info][gc,heap,exit] Status: cancelled
[6.246s][info][gc,heap,exit] Reserved region:
[6.246s][info][gc,heap,exit]  - [0x0000000083f80000, 0x0000000100000000) 
[6.246s][info][gc,heap,exit] Collection set:
[6.246s][info][gc,heap,exit]  - map (vanilla): 0x000000000001107f
[6.246s][info][gc,heap,exit]  - map (biased):  0x0000000000010000
[6.246s][info][gc,heap,exit] 
[6.246s][info][gc,heap,exit]  Metaspace       used 24907K, committed 25152K, reserved 1114112K
[6.246s][info][gc,heap,exit]   class space    used 2747K, committed 2880K, reserved 1048576K
[6.246s][info][gc,stats    ] 
[6.246s][info][gc,stats    ] GC STATISTICS:
[6.246s][info][gc,stats    ]   "(G)" (gross) pauses include VM time: time to notify and block threads, do the pre-
[6.246s][info][gc,stats    ]         and post-safepoint housekeeping. Use -Xlog:safepoint+stats to dissect.
[6.246s][info][gc,stats    ]   "(N)" (net) pauses are the times spent in the actual GC code.
[6.246s][info][gc,stats    ]   "a" is average time for each phase, look at levels to see if average makes sense.
[6.246s][info][gc,stats    ]   "lvls" are quantiles: 0% (minimum), 25%, 50% (median), 75%, 100% (maximum).
[6.246s][info][gc,stats    ] 
[6.246s][info][gc,stats    ]   All times are wall-clock times, except per-root-class counters, that are sum over
[6.246s][info][gc,stats    ]   all workers. Dividing the <total> over the root stage time estimates parallelism.
[6.246s][info][gc,stats    ] 
[6.246s][info][gc,stats    ]   Pacing delays are measured from entering the pacing code till exiting it. Therefore,
[6.246s][info][gc,stats    ]   observed pacing delays may be higher than the threshold when paced thread spent more
[6.246s][info][gc,stats    ]   time in the pacing code. It usually happens when thread is de-scheduled while paced,
[6.246s][info][gc,stats    ]   OS takes longer to unblock the thread, or JVM experiences an STW pause.
[6.246s][info][gc,stats    ] 
[6.246s][info][gc,stats    ]   Higher delay would prevent application outpacing the GC, but it will hide the GC latencies
[6.246s][info][gc,stats    ]   from the STW pause times. Pacing affects the individual threads, and so it would also be
[6.246s][info][gc,stats    ]   invisible to the usual profiling tools, but would add up to end-to-end application latency.
[6.246s][info][gc,stats    ]   Raise max pacing delay with care.
[6.246s][info][gc,stats    ] 
[6.246s][info][gc,stats    ] Concurrent Reset               =    0.000 s (a =      339 us) (n =     1) (lvls, us =      338,      338,      338,      338,      339)
[6.246s][info][gc,stats    ] Pause Init Mark (G)            =    0.001 s (a =      562 us) (n =     1) (lvls, us =      561,      561,      561,      561,      562)
[6.246s][info][gc,stats    ] Pause Init Mark (N)            =    0.000 s (a =      402 us) (n =     1) (lvls, us =      400,      400,      400,      400,      402)
[6.246s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       27 us) (n =     1) (lvls, us =       27,       27,       27,       27,       27)
[6.246s][info][gc,stats    ] Concurrent Mark Roots          =    0.002 s (a =     1572 us) (n =     1) (lvls, us =     1562,     1562,     1562,     1562,     1572)
[6.246s][info][gc,stats    ]   CMR: <total>                 =    0.003 s (a =     2901 us) (n =     1) (lvls, us =     2891,     2891,     2891,     2891,     2901)
[6.246s][info][gc,stats    ]   CMR: Thread Roots            =    0.001 s (a =     1343 us) (n =     1) (lvls, us =     1328,     1328,     1328,     1328,     1343)
[6.246s][info][gc,stats    ]   CMR: VM Strong Roots         =    0.001 s (a =      558 us) (n =     1) (lvls, us =      557,      557,      557,      557,      558)
[6.246s][info][gc,stats    ]   CMR: CLDG Roots              =    0.001 s (a =     1000 us) (n =     1) (lvls, us =      998,      998,      998,      998,     1000)
[6.246s][info][gc,stats    ] Concurrent Marking             =    0.034 s (a =    33851 us) (n =     1) (lvls, us =    33789,    33789,    33789,    33789,    33851)
[6.246s][info][gc,stats    ] Pause Final Mark (G)           =    0.007 s (a =     6933 us) (n =     1) (lvls, us =     6914,     6914,     6914,     6914,     6933)
[6.246s][info][gc,stats    ] Pause Final Mark (N)           =    0.007 s (a =     6821 us) (n =     1) (lvls, us =     6816,     6816,     6816,     6816,     6821)
[6.246s][info][gc,stats    ]   Finish Mark                  =    0.007 s (a =     6629 us) (n =     1) (lvls, us =     6621,     6621,     6621,     6621,     6629)
[6.246s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       39 us) (n =     1) (lvls, us =       39,       39,       39,       39,       39)
[6.246s][info][gc,stats    ]   Choose Collection Set        =    0.000 s (a =       75 us) (n =     1) (lvls, us =       75,       75,       75,       75,       75)
[6.246s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       18 us) (n =     1) (lvls, us =       18,       18,       18,       18,       18)
[6.246s][info][gc,stats    ] Concurrent Thread Roots        =    0.003 s (a =     2807 us) (n =     1) (lvls, us =     2793,     2793,     2793,     2793,     2807)
[6.246s][info][gc,stats    ]   CTR: <total>                 =    0.003 s (a =     2776 us) (n =     1) (lvls, us =     2773,     2773,     2773,     2773,     2776)
[6.246s][info][gc,stats    ]   CTR: Thread Roots            =    0.003 s (a =     2776 us) (n =     1) (lvls, us =     2773,     2773,     2773,     2773,     2776)
[6.246s][info][gc,stats    ] Concurrent Weak References     =    0.001 s (a =      779 us) (n =     1) (lvls, us =      779,      779,      779,      779,      779)
[6.246s][info][gc,stats    ]   CWRF: <total>                =    0.001 s (a =      693 us) (n =     1) (lvls, us =      691,      691,      691,      691,      693)
[6.246s][info][gc,stats    ]   CWRF: Weak References        =    0.001 s (a =      693 us) (n =     1) (lvls, us =      691,      691,      691,      691,      693)
[6.246s][info][gc,stats    ] Concurrent Weak Roots          =    0.008 s (a =     7893 us) (n =     1) (lvls, us =     7891,     7891,     7891,     7891,     7893)
[6.246s][info][gc,stats    ]   Roots                        =    0.008 s (a =     7755 us) (n =     1) (lvls, us =     7754,     7754,     7754,     7754,     7755)
[6.246s][info][gc,stats    ]     CWR: <total>               =    0.010 s (a =    10153 us) (n =     1) (lvls, us =     9961,     9961,     9961,     9961,    10153)
[6.246s][info][gc,stats    ]     CWR: Code Cache Roots      =    0.001 s (a =      688 us) (n =     1) (lvls, us =      688,      688,      688,      688,      688)
[6.247s][info][gc,stats    ]     CWR: VM Weak Roots         =    0.009 s (a =     9448 us) (n =     1) (lvls, us =     9434,     9434,     9434,     9434,     9448)
[6.247s][info][gc,stats    ]     CWR: CLDG Roots            =    0.000 s (a =       17 us) (n =     1) (lvls, us =       17,       17,       17,       17,       17)
[6.247s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =       49 us) (n =     1) (lvls, us =       49,       49,       49,       49,       49)
[6.247s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =      142 us) (n =     1) (lvls, us =      141,      141,      141,      141,      142)
[6.247s][info][gc,stats    ] Concurrent Class Unloading     =    0.007 s (a =     7481 us) (n =     1) (lvls, us =     7480,     7480,     7480,     7480,     7481)
[6.247s][info][gc,stats    ]   Unlink Stale                 =    0.005 s (a =     4523 us) (n =     1) (lvls, us =     4512,     4512,     4512,     4512,     4523)
[6.247s][info][gc,stats    ]     System Dictionary          =    0.000 s (a =      222 us) (n =     1) (lvls, us =      221,      221,      221,      221,      222)
[6.247s][info][gc,stats    ]     Weak Class Links           =    0.003 s (a =     2565 us) (n =     1) (lvls, us =     2559,     2559,     2559,     2559,     2565)
[6.247s][info][gc,stats    ]     Code Roots                 =    0.002 s (a =     1734 us) (n =     1) (lvls, us =     1719,     1719,     1719,     1719,     1734)
[6.247s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =       24 us) (n =     1) (lvls, us =       23,       23,       23,       23,       24)
[6.247s][info][gc,stats    ]   Purge Unlinked               =    0.003 s (a =     2869 us) (n =     1) (lvls, us =     2852,     2852,     2852,     2852,     2869)
[6.247s][info][gc,stats    ]     Code Roots                 =    0.003 s (a =     2732 us) (n =     1) (lvls, us =     2715,     2715,     2715,     2715,     2732)
[6.247s][info][gc,stats    ]     CLDG                       =    0.000 s (a =      137 us) (n =     1) (lvls, us =      137,      137,      137,      137,      137)
[6.247s][info][gc,stats    ]     Exception Caches           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[6.247s][info][gc,stats    ] Concurrent Strong Roots        =    0.001 s (a =      908 us) (n =     1) (lvls, us =      906,      906,      906,      906,      908)
[6.247s][info][gc,stats    ]   CSR: <total>                 =    0.001 s (a =     1111 us) (n =     1) (lvls, us =     1094,     1094,     1094,     1094,     1111)
[6.247s][info][gc,stats    ]   CSR: VM Strong Roots         =    0.000 s (a =      322 us) (n =     1) (lvls, us =      322,      322,      322,      322,      322)
[6.247s][info][gc,stats    ]   CSR: CLDG Roots              =    0.001 s (a =      789 us) (n =     1) (lvls, us =      789,      789,      789,      789,      789)
[6.247s][info][gc,stats    ] Concurrent Evacuation          =    0.009 s (a =     9432 us) (n =     1) (lvls, us =     9414,     9414,     9414,     9414,     9432)
[6.247s][info][gc,stats    ] Pause Init Update Refs (G)     =    0.000 s (a =      137 us) (n =     1) (lvls, us =      135,      135,      135,      135,      137)
[6.247s][info][gc,stats    ] Pause Init Update Refs (N)     =    0.000 s (a =       35 us) (n =     1) (lvls, us =       35,       35,       35,       35,       35)
[6.247s][info][gc,stats    ]   Manage GCLABs                =    0.000 s (a =        5 us) (n =     1) (lvls, us =        5,        5,        5,        5,        5)
[6.247s][info][gc,stats    ] Concurrent Update Refs         =    0.022 s (a =    21760 us) (n =     1) (lvls, us =    21680,    21680,    21680,    21680,    21760)
[6.247s][info][gc,stats    ] Concurrent Update Thread Roots =    0.000 s (a =      331 us) (n =     1) (lvls, us =      330,      330,      330,      330,      331)
[6.247s][info][gc,stats    ] Pause Final Update Refs (G)    =    0.000 s (a =      193 us) (n =     1) (lvls, us =      191,      191,      191,      191,      193)
[6.247s][info][gc,stats    ] Pause Final Update Refs (N)    =    0.000 s (a =       89 us) (n =     1) (lvls, us =       89,       89,       89,       89,       89)
[6.247s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       33 us) (n =     1) (lvls, us =       33,       33,       33,       33,       33)
[6.247s][info][gc,stats    ]   Trash Collection Set         =    0.000 s (a =        4 us) (n =     1) (lvls, us =        4,        4,        4,        4,        4)
[6.247s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       19 us) (n =     1) (lvls, us =       19,       19,       19,       19,       19)
[6.247s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =       78 us) (n =     1) (lvls, us =       78,       78,       78,       78,       78)
[6.247s][info][gc,stats    ] Concurrent Uncommit            =    0.013 s (a =     6274 us) (n =     2) (lvls, us =      631,      631,      631,      631,    11915)
[6.247s][info][gc,stats    ] 
[6.247s][info][gc,stats    ] 
[6.247s][info][gc,stats    ] Under allocation pressure, concurrent cycles may cancel, and either continue cycle
[6.247s][info][gc,stats    ] under stop-the-world pause or result in stop-the-world Full GC. Increase heap size,
[6.247s][info][gc,stats    ] tune GC heuristics, set more aggressive pacing delay, or lower allocation rate
[6.247s][info][gc,stats    ] to avoid Degenerated and Full GC cycles.
[6.247s][info][gc,stats    ] 
[6.247s][info][gc,stats    ]     1 successful concurrent GCs
[6.247s][info][gc,stats    ]       0 invoked explicitly
[6.247s][info][gc,stats    ]       0 invoked implicitly
[6.247s][info][gc,stats    ] 
[6.247s][info][gc,stats    ]     0 Degenerated GCs
[6.247s][info][gc,stats    ]       0 caused by allocation failure
[6.247s][info][gc,stats    ]       0 upgraded to Full GC
[6.247s][info][gc,stats    ] 
[6.247s][info][gc,stats    ]     0 Full GCs
[6.247s][info][gc,stats    ]       0 invoked explicitly
[6.247s][info][gc,stats    ]       0 invoked implicitly
[6.247s][info][gc,stats    ]       0 caused by allocation failure
[6.247s][info][gc,stats    ]       0 upgraded from Degenerated GC
[6.247s][info][gc,stats    ] 
[6.247s][info][gc,stats    ] 
