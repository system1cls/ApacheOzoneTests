[0.007s][info][gc] Heuristics ergonomically sets -XX:+ExplicitGCInvokesConcurrent
[0.007s][info][gc] Heuristics ergonomically sets -XX:+ShenandoahImplicitGCInvokesConcurrent
[0.007s][info][gc] Using Shenandoah
[0.008s][info][gc,ergo] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[0.008s][info][gc,init] Version: 21.0.7+6-Ubuntu-0ubuntu122.04 (release)
[0.008s][info][gc,init] CPUs: 4 total, 4 available
[0.008s][info][gc,init] Memory: 7937M
[0.008s][info][gc,init] Large Page Support: Disabled
[0.008s][info][gc,init] NUMA Support: Disabled
[0.008s][info][gc,init] Compressed Oops: Enabled (32-bit)
[0.008s][info][gc,init] Heap Min Capacity: 6656K
[0.008s][info][gc,init] Heap Initial Capacity: 127488K
[0.008s][info][gc,init] Heap Max Capacity: 2032128K
[0.008s][info][gc,init] Pre-touch: Disabled
[0.008s][info][gc,init] Mode: Incremental-Update (IU)
[0.008s][info][gc,init] Heuristics: Static
[0.008s][info][gc,init] Heap Region Count: 3969
[0.009s][info][gc,init] Heap Region Size: 512K
[0.009s][info][gc,init] TLAB Size Max: 512K
[0.009s][info][gc,init] Humongous Object Threshold: 512K
[0.009s][info][gc,init] Parallel Workers: 8
[0.009s][info][gc,init] Concurrent Workers: 2
[0.020s][info][gc,metaspace] CDS archive(s) mapped at: [0x00007ffa5b000000-0x00007ffa5bc97000-0x00007ffa5bc97000), size 13201408, SharedBaseAddress: 0x00007ffa5b000000, ArchiveRelocationMode: 1.
[0.020s][info][gc,metaspace] Compressed class space mapped at: 0x00007ffa5c000000-0x00007ffa9c000000, reserved size: 1073741824
[0.020s][info][gc,metaspace] Narrow klass base: 0x00007ffa5b000000, Narrow klass shift: 0, Narrow klass range: 0x100000000
[1.304s][info][gc          ] Trigger: Metadata GC Threshold
[1.305s][info][gc,ergo     ] Free: 1790M, Max: 512K regular, 1790M humongous, Frag: 0% external, 0% internal; Reserve: 101888K, Max: 512K
[1.305s][info][gc,start    ] GC(0) Concurrent reset
[1.305s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reset
[1.305s][info][gc,ergo     ] GC(0) Pacer for Reset. Non-Taxable: 1984M
[1.305s][info][gc          ] GC(0) Concurrent reset 0.638ms
[1.306s][info][gc,start    ] GC(0) Pause Init Mark (unload classes)
[1.306s][info][gc,task     ] GC(0) Using 8 of 8 workers for init marking
[1.306s][info][gc,ergo     ] GC(0) Pacer for Mark. Expected Live: 198M, Free: 1790M, Non-Taxable: 179M, Alloc Tax Rate: 0.1x
[1.306s][info][gc          ] GC(0) Pause Init Mark (unload classes) 0.567ms
[1.306s][info][gc,start    ] GC(0) Concurrent marking roots
[1.306s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking roots
[1.309s][info][gc          ] GC(0) Concurrent marking roots 2.828ms
[1.309s][info][gc,start    ] GC(0) Concurrent marking (unload classes)
[1.309s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking
[1.320s][info][gc          ] GC(0) Concurrent marking (unload classes) 10.908ms
[1.320s][info][gc,start    ] GC(0) Pause Final Mark (unload classes)
[1.320s][info][gc,task     ] GC(0) Using 8 of 8 workers for final marking
[1.320s][info][gc,ergo     ] GC(0) Collectable Garbage: 82084K (99%), Immediate: 5343K (6%), CSet: 76741K (92%)
[1.320s][info][gc,ergo     ] GC(0) Pacer for Evacuation. Used CSet: 84480K, Free: 1794M, Non-Taxable: 179M, Alloc Tax Rate: 1.1x
[1.321s][info][gc          ] GC(0) Pause Final Mark (unload classes) 0.420ms
[1.321s][info][gc,start    ] GC(0) Concurrent thread roots
[1.321s][info][gc,task     ] GC(0) Using 2 of 8 workers for Concurrent thread roots
[1.321s][info][gc          ] GC(0) Concurrent thread roots 0.116ms
[1.321s][info][gc,start    ] GC(0) Concurrent weak references
[1.321s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak references
[1.321s][info][gc,ref      ] GC(0) Encountered references: Soft: 3956, Weak: 2137, Final: 20, Phantom: 796
[1.321s][info][gc,ref      ] GC(0) Discovered  references: Soft: 0, Weak: 965, Final: 0, Phantom: 791
[1.321s][info][gc,ref      ] GC(0) Enqueued    references: Soft: 0, Weak: 483, Final: 0, Phantom: 317
[1.321s][info][gc          ] GC(0) Concurrent weak references 0.351ms
[1.321s][info][gc,start    ] GC(0) Concurrent weak roots
[1.321s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak root
[1.324s][info][gc          ] GC(0) Concurrent weak roots 2.454ms
[1.324s][info][gc,start    ] GC(0) Concurrent cleanup
[1.324s][info][gc          ] GC(0) Concurrent cleanup 97M->92M(125M) 0.086ms
[1.324s][info][gc,ergo     ] GC(0) Free: 1793M, Max: 512K regular, 1787M humongous, Frag: 1% external, 0% internal; Reserve: 100910K, Max: 512K
[1.324s][info][gc,start    ] GC(0) Concurrent class unloading
[1.324s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent class unloading
[1.333s][info][gc          ] GC(0) Concurrent class unloading 8.927ms
[1.333s][info][gc,start    ] GC(0) Concurrent strong roots
[1.333s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent strong root
[1.335s][info][gc          ] GC(0) Concurrent strong roots 2.018ms
[1.335s][info][gc,start    ] GC(0) Concurrent evacuation
[1.335s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent evacuation
[1.342s][info][gc          ] GC(0) Concurrent evacuation 6.917ms
[1.342s][info][gc,start    ] GC(0) Pause Init Update Refs
[1.342s][info][gc,ergo     ] GC(0) Pacer for Update Refs. Used: 100M, Free: 1793M, Non-Taxable: 179M, Alloc Tax Rate: 1.1x
[1.342s][info][gc          ] GC(0) Pause Init Update Refs 0.031ms
[1.342s][info][gc,start    ] GC(0) Concurrent update references
[1.342s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reference update
[1.347s][info][gc          ] GC(0) Concurrent update references 4.827ms
[1.347s][info][gc,start    ] GC(0) Concurrent update thread roots
[1.347s][info][gc          ] GC(0) Concurrent update thread roots 0.098ms
[1.347s][info][gc,start    ] GC(0) Pause Final Update Refs
[1.347s][info][gc,task     ] GC(0) Using 8 of 8 workers for final reference update
[1.347s][info][gc          ] GC(0) Pause Final Update Refs 0.060ms
[1.347s][info][gc,start    ] GC(0) Concurrent cleanup
[1.347s][info][gc          ] GC(0) Concurrent cleanup 100M->18M(133M) 0.067ms
[1.347s][info][gc,ergo     ] Free: 1866M, Max: 512K regular, 1778M humongous, Frag: 5% external, 0% internal; Reserve: 101888K, Max: 512K
[1.347s][info][gc,stats    ] 
[1.347s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[1.347s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[1.347s][info][gc,stats    ] 
[1.347s][info][gc,stats    ] Concurrent Reset                    696 us
[1.347s][info][gc,stats    ] Pause Init Mark (G)                 792 us
[1.347s][info][gc,stats    ] Pause Init Mark (N)                 606 us
[1.347s][info][gc,stats    ]   Update Region States               20 us
[1.347s][info][gc,stats    ] Concurrent Mark Roots              2854 us, parallelism: 1.14x
[1.347s][info][gc,stats    ]   CMR: <total>                     3241 us
[1.347s][info][gc,stats    ]   CMR: Thread Roots                 898 us, workers (us): 334, 565, ---, ---, ---, ---, ---, ---, 
[1.347s][info][gc,stats    ]   CMR: VM Strong Roots              624 us, workers (us): 623,   1, ---, ---, ---, ---, ---, ---, 
[1.347s][info][gc,stats    ]   CMR: CLDG Roots                  1719 us, workers (us): 1719, ---, ---, ---, ---, ---, ---, ---, 
[1.347s][info][gc,stats    ] Concurrent Marking                10971 us
[1.347s][info][gc,stats    ] Pause Final Mark (G)                547 us
[1.347s][info][gc,stats    ] Pause Final Mark (N)                453 us
[1.347s][info][gc,stats    ]   Finish Mark                       181 us
[1.347s][info][gc,stats    ]   Update Region States               17 us
[1.347s][info][gc,stats    ]   Choose Collection Set             109 us
[1.347s][info][gc,stats    ]   Rebuild Free Set                   20 us
[1.347s][info][gc,stats    ] Concurrent Thread Roots             129 us, parallelism: 1.05x
[1.347s][info][gc,stats    ]   CTR: <total>                      136 us
[1.348s][info][gc,stats    ]   CTR: Thread Roots                 136 us, workers (us):  83,  53, ---, ---, ---, ---, ---, ---, 
[1.348s][info][gc,stats    ] Concurrent Weak References          384 us, parallelism: 1.07x
[1.348s][info][gc,stats    ]   CWRF: <total>                     411 us
[1.348s][info][gc,stats    ]   CWRF: Weak References             411 us, workers (us): 230, 180, ---, ---, ---, ---, ---, ---, 
[1.348s][info][gc,stats    ] Concurrent Weak Roots              2513 us
[1.348s][info][gc,stats    ]   Roots                            2195 us, parallelism: 1.82x
[1.348s][info][gc,stats    ]     CWR: <total>                   3985 us
[1.348s][info][gc,stats    ]     CWR: Code Cache Roots          1241 us, workers (us): 751, 490, ---, ---, ---, ---, ---, ---, 
[1.348s][info][gc,stats    ]     CWR: VM Weak Roots             2731 us, workers (us): 1342, 1388, ---, ---, ---, ---, ---, ---, 
[1.348s][info][gc,stats    ]     CWR: CLDG Roots                  14 us, workers (us):  14, ---, ---, ---, ---, ---, ---, ---, 
[1.348s][info][gc,stats    ]   Rendezvous                        181 us
[1.348s][info][gc,stats    ] Concurrent Cleanup                  127 us
[1.348s][info][gc,stats    ] Concurrent Class Unloading         8996 us
[1.348s][info][gc,stats    ]   Unlink Stale                     1785 us
[1.348s][info][gc,stats    ]     System Dictionary               131 us
[1.348s][info][gc,stats    ]     Weak Class Links                  0 us
[1.348s][info][gc,stats    ]     Code Roots                     1653 us
[1.348s][info][gc,stats    ]   Rendezvous                        199 us
[1.348s][info][gc,stats    ]   Purge Unlinked                   6848 us
[1.348s][info][gc,stats    ]     Code Roots                     6837 us
[1.348s][info][gc,stats    ]     CLDG                             11 us
[1.348s][info][gc,stats    ]     Exception Caches                  0 us
[1.348s][info][gc,stats    ] Concurrent Strong Roots            2056 us, parallelism: 0.67x
[1.348s][info][gc,stats    ]   CSR: <total>                     1371 us
[1.348s][info][gc,stats    ]   CSR: VM Strong Roots               21 us, workers (us):  20,   1, ---, ---, ---, ---, ---, ---, 
[1.348s][info][gc,stats    ]   CSR: CLDG Roots                  1351 us, workers (us): 1351, ---, ---, ---, ---, ---, ---, ---, 
[1.348s][info][gc,stats    ] Concurrent Evacuation              6943 us
[1.348s][info][gc,stats    ] Pause Init Update Refs (G)          137 us
[1.348s][info][gc,stats    ] Pause Init Update Refs (N)           40 us
[1.348s][info][gc,stats    ]   Manage GCLABs                       4 us
[1.348s][info][gc,stats    ] Concurrent Update Refs             4850 us
[1.348s][info][gc,stats    ] Concurrent Update Thread Roots      110 us
[1.348s][info][gc,stats    ] Pause Final Update Refs (G)         166 us
[1.348s][info][gc,stats    ] Pause Final Update Refs (N)          70 us
[1.348s][info][gc,stats    ]   Update Region States               15 us
[1.348s][info][gc,stats    ]   Trash Collection Set                4 us
[1.348s][info][gc,stats    ]   Rebuild Free Set                   16 us
[1.348s][info][gc,stats    ] Concurrent Cleanup                   77 us
[1.348s][info][gc,stats    ] 
[1.348s][info][gc,stats    ] Allocation pacing accrued:
[1.348s][info][gc,stats    ]       0 of  1340 ms (  0.0%): <total>
[1.348s][info][gc,stats    ]       0 of  1340 ms (  0.0%): <average total>
[1.348s][info][gc,stats    ] 
[1.348s][info][gc,metaspace] Metaspace: 21213K(21568K)->21472K(21824K) NonClass: 18875K(19072K)->19094K(19264K) Class: 2338K(2496K)->2378K(2560K)
[1.348s][info][gc,ergo     ] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[7.680s][info][gc          ] Cancelling GC: Stopping VM
[7.680s][info][gc,heap,exit] Heap
[7.680s][info][gc,heap,exit] Shenandoah Heap
[7.680s][info][gc,heap,exit]  1984M max, 1984M soft max, 133M committed, 38440K used
[7.680s][info][gc,heap,exit]  3969 x 512K regions
[7.681s][info][gc,heap,exit] Status: cancelled
[7.681s][info][gc,heap,exit] Reserved region:
[7.681s][info][gc,heap,exit]  - [0x0000000083f80000, 0x0000000100000000) 
[7.681s][info][gc,heap,exit] Collection set:
[7.681s][info][gc,heap,exit]  - map (vanilla): 0x000000000001107f
[7.681s][info][gc,heap,exit]  - map (biased):  0x0000000000010000
[7.681s][info][gc,heap,exit] 
[7.681s][info][gc,heap,exit]  Metaspace       used 25391K, committed 25728K, reserved 1114112K
[7.681s][info][gc,heap,exit]   class space    used 2924K, committed 3072K, reserved 1048576K
[7.681s][info][gc,stats    ] 
[7.681s][info][gc,stats    ] GC STATISTICS:
[7.681s][info][gc,stats    ]   "(G)" (gross) pauses include VM time: time to notify and block threads, do the pre-
[7.681s][info][gc,stats    ]         and post-safepoint housekeeping. Use -Xlog:safepoint+stats to dissect.
[7.681s][info][gc,stats    ]   "(N)" (net) pauses are the times spent in the actual GC code.
[7.681s][info][gc,stats    ]   "a" is average time for each phase, look at levels to see if average makes sense.
[7.681s][info][gc,stats    ]   "lvls" are quantiles: 0% (minimum), 25%, 50% (median), 75%, 100% (maximum).
[7.681s][info][gc,stats    ] 
[7.681s][info][gc,stats    ]   All times are wall-clock times, except per-root-class counters, that are sum over
[7.681s][info][gc,stats    ]   all workers. Dividing the <total> over the root stage time estimates parallelism.
[7.681s][info][gc,stats    ] 
[7.681s][info][gc,stats    ]   Pacing delays are measured from entering the pacing code till exiting it. Therefore,
[7.681s][info][gc,stats    ]   observed pacing delays may be higher than the threshold when paced thread spent more
[7.681s][info][gc,stats    ]   time in the pacing code. It usually happens when thread is de-scheduled while paced,
[7.681s][info][gc,stats    ]   OS takes longer to unblock the thread, or JVM experiences an STW pause.
[7.681s][info][gc,stats    ] 
[7.681s][info][gc,stats    ]   Higher delay would prevent application outpacing the GC, but it will hide the GC latencies
[7.681s][info][gc,stats    ]   from the STW pause times. Pacing affects the individual threads, and so it would also be
[7.681s][info][gc,stats    ]   invisible to the usual profiling tools, but would add up to end-to-end application latency.
[7.682s][info][gc,stats    ]   Raise max pacing delay with care.
[7.682s][info][gc,stats    ] 
[7.682s][info][gc,stats    ] Concurrent Reset               =    0.001 s (a =      696 us) (n =     1) (lvls, us =      695,      695,      695,      695,      696)
[7.682s][info][gc,stats    ] Pause Init Mark (G)            =    0.001 s (a =      792 us) (n =     1) (lvls, us =      791,      791,      791,      791,      792)
[7.682s][info][gc,stats    ] Pause Init Mark (N)            =    0.001 s (a =      606 us) (n =     1) (lvls, us =      605,      605,      605,      605,      606)
[7.682s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       20 us) (n =     1) (lvls, us =       20,       20,       20,       20,       20)
[7.682s][info][gc,stats    ] Concurrent Mark Roots          =    0.003 s (a =     2854 us) (n =     1) (lvls, us =     2852,     2852,     2852,     2852,     2854)
[7.682s][info][gc,stats    ]   CMR: <total>                 =    0.003 s (a =     3241 us) (n =     1) (lvls, us =     3223,     3223,     3223,     3223,     3241)
[7.682s][info][gc,stats    ]   CMR: Thread Roots            =    0.001 s (a =      898 us) (n =     1) (lvls, us =      896,      896,      896,      896,      898)
[7.682s][info][gc,stats    ]   CMR: VM Strong Roots         =    0.001 s (a =      624 us) (n =     1) (lvls, us =      623,      623,      623,      623,      624)
[7.682s][info][gc,stats    ]   CMR: CLDG Roots              =    0.002 s (a =     1719 us) (n =     1) (lvls, us =     1719,     1719,     1719,     1719,     1719)
[7.682s][info][gc,stats    ] Concurrent Marking             =    0.011 s (a =    10971 us) (n =     1) (lvls, us =    10938,    10938,    10938,    10938,    10971)
[7.682s][info][gc,stats    ] Pause Final Mark (G)           =    0.001 s (a =      547 us) (n =     1) (lvls, us =      547,      547,      547,      547,      547)
[7.682s][info][gc,stats    ] Pause Final Mark (N)           =    0.000 s (a =      453 us) (n =     1) (lvls, us =      453,      453,      453,      453,      453)
[7.682s][info][gc,stats    ]   Finish Mark                  =    0.000 s (a =      181 us) (n =     1) (lvls, us =      180,      180,      180,      180,      181)
[7.682s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       17 us) (n =     1) (lvls, us =       16,       16,       16,       16,       17)
[7.682s][info][gc,stats    ]   Choose Collection Set        =    0.000 s (a =      109 us) (n =     1) (lvls, us =      107,      107,      107,      107,      109)
[7.682s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       20 us) (n =     1) (lvls, us =       20,       20,       20,       20,       20)
[7.682s][info][gc,stats    ] Concurrent Thread Roots        =    0.000 s (a =      129 us) (n =     1) (lvls, us =      129,      129,      129,      129,      129)
[7.682s][info][gc,stats    ]   CTR: <total>                 =    0.000 s (a =      136 us) (n =     1) (lvls, us =      135,      135,      135,      135,      136)
[7.682s][info][gc,stats    ]   CTR: Thread Roots            =    0.000 s (a =      136 us) (n =     1) (lvls, us =      135,      135,      135,      135,      136)
[7.682s][info][gc,stats    ] Concurrent Weak References     =    0.000 s (a =      384 us) (n =     1) (lvls, us =      383,      383,      383,      383,      384)
[7.682s][info][gc,stats    ]   CWRF: <total>                =    0.000 s (a =      411 us) (n =     1) (lvls, us =      410,      410,      410,      410,      411)
[7.682s][info][gc,stats    ]   CWRF: Weak References        =    0.000 s (a =      411 us) (n =     1) (lvls, us =      410,      410,      410,      410,      411)
[7.682s][info][gc,stats    ] Concurrent Weak Roots          =    0.003 s (a =     2513 us) (n =     1) (lvls, us =     2500,     2500,     2500,     2500,     2513)
[7.682s][info][gc,stats    ]   Roots                        =    0.002 s (a =     2195 us) (n =     1) (lvls, us =     2188,     2188,     2188,     2188,     2195)
[7.682s][info][gc,stats    ]     CWR: <total>               =    0.004 s (a =     3985 us) (n =     1) (lvls, us =     3984,     3984,     3984,     3984,     3985)
[7.683s][info][gc,stats    ]     CWR: Code Cache Roots      =    0.001 s (a =     1241 us) (n =     1) (lvls, us =     1230,     1230,     1230,     1230,     1241)
[7.683s][info][gc,stats    ]     CWR: VM Weak Roots         =    0.003 s (a =     2731 us) (n =     1) (lvls, us =     2715,     2715,     2715,     2715,     2731)
[7.683s][info][gc,stats    ]     CWR: CLDG Roots            =    0.000 s (a =       14 us) (n =     1) (lvls, us =       13,       13,       13,       13,       14)
[7.683s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =      181 us) (n =     1) (lvls, us =      180,      180,      180,      180,      181)
[7.683s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =      127 us) (n =     1) (lvls, us =      125,      125,      125,      125,      127)
[7.683s][info][gc,stats    ] Concurrent Class Unloading     =    0.009 s (a =     8996 us) (n =     1) (lvls, us =     8984,     8984,     8984,     8984,     8996)
[7.683s][info][gc,stats    ]   Unlink Stale                 =    0.002 s (a =     1785 us) (n =     1) (lvls, us =     1777,     1777,     1777,     1777,     1785)
[7.683s][info][gc,stats    ]     System Dictionary          =    0.000 s (a =      131 us) (n =     1) (lvls, us =      131,      131,      131,      131,      131)
[7.683s][info][gc,stats    ]     Weak Class Links           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[7.683s][info][gc,stats    ]     Code Roots                 =    0.002 s (a =     1653 us) (n =     1) (lvls, us =     1641,     1641,     1641,     1641,     1653)
[7.683s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =      199 us) (n =     1) (lvls, us =      197,      197,      197,      197,      199)
[7.683s][info][gc,stats    ]   Purge Unlinked               =    0.007 s (a =     6848 us) (n =     1) (lvls, us =     6836,     6836,     6836,     6836,     6848)
[7.683s][info][gc,stats    ]     Code Roots                 =    0.007 s (a =     6837 us) (n =     1) (lvls, us =     6836,     6836,     6836,     6836,     6837)
[7.683s][info][gc,stats    ]     CLDG                       =    0.000 s (a =       11 us) (n =     1) (lvls, us =       11,       11,       11,       11,       11)
[7.683s][info][gc,stats    ]     Exception Caches           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[7.683s][info][gc,stats    ] Concurrent Strong Roots        =    0.002 s (a =     2056 us) (n =     1) (lvls, us =     2051,     2051,     2051,     2051,     2056)
[7.683s][info][gc,stats    ]   CSR: <total>                 =    0.001 s (a =     1371 us) (n =     1) (lvls, us =     1367,     1367,     1367,     1367,     1371)
[7.683s][info][gc,stats    ]   CSR: VM Strong Roots         =    0.000 s (a =       21 us) (n =     1) (lvls, us =       21,       21,       21,       21,       21)
[7.683s][info][gc,stats    ]   CSR: CLDG Roots              =    0.001 s (a =     1351 us) (n =     1) (lvls, us =     1348,     1348,     1348,     1348,     1351)
[7.683s][info][gc,stats    ] Concurrent Evacuation          =    0.007 s (a =     6943 us) (n =     1) (lvls, us =     6934,     6934,     6934,     6934,     6943)
[7.683s][info][gc,stats    ] Pause Init Update Refs (G)     =    0.000 s (a =      137 us) (n =     1) (lvls, us =      135,      135,      135,      135,      137)
[7.683s][info][gc,stats    ] Pause Init Update Refs (N)     =    0.000 s (a =       40 us) (n =     1) (lvls, us =       40,       40,       40,       40,       40)
[7.683s][info][gc,stats    ]   Manage GCLABs                =    0.000 s (a =        4 us) (n =     1) (lvls, us =        4,        4,        4,        4,        4)
[7.683s][info][gc,stats    ] Concurrent Update Refs         =    0.005 s (a =     4850 us) (n =     1) (lvls, us =     4844,     4844,     4844,     4844,     4850)
[7.684s][info][gc,stats    ] Concurrent Update Thread Roots =    0.000 s (a =      110 us) (n =     1) (lvls, us =      109,      109,      109,      109,      110)
[7.684s][info][gc,stats    ] Pause Final Update Refs (G)    =    0.000 s (a =      166 us) (n =     1) (lvls, us =      164,      164,      164,      164,      166)
[7.684s][info][gc,stats    ] Pause Final Update Refs (N)    =    0.000 s (a =       70 us) (n =     1) (lvls, us =       70,       70,       70,       70,       70)
[7.684s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       15 us) (n =     1) (lvls, us =       15,       15,       15,       15,       15)
[7.684s][info][gc,stats    ]   Trash Collection Set         =    0.000 s (a =        4 us) (n =     1) (lvls, us =        4,        4,        4,        4,        4)
[7.684s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       16 us) (n =     1) (lvls, us =       15,       15,       15,       15,       16)
[7.684s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =       77 us) (n =     1) (lvls, us =       76,       76,       76,       76,       77)
[7.684s][info][gc,stats    ] 
[7.684s][info][gc,stats    ] 
[7.684s][info][gc,stats    ] Under allocation pressure, concurrent cycles may cancel, and either continue cycle
[7.684s][info][gc,stats    ] under stop-the-world pause or result in stop-the-world Full GC. Increase heap size,
[7.684s][info][gc,stats    ] tune GC heuristics, set more aggressive pacing delay, or lower allocation rate
[7.684s][info][gc,stats    ] to avoid Degenerated and Full GC cycles.
[7.684s][info][gc,stats    ] 
[7.684s][info][gc,stats    ]     1 successful concurrent GCs
[7.684s][info][gc,stats    ]       0 invoked explicitly
[7.684s][info][gc,stats    ]       0 invoked implicitly
[7.684s][info][gc,stats    ] 
[7.684s][info][gc,stats    ]     0 Degenerated GCs
[7.684s][info][gc,stats    ]       0 caused by allocation failure
[7.684s][info][gc,stats    ]       0 upgraded to Full GC
[7.684s][info][gc,stats    ] 
[7.684s][info][gc,stats    ]     0 Full GCs
[7.684s][info][gc,stats    ]       0 invoked explicitly
[7.684s][info][gc,stats    ]       0 invoked implicitly
[7.685s][info][gc,stats    ]       0 caused by allocation failure
[7.685s][info][gc,stats    ]       0 upgraded from Degenerated GC
[7.685s][info][gc,stats    ] 
[7.685s][info][gc,stats    ] 
