[0.005s][info][gc] Heuristics ergonomically sets -XX:+ExplicitGCInvokesConcurrent
[0.005s][info][gc] Heuristics ergonomically sets -XX:+ShenandoahImplicitGCInvokesConcurrent
[0.005s][info][gc] Using Shenandoah
[0.006s][info][gc,ergo] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[0.007s][info][gc,init] Version: 21.0.7+6-Ubuntu-0ubuntu122.04 (release)
[0.007s][info][gc,init] CPUs: 4 total, 4 available
[0.007s][info][gc,init] Memory: 7937M
[0.007s][info][gc,init] Large Page Support: Disabled
[0.007s][info][gc,init] NUMA Support: Disabled
[0.007s][info][gc,init] Compressed Oops: Enabled (32-bit)
[0.007s][info][gc,init] Heap Min Capacity: 6656K
[0.007s][info][gc,init] Heap Initial Capacity: 127488K
[0.007s][info][gc,init] Heap Max Capacity: 2032128K
[0.007s][info][gc,init] Pre-touch: Disabled
[0.007s][info][gc,init] Mode: Incremental-Update (IU)
[0.007s][info][gc,init] Heuristics: Static
[0.007s][info][gc,init] Heap Region Count: 3969
[0.007s][info][gc,init] Heap Region Size: 512K
[0.007s][info][gc,init] TLAB Size Max: 512K
[0.007s][info][gc,init] Humongous Object Threshold: 512K
[0.007s][info][gc,init] Parallel Workers: 8
[0.007s][info][gc,init] Concurrent Workers: 2
[0.025s][info][gc,metaspace] CDS archive(s) mapped at: [0x00007fce5b000000-0x00007fce5bc97000-0x00007fce5bc97000), size 13201408, SharedBaseAddress: 0x00007fce5b000000, ArchiveRelocationMode: 1.
[0.028s][info][gc,metaspace] Compressed class space mapped at: 0x00007fce5c000000-0x00007fce9c000000, reserved size: 1073741824
[0.028s][info][gc,metaspace] Narrow klass base: 0x00007fce5b000000, Narrow klass shift: 0, Narrow klass range: 0x100000000
[1.914s][info][gc          ] Trigger: Metadata GC Threshold
[1.914s][info][gc,ergo     ] Free: 1747M, Max: 512K regular, 1747M humongous, Frag: 0% external, 0% internal; Reserve: 101888K, Max: 512K
[1.914s][info][gc,start    ] GC(0) Concurrent reset
[1.914s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reset
[1.914s][info][gc,ergo     ] GC(0) Pacer for Reset. Non-Taxable: 1984M
[1.914s][info][gc          ] GC(0) Concurrent reset 0.467ms
[1.915s][info][gc,start    ] GC(0) Pause Init Mark (unload classes)
[1.915s][info][gc,task     ] GC(0) Using 8 of 8 workers for init marking
[1.915s][info][gc,ergo     ] GC(0) Pacer for Mark. Expected Live: 198M, Free: 1747M, Non-Taxable: 174M, Alloc Tax Rate: 0.1x
[1.915s][info][gc          ] GC(0) Pause Init Mark (unload classes) 0.534ms
[1.915s][info][gc,start    ] GC(0) Concurrent marking roots
[1.915s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking roots
[1.917s][info][gc          ] GC(0) Concurrent marking roots 2.225ms
[1.918s][info][gc,start    ] GC(0) Concurrent marking (unload classes)
[1.918s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking
[1.964s][info][gc          ] GC(0) Concurrent marking (unload classes) 46.909ms
[1.965s][info][gc,start    ] GC(0) Pause Final Mark (unload classes)
[1.965s][info][gc,task     ] GC(0) Using 8 of 8 workers for final marking
[1.970s][info][gc,ergo     ] GC(0) Collectable Garbage: 72070K (98%), Immediate: 5359K (7%), CSet: 66711K (91%)
[1.970s][info][gc,ergo     ] GC(0) Pacer for Evacuation. Used CSet: 74752K, Free: 1747M, Non-Taxable: 174M, Alloc Tax Rate: 1.1x
[1.970s][info][gc          ] GC(0) Pause Final Mark (unload classes) 5.912ms
[1.970s][info][gc,start    ] GC(0) Concurrent thread roots
[1.971s][info][gc,task     ] GC(0) Using 2 of 8 workers for Concurrent thread roots
[1.971s][info][gc          ] GC(0) Concurrent thread roots 0.221ms
[1.971s][info][gc,start    ] GC(0) Concurrent weak references
[1.971s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak references
[1.971s][info][gc,ref      ] GC(0) Encountered references: Soft: 3955, Weak: 2098, Final: 4, Phantom: 820
[1.971s][info][gc,ref      ] GC(0) Discovered  references: Soft: 0, Weak: 832, Final: 1, Phantom: 434
[1.971s][info][gc,ref      ] GC(0) Enqueued    references: Soft: 0, Weak: 499, Final: 0, Phantom: 230
[1.971s][info][gc          ] GC(0) Concurrent weak references 0.325ms
[1.971s][info][gc,start    ] GC(0) Concurrent weak roots
[1.971s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak root
[1.973s][info][gc          ] GC(0) Concurrent weak roots 1.830ms
[1.973s][info][gc,start    ] GC(0) Concurrent cleanup
[1.973s][info][gc          ] GC(0) Concurrent cleanup 141M->136M(144M) 0.105ms
[1.973s][info][gc,ergo     ] GC(0) Free: 1746M, Max: 512K regular, 1741M humongous, Frag: 1% external, 0% internal; Reserve: 101376K, Max: 512K
[1.973s][info][gc,start    ] GC(0) Concurrent class unloading
[1.973s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent class unloading
[1.978s][info][gc          ] GC(0) Concurrent class unloading 4.945ms
[1.978s][info][gc,start    ] GC(0) Concurrent strong roots
[1.978s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent strong root
[1.980s][info][gc          ] GC(0) Concurrent strong roots 2.157ms
[1.980s][info][gc,start    ] GC(0) Concurrent evacuation
[1.980s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent evacuation
[1.988s][info][gc          ] GC(0) Concurrent evacuation 8.035ms
[1.988s][info][gc,start    ] GC(0) Pause Init Update Refs
[1.988s][info][gc,ergo     ] GC(0) Pacer for Update Refs. Used: 145M, Free: 1746M, Non-Taxable: 174M, Alloc Tax Rate: 1.1x
[1.988s][info][gc          ] GC(0) Pause Init Update Refs 0.045ms
[1.989s][info][gc,start    ] GC(0) Concurrent update references
[1.989s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reference update
[2.006s][info][gc          ] GC(0) Concurrent update references 17.565ms
[2.006s][info][gc,start    ] GC(0) Concurrent update thread roots
[2.006s][info][gc          ] GC(0) Concurrent update thread roots 0.250ms
[2.006s][info][gc,start    ] GC(0) Pause Final Update Refs
[2.007s][info][gc,task     ] GC(0) Using 8 of 8 workers for final reference update
[2.007s][info][gc          ] GC(0) Pause Final Update Refs 0.171ms
[2.007s][info][gc,start    ] GC(0) Concurrent cleanup
[2.007s][info][gc          ] GC(0) Concurrent cleanup 146M->73M(153M) 0.092ms
[2.007s][info][gc,ergo     ] Free: 1809M, Max: 512K regular, 1732M humongous, Frag: 5% external, 0% internal; Reserve: 101888K, Max: 512K
[2.007s][info][gc,stats    ] 
[2.007s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[2.007s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[2.007s][info][gc,stats    ] 
[2.007s][info][gc,stats    ] Concurrent Reset                    514 us
[2.007s][info][gc,stats    ] Pause Init Mark (G)                 764 us
[2.007s][info][gc,stats    ] Pause Init Mark (N)                 546 us
[2.007s][info][gc,stats    ]   Update Region States               24 us
[2.007s][info][gc,stats    ] Concurrent Mark Roots              2271 us, parallelism: 0.84x
[2.007s][info][gc,stats    ]   CMR: <total>                     1906 us
[2.007s][info][gc,stats    ]   CMR: Thread Roots                 663 us, workers (us): 663,   0, ---, ---, ---, ---, ---, ---, 
[2.007s][info][gc,stats    ]   CMR: VM Strong Roots              321 us, workers (us): 321,   0, ---, ---, ---, ---, ---, ---, 
[2.007s][info][gc,stats    ]   CMR: CLDG Roots                   922 us, workers (us): 922, ---, ---, ---, ---, ---, ---, ---, 
[2.007s][info][gc,stats    ] Concurrent Marking                46937 us
[2.007s][info][gc,stats    ] Pause Final Mark (G)               6037 us
[2.007s][info][gc,stats    ] Pause Final Mark (N)               5921 us
[2.007s][info][gc,stats    ]   Finish Mark                      5721 us
[2.007s][info][gc,stats    ]   Update Region States               39 us
[2.007s][info][gc,stats    ]   Choose Collection Set              71 us
[2.007s][info][gc,stats    ]   Rebuild Free Set                   21 us
[2.007s][info][gc,stats    ] Concurrent Thread Roots             236 us, parallelism: 1.09x
[2.007s][info][gc,stats    ]   CTR: <total>                      257 us
[2.007s][info][gc,stats    ]   CTR: Thread Roots                 257 us, workers (us): 178,  79, ---, ---, ---, ---, ---, ---, 
[2.007s][info][gc,stats    ] Concurrent Weak References          333 us, parallelism: 0.88x
[2.007s][info][gc,stats    ]   CWRF: <total>                     295 us
[2.007s][info][gc,stats    ]   CWRF: Weak References             295 us, workers (us): 265,  29, ---, ---, ---, ---, ---, ---, 
[2.007s][info][gc,stats    ] Concurrent Weak Roots              1850 us
[2.007s][info][gc,stats    ]   Roots                            1755 us, parallelism: 1.59x
[2.007s][info][gc,stats    ]     CWR: <total>                   2794 us
[2.007s][info][gc,stats    ]     CWR: Code Cache Roots           872 us, workers (us): 422, 450, ---, ---, ---, ---, ---, ---, 
[2.007s][info][gc,stats    ]     CWR: VM Weak Roots             1902 us, workers (us): 1206, 696, ---, ---, ---, ---, ---, ---, 
[2.007s][info][gc,stats    ]     CWR: CLDG Roots                  20 us, workers (us):  20, ---, ---, ---, ---, ---, ---, ---, 
[2.007s][info][gc,stats    ]   Rendezvous                         46 us
[2.007s][info][gc,stats    ] Concurrent Cleanup                  115 us
[2.007s][info][gc,stats    ] Concurrent Class Unloading         4962 us
[2.007s][info][gc,stats    ]   Unlink Stale                     1855 us
[2.007s][info][gc,stats    ]     System Dictionary                39 us
[2.007s][info][gc,stats    ]     Weak Class Links                  0 us
[2.007s][info][gc,stats    ]     Code Roots                     1815 us
[2.007s][info][gc,stats    ]   Rendezvous                         29 us
[2.007s][info][gc,stats    ]   Purge Unlinked                   3041 us
[2.007s][info][gc,stats    ]     Code Roots                     3030 us
[2.007s][info][gc,stats    ]     CLDG                             11 us
[2.007s][info][gc,stats    ]     Exception Caches                  0 us
[2.007s][info][gc,stats    ] Concurrent Strong Roots            2173 us, parallelism: 0.97x
[2.007s][info][gc,stats    ]   CSR: <total>                     2114 us
[2.007s][info][gc,stats    ]   CSR: VM Strong Roots               24 us, workers (us):  19,   5, ---, ---, ---, ---, ---, ---, 
[2.007s][info][gc,stats    ]   CSR: CLDG Roots                  2090 us, workers (us): ---, 2090, ---, ---, ---, ---, ---, ---, 
[2.007s][info][gc,stats    ] Concurrent Evacuation              8057 us
[2.007s][info][gc,stats    ] Pause Init Update Refs (G)          240 us
[2.007s][info][gc,stats    ] Pause Init Update Refs (N)           54 us
[2.007s][info][gc,stats    ]   Manage GCLABs                       5 us
[2.007s][info][gc,stats    ] Concurrent Update Refs            17595 us
[2.007s][info][gc,stats    ] Concurrent Update Thread Roots      260 us
[2.007s][info][gc,stats    ] Pause Final Update Refs (G)         308 us
[2.007s][info][gc,stats    ] Pause Final Update Refs (N)         195 us
[2.007s][info][gc,stats    ]   Update Region States               31 us
[2.007s][info][gc,stats    ]   Trash Collection Set                5 us
[2.007s][info][gc,stats    ]   Rebuild Free Set                   26 us
[2.007s][info][gc,stats    ] Concurrent Cleanup                  102 us
[2.007s][info][gc,stats    ] 
[2.007s][info][gc,stats    ] Allocation pacing accrued:
[2.007s][info][gc,stats    ]       0 of  2001 ms (  0.0%): <total>
[2.007s][info][gc,stats    ]       0 of  2001 ms (  0.0%): <average total>
[2.007s][info][gc,stats    ] 
[2.007s][info][gc,metaspace] Metaspace: 21242K(21632K)->22329K(22656K) NonClass: 18890K(19072K)->19833K(19968K) Class: 2351K(2560K)->2496K(2688K)
[2.007s][info][gc,ergo     ] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[6.305s][info][gc          ] Cancelling GC: Stopping VM
[6.306s][info][gc,heap,exit] Heap
[6.306s][info][gc,heap,exit] Shenandoah Heap
[6.306s][info][gc,heap,exit]  1984M max, 1984M soft max, 153M committed, 85944K used
[6.306s][info][gc,heap,exit]  3969 x 512K regions
[6.306s][info][gc,heap,exit] Status: cancelled
[6.306s][info][gc,heap,exit] Reserved region:
[6.306s][info][gc,heap,exit]  - [0x0000000083f80000, 0x0000000100000000) 
[6.306s][info][gc,heap,exit] Collection set:
[6.306s][info][gc,heap,exit]  - map (vanilla): 0x000000000001107f
[6.306s][info][gc,heap,exit]  - map (biased):  0x0000000000010000
[6.306s][info][gc,heap,exit] 
[6.306s][info][gc,heap,exit]  Metaspace       used 25076K, committed 25408K, reserved 1114112K
[6.306s][info][gc,heap,exit]   class space    used 2775K, committed 2880K, reserved 1048576K
[6.306s][info][gc,stats    ] 
[6.306s][info][gc,stats    ] GC STATISTICS:
[6.306s][info][gc,stats    ]   "(G)" (gross) pauses include VM time: time to notify and block threads, do the pre-
[6.306s][info][gc,stats    ]         and post-safepoint housekeeping. Use -Xlog:safepoint+stats to dissect.
[6.306s][info][gc,stats    ]   "(N)" (net) pauses are the times spent in the actual GC code.
[6.306s][info][gc,stats    ]   "a" is average time for each phase, look at levels to see if average makes sense.
[6.306s][info][gc,stats    ]   "lvls" are quantiles: 0% (minimum), 25%, 50% (median), 75%, 100% (maximum).
[6.306s][info][gc,stats    ] 
[6.306s][info][gc,stats    ]   All times are wall-clock times, except per-root-class counters, that are sum over
[6.306s][info][gc,stats    ]   all workers. Dividing the <total> over the root stage time estimates parallelism.
[6.306s][info][gc,stats    ] 
[6.306s][info][gc,stats    ]   Pacing delays are measured from entering the pacing code till exiting it. Therefore,
[6.306s][info][gc,stats    ]   observed pacing delays may be higher than the threshold when paced thread spent more
[6.307s][info][gc,stats    ]   time in the pacing code. It usually happens when thread is de-scheduled while paced,
[6.307s][info][gc,stats    ]   OS takes longer to unblock the thread, or JVM experiences an STW pause.
[6.307s][info][gc,stats    ] 
[6.307s][info][gc,stats    ]   Higher delay would prevent application outpacing the GC, but it will hide the GC latencies
[6.307s][info][gc,stats    ]   from the STW pause times. Pacing affects the individual threads, and so it would also be
[6.307s][info][gc,stats    ]   invisible to the usual profiling tools, but would add up to end-to-end application latency.
[6.307s][info][gc,stats    ]   Raise max pacing delay with care.
[6.307s][info][gc,stats    ] 
[6.307s][info][gc,stats    ] Concurrent Reset               =    0.001 s (a =      514 us) (n =     1) (lvls, us =      514,      514,      514,      514,      514)
[6.307s][info][gc,stats    ] Pause Init Mark (G)            =    0.001 s (a =      764 us) (n =     1) (lvls, us =      764,      764,      764,      764,      764)
[6.307s][info][gc,stats    ] Pause Init Mark (N)            =    0.001 s (a =      546 us) (n =     1) (lvls, us =      545,      545,      545,      545,      546)
[6.307s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       24 us) (n =     1) (lvls, us =       23,       23,       23,       23,       24)
[6.307s][info][gc,stats    ] Concurrent Mark Roots          =    0.002 s (a =     2271 us) (n =     1) (lvls, us =     2266,     2266,     2266,     2266,     2271)
[6.307s][info][gc,stats    ]   CMR: <total>                 =    0.002 s (a =     1906 us) (n =     1) (lvls, us =     1895,     1895,     1895,     1895,     1906)
[6.307s][info][gc,stats    ]   CMR: Thread Roots            =    0.001 s (a =      663 us) (n =     1) (lvls, us =      662,      662,      662,      662,      663)
[6.307s][info][gc,stats    ]   CMR: VM Strong Roots         =    0.000 s (a =      321 us) (n =     1) (lvls, us =      320,      320,      320,      320,      321)
[6.307s][info][gc,stats    ]   CMR: CLDG Roots              =    0.001 s (a =      922 us) (n =     1) (lvls, us =      920,      920,      920,      920,      922)
[6.307s][info][gc,stats    ] Concurrent Marking             =    0.047 s (a =    46937 us) (n =     1) (lvls, us =    46875,    46875,    46875,    46875,    46937)
[6.307s][info][gc,stats    ] Pause Final Mark (G)           =    0.006 s (a =     6037 us) (n =     1) (lvls, us =     6035,     6035,     6035,     6035,     6037)
[6.307s][info][gc,stats    ] Pause Final Mark (N)           =    0.006 s (a =     5921 us) (n =     1) (lvls, us =     5918,     5918,     5918,     5918,     5921)
[6.307s][info][gc,stats    ]   Finish Mark                  =    0.006 s (a =     5721 us) (n =     1) (lvls, us =     5703,     5703,     5703,     5703,     5721)
[6.307s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       39 us) (n =     1) (lvls, us =       39,       39,       39,       39,       39)
[6.307s][info][gc,stats    ]   Choose Collection Set        =    0.000 s (a =       71 us) (n =     1) (lvls, us =       71,       71,       71,       71,       71)
[6.307s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       21 us) (n =     1) (lvls, us =       21,       21,       21,       21,       21)
[6.307s][info][gc,stats    ] Concurrent Thread Roots        =    0.000 s (a =      236 us) (n =     1) (lvls, us =      234,      234,      234,      234,      236)
[6.307s][info][gc,stats    ]   CTR: <total>                 =    0.000 s (a =      257 us) (n =     1) (lvls, us =      256,      256,      256,      256,      257)
[6.307s][info][gc,stats    ]   CTR: Thread Roots            =    0.000 s (a =      257 us) (n =     1) (lvls, us =      256,      256,      256,      256,      257)
[6.307s][info][gc,stats    ] Concurrent Weak References     =    0.000 s (a =      333 us) (n =     1) (lvls, us =      332,      332,      332,      332,      333)
[6.307s][info][gc,stats    ]   CWRF: <total>                =    0.000 s (a =      295 us) (n =     1) (lvls, us =      293,      293,      293,      293,      295)
[6.307s][info][gc,stats    ]   CWRF: Weak References        =    0.000 s (a =      295 us) (n =     1) (lvls, us =      293,      293,      293,      293,      295)
[6.308s][info][gc,stats    ] Concurrent Weak Roots          =    0.002 s (a =     1850 us) (n =     1) (lvls, us =     1836,     1836,     1836,     1836,     1850)
[6.308s][info][gc,stats    ]   Roots                        =    0.002 s (a =     1755 us) (n =     1) (lvls, us =     1738,     1738,     1738,     1738,     1755)
[6.308s][info][gc,stats    ]     CWR: <total>               =    0.003 s (a =     2794 us) (n =     1) (lvls, us =     2793,     2793,     2793,     2793,     2794)
[6.308s][info][gc,stats    ]     CWR: Code Cache Roots      =    0.001 s (a =      872 us) (n =     1) (lvls, us =      871,      871,      871,      871,      872)
[6.308s][info][gc,stats    ]     CWR: VM Weak Roots         =    0.002 s (a =     1902 us) (n =     1) (lvls, us =     1895,     1895,     1895,     1895,     1902)
[6.308s][info][gc,stats    ]     CWR: CLDG Roots            =    0.000 s (a =       20 us) (n =     1) (lvls, us =       20,       20,       20,       20,       20)
[6.308s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =       46 us) (n =     1) (lvls, us =       46,       46,       46,       46,       46)
[6.308s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =      115 us) (n =     1) (lvls, us =      113,      113,      113,      113,      115)
[6.308s][info][gc,stats    ] Concurrent Class Unloading     =    0.005 s (a =     4962 us) (n =     1) (lvls, us =     4961,     4961,     4961,     4961,     4962)
[6.308s][info][gc,stats    ]   Unlink Stale                 =    0.002 s (a =     1855 us) (n =     1) (lvls, us =     1836,     1836,     1836,     1836,     1855)
[6.308s][info][gc,stats    ]     System Dictionary          =    0.000 s (a =       39 us) (n =     1) (lvls, us =       39,       39,       39,       39,       39)
[6.308s][info][gc,stats    ]     Weak Class Links           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[6.308s][info][gc,stats    ]     Code Roots                 =    0.002 s (a =     1815 us) (n =     1) (lvls, us =     1797,     1797,     1797,     1797,     1815)
[6.308s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =       29 us) (n =     1) (lvls, us =       29,       29,       29,       29,       29)
[6.308s][info][gc,stats    ]   Purge Unlinked               =    0.003 s (a =     3041 us) (n =     1) (lvls, us =     3027,     3027,     3027,     3027,     3041)
[6.308s][info][gc,stats    ]     Code Roots                 =    0.003 s (a =     3030 us) (n =     1) (lvls, us =     3027,     3027,     3027,     3027,     3030)
[6.308s][info][gc,stats    ]     CLDG                       =    0.000 s (a =       11 us) (n =     1) (lvls, us =       11,       11,       11,       11,       11)
[6.308s][info][gc,stats    ]     Exception Caches           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[6.308s][info][gc,stats    ] Concurrent Strong Roots        =    0.002 s (a =     2173 us) (n =     1) (lvls, us =     2168,     2168,     2168,     2168,     2173)
[6.308s][info][gc,stats    ]   CSR: <total>                 =    0.002 s (a =     2114 us) (n =     1) (lvls, us =     2109,     2109,     2109,     2109,     2114)
[6.308s][info][gc,stats    ]   CSR: VM Strong Roots         =    0.000 s (a =       24 us) (n =     1) (lvls, us =       24,       24,       24,       24,       24)
[6.308s][info][gc,stats    ]   CSR: CLDG Roots              =    0.002 s (a =     2090 us) (n =     1) (lvls, us =     2090,     2090,     2090,     2090,     2090)
[6.308s][info][gc,stats    ] Concurrent Evacuation          =    0.008 s (a =     8057 us) (n =     1) (lvls, us =     8047,     8047,     8047,     8047,     8057)
[6.308s][info][gc,stats    ] Pause Init Update Refs (G)     =    0.000 s (a =      240 us) (n =     1) (lvls, us =      238,      238,      238,      238,      240)
[6.308s][info][gc,stats    ] Pause Init Update Refs (N)     =    0.000 s (a =       54 us) (n =     1) (lvls, us =       54,       54,       54,       54,       54)
[6.308s][info][gc,stats    ]   Manage GCLABs                =    0.000 s (a =        5 us) (n =     1) (lvls, us =        5,        5,        5,        5,        5)
[6.308s][info][gc,stats    ] Concurrent Update Refs         =    0.018 s (a =    17595 us) (n =     1) (lvls, us =    17578,    17578,    17578,    17578,    17595)
[6.308s][info][gc,stats    ] Concurrent Update Thread Roots =    0.000 s (a =      260 us) (n =     1) (lvls, us =      260,      260,      260,      260,      260)
[6.308s][info][gc,stats    ] Pause Final Update Refs (G)    =    0.000 s (a =      308 us) (n =     1) (lvls, us =      307,      307,      307,      307,      308)
[6.308s][info][gc,stats    ] Pause Final Update Refs (N)    =    0.000 s (a =      195 us) (n =     1) (lvls, us =      193,      193,      193,      193,      195)
[6.309s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       31 us) (n =     1) (lvls, us =       31,       31,       31,       31,       31)
[6.309s][info][gc,stats    ]   Trash Collection Set         =    0.000 s (a =        5 us) (n =     1) (lvls, us =        5,        5,        5,        5,        5)
[6.309s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       26 us) (n =     1) (lvls, us =       26,       26,       26,       26,       26)
[6.309s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =      102 us) (n =     1) (lvls, us =      102,      102,      102,      102,      102)
[6.309s][info][gc,stats    ] 
[6.309s][info][gc,stats    ] 
[6.309s][info][gc,stats    ] Under allocation pressure, concurrent cycles may cancel, and either continue cycle
[6.309s][info][gc,stats    ] under stop-the-world pause or result in stop-the-world Full GC. Increase heap size,
[6.309s][info][gc,stats    ] tune GC heuristics, set more aggressive pacing delay, or lower allocation rate
[6.309s][info][gc,stats    ] to avoid Degenerated and Full GC cycles.
[6.309s][info][gc,stats    ] 
[6.309s][info][gc,stats    ]     1 successful concurrent GCs
[6.309s][info][gc,stats    ]       0 invoked explicitly
[6.309s][info][gc,stats    ]       0 invoked implicitly
[6.309s][info][gc,stats    ] 
[6.309s][info][gc,stats    ]     0 Degenerated GCs
[6.309s][info][gc,stats    ]       0 caused by allocation failure
[6.309s][info][gc,stats    ]       0 upgraded to Full GC
[6.309s][info][gc,stats    ] 
[6.309s][info][gc,stats    ]     0 Full GCs
[6.309s][info][gc,stats    ]       0 invoked explicitly
[6.309s][info][gc,stats    ]       0 invoked implicitly
[6.309s][info][gc,stats    ]       0 caused by allocation failure
[6.309s][info][gc,stats    ]       0 upgraded from Degenerated GC
[6.309s][info][gc,stats    ] 
[6.309s][info][gc,stats    ] 
