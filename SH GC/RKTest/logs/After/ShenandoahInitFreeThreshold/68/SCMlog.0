[0.007s][info][gc] Heuristics ergonomically sets -XX:+ExplicitGCInvokesConcurrent
[0.007s][info][gc] Heuristics ergonomically sets -XX:+ShenandoahImplicitGCInvokesConcurrent
[0.007s][info][gc] Using Shenandoah
[0.008s][info][gc,ergo] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[0.008s][info][gc,init] Version: 21.0.7+6-Ubuntu-0ubuntu122.04 (release)
[0.008s][info][gc,init] CPUs: 4 total, 4 available
[0.008s][info][gc,init] Memory: 7937M
[0.008s][info][gc,init] Large Page Support: Disabled
[0.008s][info][gc,init] NUMA Support: Disabled
[0.008s][info][gc,init] Compressed Oops: Enabled (32-bit)
[0.008s][info][gc,init] Heap Min Capacity: 6656K
[0.008s][info][gc,init] Heap Initial Capacity: 127488K
[0.008s][info][gc,init] Heap Max Capacity: 2032128K
[0.008s][info][gc,init] Pre-touch: Disabled
[0.008s][info][gc,init] Mode: Snapshot-At-The-Beginning (SATB)
[0.008s][info][gc,init] Heuristics: Adaptive
[0.008s][info][gc,init] Heap Region Count: 3969
[0.008s][info][gc,init] Heap Region Size: 512K
[0.008s][info][gc,init] TLAB Size Max: 512K
[0.008s][info][gc,init] Humongous Object Threshold: 512K
[0.008s][info][gc,init] Parallel Workers: 8
[0.008s][info][gc,init] Concurrent Workers: 2
[0.018s][info][gc,metaspace] CDS archive(s) mapped at: [0x00007f2773000000-0x00007f2773c97000-0x00007f2773c97000), size 13201408, SharedBaseAddress: 0x00007f2773000000, ArchiveRelocationMode: 1.
[0.018s][info][gc,metaspace] Compressed class space mapped at: 0x00007f2774000000-0x00007f27b4000000, reserved size: 1073741824
[0.018s][info][gc,metaspace] Narrow klass base: 0x00007f2773000000, Narrow klass shift: 0, Narrow klass range: 0x100000000
[1.311s][info][gc          ] Trigger: Metadata GC Threshold
[1.311s][info][gc,ergo     ] Free: 1790M, Max: 512K regular, 1790M humongous, Frag: 0% external, 0% internal; Reserve: 101888K, Max: 512K
[1.311s][info][gc,start    ] GC(0) Concurrent reset
[1.311s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reset
[1.311s][info][gc,ergo     ] GC(0) Pacer for Reset. Non-Taxable: 1984M
[1.312s][info][gc          ] GC(0) Concurrent reset 0.546ms
[1.312s][info][gc,start    ] GC(0) Pause Init Mark (unload classes)
[1.313s][info][gc,task     ] GC(0) Using 8 of 8 workers for init marking
[1.313s][info][gc,ergo     ] GC(0) Pacer for Mark. Expected Live: 198M, Free: 1789M, Non-Taxable: 178M, Alloc Tax Rate: 0.1x
[1.313s][info][gc          ] GC(0) Pause Init Mark (unload classes) 1.031ms
[1.314s][info][gc,start    ] GC(0) Concurrent marking roots
[1.314s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking roots
[1.319s][info][gc          ] GC(0) Concurrent marking roots 4.296ms
[1.319s][info][gc,start    ] GC(0) Concurrent marking (unload classes)
[1.319s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking
[1.331s][info][gc          ] GC(0) Concurrent marking (unload classes) 12.265ms
[1.331s][info][gc,start    ] GC(0) Pause Final Mark (unload classes)
[1.331s][info][gc,task     ] GC(0) Using 8 of 8 workers for final marking
[1.337s][info][gc,ergo     ] GC(0) Adaptive CSet Selection. Target Free: 281M, Actual Free: 1892M, Max CSet: 84672K, Min Garbage: 0B
[1.337s][info][gc,ergo     ] GC(0) Collectable Garbage: 82598K (99%), Immediate: 5343K (6%), CSet: 77255K (92%)
[1.337s][info][gc,ergo     ] GC(0) Pacer for Evacuation. Used CSet: 84992K, Free: 1793M, Non-Taxable: 179M, Alloc Tax Rate: 1.1x
[1.337s][info][gc          ] GC(0) Pause Final Mark (unload classes) 5.864ms
[1.337s][info][gc,start    ] GC(0) Concurrent thread roots
[1.337s][info][gc,task     ] GC(0) Using 2 of 8 workers for Concurrent thread roots
[1.337s][info][gc          ] GC(0) Concurrent thread roots 0.169ms
[1.337s][info][gc,start    ] GC(0) Concurrent weak references
[1.337s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak references
[1.337s][info][gc,ref      ] GC(0) Encountered references: Soft: 3956, Weak: 2142, Final: 20, Phantom: 798
[1.337s][info][gc,ref      ] GC(0) Discovered  references: Soft: 0, Weak: 1297, Final: 20, Phantom: 487
[1.337s][info][gc,ref      ] GC(0) Enqueued    references: Soft: 0, Weak: 485, Final: 0, Phantom: 319
[1.337s][info][gc          ] GC(0) Concurrent weak references 0.382ms
[1.337s][info][gc,start    ] GC(0) Concurrent weak roots
[1.337s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak root
[1.342s][info][gc          ] GC(0) Concurrent weak roots 4.110ms
[1.342s][info][gc,start    ] GC(0) Concurrent cleanup
[1.342s][info][gc          ] GC(0) Concurrent cleanup 98M->92M(125M) 0.088ms
[1.342s][info][gc,ergo     ] GC(0) Free: 1792M, Max: 512K regular, 1787M humongous, Frag: 1% external, 0% internal; Reserve: 100989K, Max: 512K
[1.342s][info][gc,start    ] GC(0) Concurrent class unloading
[1.342s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent class unloading
[1.347s][info][gc          ] GC(0) Concurrent class unloading 5.471ms
[1.347s][info][gc,start    ] GC(0) Concurrent strong roots
[1.347s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent strong root
[1.349s][info][gc          ] GC(0) Concurrent strong roots 1.261ms
[1.349s][info][gc,start    ] GC(0) Concurrent evacuation
[1.349s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent evacuation
[1.358s][info][gc          ] GC(0) Concurrent evacuation 9.262ms
[1.358s][info][gc,start    ] GC(0) Pause Init Update Refs
[1.358s][info][gc,ergo     ] GC(0) Pacer for Update Refs. Used: 101M, Free: 1792M, Non-Taxable: 179M, Alloc Tax Rate: 1.1x
[1.358s][info][gc          ] GC(0) Pause Init Update Refs 0.022ms
[1.358s][info][gc,start    ] GC(0) Concurrent update references
[1.358s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reference update
[1.365s][info][gc          ] GC(0) Concurrent update references 6.936ms
[1.365s][info][gc,start    ] GC(0) Concurrent update thread roots
[1.365s][info][gc          ] GC(0) Concurrent update thread roots 0.372ms
[1.365s][info][gc,start    ] GC(0) Pause Final Update Refs
[1.365s][info][gc,task     ] GC(0) Using 8 of 8 workers for final reference update
[1.365s][info][gc          ] GC(0) Pause Final Update Refs 0.067ms
[1.365s][info][gc,start    ] GC(0) Concurrent cleanup
[1.365s][info][gc          ] GC(0) Concurrent cleanup 101M->18M(133M) 0.053ms
[1.365s][info][gc,ergo     ] Free: 1866M, Max: 512K regular, 1778M humongous, Frag: 5% external, 0% internal; Reserve: 101888K, Max: 512K
[1.366s][info][gc,stats    ] 
[1.366s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[1.366s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[1.366s][info][gc,stats    ] 
[1.366s][info][gc,stats    ] Concurrent Reset                    587 us
[1.366s][info][gc,stats    ] Pause Init Mark (G)                2644 us
[1.366s][info][gc,stats    ] Pause Init Mark (N)                1128 us
[1.366s][info][gc,stats    ]   Update Region States               51 us
[1.366s][info][gc,stats    ] Concurrent Mark Roots              4324 us, parallelism: 1.27x
[1.366s][info][gc,stats    ]   CMR: <total>                     5493 us
[1.366s][info][gc,stats    ]   CMR: Thread Roots                1388 us, workers (us):   0, 1388, ---, ---, ---, ---, ---, ---, 
[1.366s][info][gc,stats    ]   CMR: VM Strong Roots              735 us, workers (us): 734,   0, ---, ---, ---, ---, ---, ---, 
[1.366s][info][gc,stats    ]   CMR: CLDG Roots                  3370 us, workers (us): 3370, ---, ---, ---, ---, ---, ---, ---, 
[1.366s][info][gc,stats    ] Concurrent Marking                12294 us
[1.366s][info][gc,stats    ] Pause Final Mark (G)               5977 us
[1.366s][info][gc,stats    ] Pause Final Mark (N)               5877 us
[1.366s][info][gc,stats    ]   Finish Mark                      5662 us
[1.366s][info][gc,stats    ]   Update Region States               24 us
[1.366s][info][gc,stats    ]   Choose Collection Set             101 us
[1.366s][info][gc,stats    ]   Rebuild Free Set                   18 us
[1.366s][info][gc,stats    ] Concurrent Thread Roots             180 us, parallelism: 1.25x
[1.366s][info][gc,stats    ]   CTR: <total>                      226 us
[1.366s][info][gc,stats    ]   CTR: Thread Roots                 226 us, workers (us): 110, 116, ---, ---, ---, ---, ---, ---, 
[1.366s][info][gc,stats    ] Concurrent Weak References          390 us, parallelism: 0.80x
[1.366s][info][gc,stats    ]   CWRF: <total>                     314 us
[1.366s][info][gc,stats    ]   CWRF: Weak References             314 us, workers (us): 314,   0, ---, ---, ---, ---, ---, ---, 
[1.366s][info][gc,stats    ] Concurrent Weak Roots              4163 us
[1.366s][info][gc,stats    ]   Roots                            3751 us, parallelism: 1.89x
[1.366s][info][gc,stats    ]     CWR: <total>                   7077 us
[1.366s][info][gc,stats    ]     CWR: Code Cache Roots           793 us, workers (us): 382, 412, ---, ---, ---, ---, ---, ---, 
[1.366s][info][gc,stats    ]     CWR: VM Weak Roots             6271 us, workers (us): 3282, 2989, ---, ---, ---, ---, ---, ---, 
[1.366s][info][gc,stats    ]     CWR: CLDG Roots                  12 us, workers (us):  12, ---, ---, ---, ---, ---, ---, ---, 
[1.366s][info][gc,stats    ]   Rendezvous                        341 us
[1.366s][info][gc,stats    ] Concurrent Cleanup                  100 us
[1.366s][info][gc,stats    ] Concurrent Class Unloading         5490 us
[1.366s][info][gc,stats    ]   Unlink Stale                     2869 us
[1.366s][info][gc,stats    ]     System Dictionary                31 us
[1.366s][info][gc,stats    ]     Weak Class Links                  0 us
[1.366s][info][gc,stats    ]     Code Roots                     2836 us
[1.366s][info][gc,stats    ]   Rendezvous                        122 us
[1.366s][info][gc,stats    ]   Purge Unlinked                   2462 us
[1.366s][info][gc,stats    ]     Code Roots                     2434 us
[1.366s][info][gc,stats    ]     CLDG                             28 us
[1.366s][info][gc,stats    ]     Exception Caches                  0 us
[1.366s][info][gc,stats    ] Concurrent Strong Roots            1273 us, parallelism: 0.96x
[1.366s][info][gc,stats    ]   CSR: <total>                     1225 us
[1.366s][info][gc,stats    ]   CSR: VM Strong Roots               24 us, workers (us):  17,   7, ---, ---, ---, ---, ---, ---, 
[1.366s][info][gc,stats    ]   CSR: CLDG Roots                  1201 us, workers (us): ---, 1201, ---, ---, ---, ---, ---, ---, 
[1.366s][info][gc,stats    ] Concurrent Evacuation              9286 us
[1.366s][info][gc,stats    ] Pause Init Update Refs (G)           59 us
[1.366s][info][gc,stats    ] Pause Init Update Refs (N)           28 us
[1.366s][info][gc,stats    ]   Manage GCLABs                       4 us
[1.366s][info][gc,stats    ] Concurrent Update Refs             6967 us
[1.366s][info][gc,stats    ] Concurrent Update Thread Roots      387 us
[1.366s][info][gc,stats    ] Pause Final Update Refs (G)         163 us
[1.366s][info][gc,stats    ] Pause Final Update Refs (N)          76 us
[1.366s][info][gc,stats    ]   Update Region States               23 us
[1.366s][info][gc,stats    ]   Trash Collection Set                4 us
[1.366s][info][gc,stats    ]   Rebuild Free Set                   22 us
[1.366s][info][gc,stats    ] Concurrent Cleanup                   62 us
[1.366s][info][gc,stats    ] 
[1.366s][info][gc,stats    ] Allocation pacing accrued:
[1.366s][info][gc,stats    ]       0 of  1358 ms (  0.0%): <total>
[1.366s][info][gc,stats    ]       0 of  1358 ms (  0.0%): <average total>
[1.366s][info][gc,stats    ] 
[1.366s][info][gc,metaspace] Metaspace: 21256K(21568K)->21552K(21888K) NonClass: 18918K(19072K)->19169K(19328K) Class: 2338K(2496K)->2383K(2560K)
[1.366s][info][gc,ergo     ] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[7.734s][info][gc          ] Cancelling GC: Stopping VM
[7.734s][info][gc,heap,exit] Heap
[7.734s][info][gc,heap,exit] Shenandoah Heap
[7.734s][info][gc,heap,exit]  1984M max, 1984M soft max, 133M committed, 39466K used
[7.734s][info][gc,heap,exit]  3969 x 512K regions
[7.734s][info][gc,heap,exit] Status: cancelled
[7.735s][info][gc,heap,exit] Reserved region:
[7.735s][info][gc,heap,exit]  - [0x0000000083f80000, 0x0000000100000000) 
[7.735s][info][gc,heap,exit] Collection set:
[7.735s][info][gc,heap,exit]  - map (vanilla): 0x000000000001107f
[7.735s][info][gc,heap,exit]  - map (biased):  0x0000000000010000
[7.735s][info][gc,heap,exit] 
[7.735s][info][gc,heap,exit]  Metaspace       used 25437K, committed 25792K, reserved 1114112K
[7.735s][info][gc,heap,exit]   class space    used 2924K, committed 3072K, reserved 1048576K
[7.735s][info][gc,stats    ] 
[7.735s][info][gc,stats    ] GC STATISTICS:
[7.735s][info][gc,stats    ]   "(G)" (gross) pauses include VM time: time to notify and block threads, do the pre-
[7.735s][info][gc,stats    ]         and post-safepoint housekeeping. Use -Xlog:safepoint+stats to dissect.
[7.735s][info][gc,stats    ]   "(N)" (net) pauses are the times spent in the actual GC code.
[7.735s][info][gc,stats    ]   "a" is average time for each phase, look at levels to see if average makes sense.
[7.735s][info][gc,stats    ]   "lvls" are quantiles: 0% (minimum), 25%, 50% (median), 75%, 100% (maximum).
[7.735s][info][gc,stats    ] 
[7.735s][info][gc,stats    ]   All times are wall-clock times, except per-root-class counters, that are sum over
[7.735s][info][gc,stats    ]   all workers. Dividing the <total> over the root stage time estimates parallelism.
[7.735s][info][gc,stats    ] 
[7.735s][info][gc,stats    ]   Pacing delays are measured from entering the pacing code till exiting it. Therefore,
[7.735s][info][gc,stats    ]   observed pacing delays may be higher than the threshold when paced thread spent more
[7.735s][info][gc,stats    ]   time in the pacing code. It usually happens when thread is de-scheduled while paced,
[7.735s][info][gc,stats    ]   OS takes longer to unblock the thread, or JVM experiences an STW pause.
[7.735s][info][gc,stats    ] 
[7.735s][info][gc,stats    ]   Higher delay would prevent application outpacing the GC, but it will hide the GC latencies
[7.735s][info][gc,stats    ]   from the STW pause times. Pacing affects the individual threads, and so it would also be
[7.735s][info][gc,stats    ]   invisible to the usual profiling tools, but would add up to end-to-end application latency.
[7.735s][info][gc,stats    ]   Raise max pacing delay with care.
[7.735s][info][gc,stats    ] 
[7.735s][info][gc,stats    ] Concurrent Reset               =    0.001 s (a =      587 us) (n =     1) (lvls, us =      586,      586,      586,      586,      587)
[7.735s][info][gc,stats    ] Pause Init Mark (G)            =    0.003 s (a =     2644 us) (n =     1) (lvls, us =     2637,     2637,     2637,     2637,     2644)
[7.735s][info][gc,stats    ] Pause Init Mark (N)            =    0.001 s (a =     1128 us) (n =     1) (lvls, us =     1113,     1113,     1113,     1113,     1128)
[7.735s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       51 us) (n =     1) (lvls, us =       51,       51,       51,       51,       51)
[7.735s][info][gc,stats    ] Concurrent Mark Roots          =    0.004 s (a =     4324 us) (n =     1) (lvls, us =     4316,     4316,     4316,     4316,     4324)
[7.735s][info][gc,stats    ]   CMR: <total>                 =    0.005 s (a =     5493 us) (n =     1) (lvls, us =     5488,     5488,     5488,     5488,     5493)
[7.735s][info][gc,stats    ]   CMR: Thread Roots            =    0.001 s (a =     1388 us) (n =     1) (lvls, us =     1387,     1387,     1387,     1387,     1388)
[7.735s][info][gc,stats    ]   CMR: VM Strong Roots         =    0.001 s (a =      735 us) (n =     1) (lvls, us =      734,      734,      734,      734,      735)
[7.735s][info][gc,stats    ]   CMR: CLDG Roots              =    0.003 s (a =     3370 us) (n =     1) (lvls, us =     3359,     3359,     3359,     3359,     3370)
[7.735s][info][gc,stats    ] Concurrent Marking             =    0.012 s (a =    12294 us) (n =     1) (lvls, us =    12109,    12109,    12109,    12109,    12294)
[7.735s][info][gc,stats    ] Pause Final Mark (G)           =    0.006 s (a =     5977 us) (n =     1) (lvls, us =     5977,     5977,     5977,     5977,     5977)
[7.735s][info][gc,stats    ] Pause Final Mark (N)           =    0.006 s (a =     5877 us) (n =     1) (lvls, us =     5859,     5859,     5859,     5859,     5877)
[7.735s][info][gc,stats    ]   Finish Mark                  =    0.006 s (a =     5662 us) (n =     1) (lvls, us =     5645,     5645,     5645,     5645,     5662)
[7.735s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       24 us) (n =     1) (lvls, us =       24,       24,       24,       24,       24)
[7.735s][info][gc,stats    ]   Choose Collection Set        =    0.000 s (a =      101 us) (n =     1) (lvls, us =      100,      100,      100,      100,      101)
[7.735s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       18 us) (n =     1) (lvls, us =       18,       18,       18,       18,       18)
[7.735s][info][gc,stats    ] Concurrent Thread Roots        =    0.000 s (a =      180 us) (n =     1) (lvls, us =      180,      180,      180,      180,      180)
[7.736s][info][gc,stats    ]   CTR: <total>                 =    0.000 s (a =      226 us) (n =     1) (lvls, us =      225,      225,      225,      225,      226)
[7.736s][info][gc,stats    ]   CTR: Thread Roots            =    0.000 s (a =      226 us) (n =     1) (lvls, us =      225,      225,      225,      225,      226)
[7.736s][info][gc,stats    ] Concurrent Weak References     =    0.000 s (a =      390 us) (n =     1) (lvls, us =      389,      389,      389,      389,      390)
[7.736s][info][gc,stats    ]   CWRF: <total>                =    0.000 s (a =      314 us) (n =     1) (lvls, us =      312,      312,      312,      312,      314)
[7.736s][info][gc,stats    ]   CWRF: Weak References        =    0.000 s (a =      314 us) (n =     1) (lvls, us =      312,      312,      312,      312,      314)
[7.736s][info][gc,stats    ] Concurrent Weak Roots          =    0.004 s (a =     4163 us) (n =     1) (lvls, us =     4160,     4160,     4160,     4160,     4163)
[7.736s][info][gc,stats    ]   Roots                        =    0.004 s (a =     3751 us) (n =     1) (lvls, us =     3750,     3750,     3750,     3750,     3751)
[7.736s][info][gc,stats    ]     CWR: <total>               =    0.007 s (a =     7077 us) (n =     1) (lvls, us =     7070,     7070,     7070,     7070,     7077)
[7.736s][info][gc,stats    ]     CWR: Code Cache Roots      =    0.001 s (a =      793 us) (n =     1) (lvls, us =      793,      793,      793,      793,      793)
[7.736s][info][gc,stats    ]     CWR: VM Weak Roots         =    0.006 s (a =     6271 us) (n =     1) (lvls, us =     6270,     6270,     6270,     6270,     6271)
[7.736s][info][gc,stats    ]     CWR: CLDG Roots            =    0.000 s (a =       12 us) (n =     1) (lvls, us =       12,       12,       12,       12,       12)
[7.736s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =      341 us) (n =     1) (lvls, us =      340,      340,      340,      340,      341)
[7.736s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =      100 us) (n =     1) (lvls, us =      100,      100,      100,      100,      100)
[7.736s][info][gc,stats    ] Concurrent Class Unloading     =    0.005 s (a =     5490 us) (n =     1) (lvls, us =     5488,     5488,     5488,     5488,     5490)
[7.736s][info][gc,stats    ]   Unlink Stale                 =    0.003 s (a =     2869 us) (n =     1) (lvls, us =     2852,     2852,     2852,     2852,     2869)
[7.736s][info][gc,stats    ]     System Dictionary          =    0.000 s (a =       31 us) (n =     1) (lvls, us =       30,       30,       30,       30,       31)
[7.736s][info][gc,stats    ]     Weak Class Links           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[7.736s][info][gc,stats    ]     Code Roots                 =    0.003 s (a =     2836 us) (n =     1) (lvls, us =     2832,     2832,     2832,     2832,     2836)
[7.736s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =      122 us) (n =     1) (lvls, us =      121,      121,      121,      121,      122)
[7.736s][info][gc,stats    ]   Purge Unlinked               =    0.002 s (a =     2462 us) (n =     1) (lvls, us =     2461,     2461,     2461,     2461,     2462)
[7.736s][info][gc,stats    ]     Code Roots                 =    0.002 s (a =     2434 us) (n =     1) (lvls, us =     2422,     2422,     2422,     2422,     2434)
[7.736s][info][gc,stats    ]     CLDG                       =    0.000 s (a =       28 us) (n =     1) (lvls, us =       27,       27,       27,       27,       28)
[7.736s][info][gc,stats    ]     Exception Caches           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[7.736s][info][gc,stats    ] Concurrent Strong Roots        =    0.001 s (a =     1273 us) (n =     1) (lvls, us =     1270,     1270,     1270,     1270,     1273)
[7.736s][info][gc,stats    ]   CSR: <total>                 =    0.001 s (a =     1225 us) (n =     1) (lvls, us =     1211,     1211,     1211,     1211,     1225)
[7.736s][info][gc,stats    ]   CSR: VM Strong Roots         =    0.000 s (a =       24 us) (n =     1) (lvls, us =       24,       24,       24,       24,       24)
[7.736s][info][gc,stats    ]   CSR: CLDG Roots              =    0.001 s (a =     1201 us) (n =     1) (lvls, us =     1191,     1191,     1191,     1191,     1201)
[7.736s][info][gc,stats    ] Concurrent Evacuation          =    0.009 s (a =     9286 us) (n =     1) (lvls, us =     9277,     9277,     9277,     9277,     9286)
[7.736s][info][gc,stats    ] Pause Init Update Refs (G)     =    0.000 s (a =       59 us) (n =     1) (lvls, us =       59,       59,       59,       59,       59)
[7.736s][info][gc,stats    ] Pause Init Update Refs (N)     =    0.000 s (a =       28 us) (n =     1) (lvls, us =       28,       28,       28,       28,       28)
[7.736s][info][gc,stats    ]   Manage GCLABs                =    0.000 s (a =        4 us) (n =     1) (lvls, us =        4,        4,        4,        4,        4)
[7.736s][info][gc,stats    ] Concurrent Update Refs         =    0.007 s (a =     6967 us) (n =     1) (lvls, us =     6953,     6953,     6953,     6953,     6967)
[7.736s][info][gc,stats    ] Concurrent Update Thread Roots =    0.000 s (a =      387 us) (n =     1) (lvls, us =      385,      385,      385,      385,      387)
[7.736s][info][gc,stats    ] Pause Final Update Refs (G)    =    0.000 s (a =      163 us) (n =     1) (lvls, us =      162,      162,      162,      162,      163)
[7.736s][info][gc,stats    ] Pause Final Update Refs (N)    =    0.000 s (a =       76 us) (n =     1) (lvls, us =       76,       76,       76,       76,       76)
[7.736s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       23 us) (n =     1) (lvls, us =       23,       23,       23,       23,       23)
[7.736s][info][gc,stats    ]   Trash Collection Set         =    0.000 s (a =        4 us) (n =     1) (lvls, us =        4,        4,        4,        4,        4)
[7.736s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       22 us) (n =     1) (lvls, us =       22,       22,       22,       22,       22)
[7.736s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =       62 us) (n =     1) (lvls, us =       62,       62,       62,       62,       62)
[7.736s][info][gc,stats    ] 
[7.737s][info][gc,stats    ] 
[7.737s][info][gc,stats    ] Under allocation pressure, concurrent cycles may cancel, and either continue cycle
[7.737s][info][gc,stats    ] under stop-the-world pause or result in stop-the-world Full GC. Increase heap size,
[7.737s][info][gc,stats    ] tune GC heuristics, set more aggressive pacing delay, or lower allocation rate
[7.737s][info][gc,stats    ] to avoid Degenerated and Full GC cycles.
[7.737s][info][gc,stats    ] 
[7.737s][info][gc,stats    ]     1 successful concurrent GCs
[7.737s][info][gc,stats    ]       0 invoked explicitly
[7.737s][info][gc,stats    ]       0 invoked implicitly
[7.737s][info][gc,stats    ] 
[7.737s][info][gc,stats    ]     0 Degenerated GCs
[7.737s][info][gc,stats    ]       0 caused by allocation failure
[7.737s][info][gc,stats    ]       0 upgraded to Full GC
[7.737s][info][gc,stats    ] 
[7.737s][info][gc,stats    ]     0 Full GCs
[7.737s][info][gc,stats    ]       0 invoked explicitly
[7.737s][info][gc,stats    ]       0 invoked implicitly
[7.737s][info][gc,stats    ]       0 caused by allocation failure
[7.737s][info][gc,stats    ]       0 upgraded from Degenerated GC
[7.737s][info][gc,stats    ] 
[7.737s][info][gc,stats    ] 
