[0.012s][info][gc] Heuristics ergonomically sets -XX:+ExplicitGCInvokesConcurrent
[0.012s][info][gc] Heuristics ergonomically sets -XX:+ShenandoahImplicitGCInvokesConcurrent
[0.012s][info][gc] Using Shenandoah
[0.013s][info][gc,ergo] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[0.014s][info][gc,init] Version: 21.0.7+6-Ubuntu-0ubuntu122.04 (release)
[0.014s][info][gc,init] CPUs: 4 total, 4 available
[0.014s][info][gc,init] Memory: 7937M
[0.014s][info][gc,init] Large Page Support: Disabled
[0.014s][info][gc,init] NUMA Support: Disabled
[0.014s][info][gc,init] Compressed Oops: Enabled (32-bit)
[0.014s][info][gc,init] Heap Min Capacity: 6656K
[0.014s][info][gc,init] Heap Initial Capacity: 127488K
[0.014s][info][gc,init] Heap Max Capacity: 2032128K
[0.014s][info][gc,init] Pre-touch: Disabled
[0.014s][info][gc,init] Mode: Snapshot-At-The-Beginning (SATB)
[0.014s][info][gc,init] Heuristics: Adaptive
[0.014s][info][gc,init] Heap Region Count: 3969
[0.014s][info][gc,init] Heap Region Size: 512K
[0.014s][info][gc,init] TLAB Size Max: 512K
[0.014s][info][gc,init] Humongous Object Threshold: 512K
[0.014s][info][gc,init] Parallel Workers: 8
[0.014s][info][gc,init] Concurrent Workers: 2
[0.025s][info][gc,metaspace] CDS archive(s) mapped at: [0x00007fb4d7000000-0x00007fb4d7c97000-0x00007fb4d7c97000), size 13201408, SharedBaseAddress: 0x00007fb4d7000000, ArchiveRelocationMode: 1.
[0.026s][info][gc,metaspace] Compressed class space mapped at: 0x00007fb4d8000000-0x00007fb518000000, reserved size: 1073741824
[0.026s][info][gc,metaspace] Narrow klass base: 0x00007fb4d7000000, Narrow klass shift: 0, Narrow klass range: 0x100000000
[1.401s][info][gc          ] Trigger: Metadata GC Threshold
[1.401s][info][gc,ergo     ] Free: 1790M, Max: 512K regular, 1790M humongous, Frag: 0% external, 0% internal; Reserve: 101888K, Max: 512K
[1.401s][info][gc,start    ] GC(0) Concurrent reset
[1.401s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reset
[1.401s][info][gc,ergo     ] GC(0) Pacer for Reset. Non-Taxable: 1984M
[1.402s][info][gc          ] GC(0) Concurrent reset 0.430ms
[1.402s][info][gc,start    ] GC(0) Pause Init Mark (unload classes)
[1.402s][info][gc,task     ] GC(0) Using 8 of 8 workers for init marking
[1.402s][info][gc,ergo     ] GC(0) Pacer for Mark. Expected Live: 198M, Free: 1789M, Non-Taxable: 178M, Alloc Tax Rate: 0.1x
[1.403s][info][gc          ] GC(0) Pause Init Mark (unload classes) 0.615ms
[1.403s][info][gc,start    ] GC(0) Concurrent marking roots
[1.403s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking roots
[1.407s][info][gc          ] GC(0) Concurrent marking roots 4.232ms
[1.407s][info][gc,start    ] GC(0) Concurrent marking (unload classes)
[1.407s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking
[1.418s][info][gc          ] GC(0) Concurrent marking (unload classes) 10.738ms
[1.418s][info][gc,start    ] GC(0) Pause Final Mark (unload classes)
[1.418s][info][gc,task     ] GC(0) Using 8 of 8 workers for final marking
[1.423s][info][gc,ergo     ] GC(0) Adaptive CSet Selection. Target Free: 281M, Actual Free: 1892M, Max CSet: 84672K, Min Garbage: 0B
[1.423s][info][gc,ergo     ] GC(0) Collectable Garbage: 82598K (99%), Immediate: 5855K (7%), CSet: 76743K (92%)
[1.423s][info][gc,ergo     ] GC(0) Pacer for Evacuation. Used CSet: 84480K, Free: 1793M, Non-Taxable: 179M, Alloc Tax Rate: 1.1x
[1.423s][info][gc          ] GC(0) Pause Final Mark (unload classes) 5.610ms
[1.423s][info][gc,start    ] GC(0) Concurrent thread roots
[1.423s][info][gc,task     ] GC(0) Using 2 of 8 workers for Concurrent thread roots
[1.424s][info][gc          ] GC(0) Concurrent thread roots 0.195ms
[1.424s][info][gc,start    ] GC(0) Concurrent weak references
[1.424s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak references
[1.424s][info][gc,ref      ] GC(0) Encountered references: Soft: 3955, Weak: 2129, Final: 20, Phantom: 794
[1.424s][info][gc,ref      ] GC(0) Discovered  references: Soft: 0, Weak: 1279, Final: 20, Phantom: 526
[1.424s][info][gc,ref      ] GC(0) Enqueued    references: Soft: 0, Weak: 480, Final: 0, Phantom: 315
[1.424s][info][gc          ] GC(0) Concurrent weak references 0.329ms
[1.424s][info][gc,start    ] GC(0) Concurrent weak roots
[1.424s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak root
[1.426s][info][gc          ] GC(0) Concurrent weak roots 2.015ms
[1.426s][info][gc,start    ] GC(0) Concurrent cleanup
[1.426s][info][gc          ] GC(0) Concurrent cleanup 99M->93M(126M) 0.093ms
[1.426s][info][gc,ergo     ] GC(0) Free: 1792M, Max: 512K regular, 1786M humongous, Frag: 1% external, 0% internal; Reserve: 100603K, Max: 512K
[1.426s][info][gc,start    ] GC(0) Concurrent class unloading
[1.426s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent class unloading
[1.432s][info][gc          ] GC(0) Concurrent class unloading 5.983ms
[1.432s][info][gc,start    ] GC(0) Concurrent strong roots
[1.432s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent strong root
[1.433s][info][gc          ] GC(0) Concurrent strong roots 1.132ms
[1.433s][info][gc,start    ] GC(0) Concurrent evacuation
[1.433s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent evacuation
[1.438s][info][gc          ] GC(0) Concurrent evacuation 4.701ms
[1.438s][info][gc,start    ] GC(0) Pause Init Update Refs
[1.438s][info][gc,ergo     ] GC(0) Pacer for Update Refs. Used: 101M, Free: 1792M, Non-Taxable: 179M, Alloc Tax Rate: 1.1x
[1.438s][info][gc          ] GC(0) Pause Init Update Refs 0.046ms
[1.438s][info][gc,start    ] GC(0) Concurrent update references
[1.438s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reference update
[1.444s][info][gc          ] GC(0) Concurrent update references 5.522ms
[1.444s][info][gc,start    ] GC(0) Concurrent update thread roots
[1.444s][info][gc          ] GC(0) Concurrent update thread roots 0.413ms
[1.444s][info][gc,start    ] GC(0) Pause Final Update Refs
[1.444s][info][gc,task     ] GC(0) Using 8 of 8 workers for final reference update
[1.444s][info][gc          ] GC(0) Pause Final Update Refs 0.075ms
[1.445s][info][gc,start    ] GC(0) Concurrent cleanup
[1.445s][info][gc          ] GC(0) Concurrent cleanup 101M->19M(133M) 0.109ms
[1.445s][info][gc,ergo     ] Free: 1865M, Max: 512K regular, 1777M humongous, Frag: 5% external, 0% internal; Reserve: 101888K, Max: 512K
[1.445s][info][gc,stats    ] 
[1.445s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[1.445s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[1.445s][info][gc,stats    ] 
[1.445s][info][gc,stats    ] Concurrent Reset                    447 us
[1.445s][info][gc,stats    ] Pause Init Mark (G)                 892 us
[1.445s][info][gc,stats    ] Pause Init Mark (N)                 635 us
[1.445s][info][gc,stats    ]   Update Region States               36 us
[1.445s][info][gc,stats    ] Concurrent Mark Roots              4254 us, parallelism: 1.28x
[1.445s][info][gc,stats    ]   CMR: <total>                     5463 us
[1.445s][info][gc,stats    ]   CMR: Thread Roots                1324 us, workers (us):   0, 1324, ---, ---, ---, ---, ---, ---, 
[1.445s][info][gc,stats    ]   CMR: VM Strong Roots              824 us, workers (us): 823,   0, ---, ---, ---, ---, ---, ---, 
[1.445s][info][gc,stats    ]   CMR: CLDG Roots                  3315 us, workers (us): 3315, ---, ---, ---, ---, ---, ---, ---, 
[1.445s][info][gc,stats    ] Concurrent Marking                10762 us
[1.445s][info][gc,stats    ] Pause Final Mark (G)               5859 us
[1.445s][info][gc,stats    ] Pause Final Mark (N)               5617 us
[1.445s][info][gc,stats    ]   Finish Mark                      5407 us
[1.445s][info][gc,stats    ]   Update Region States               29 us
[1.445s][info][gc,stats    ]   Choose Collection Set             100 us
[1.445s][info][gc,stats    ]   Rebuild Free Set                   19 us
[1.445s][info][gc,stats    ] Concurrent Thread Roots             208 us, parallelism: 1.43x
[1.445s][info][gc,stats    ]   CTR: <total>                      297 us
[1.445s][info][gc,stats    ]   CTR: Thread Roots                 297 us, workers (us): 159, 138, ---, ---, ---, ---, ---, ---, 
[1.445s][info][gc,stats    ] Concurrent Weak References          338 us, parallelism: 0.98x
[1.445s][info][gc,stats    ]   CWRF: <total>                     330 us
[1.445s][info][gc,stats    ]   CWRF: Weak References             330 us, workers (us): 266,  65, ---, ---, ---, ---, ---, ---, 
[1.445s][info][gc,stats    ] Concurrent Weak Roots              2043 us
[1.445s][info][gc,stats    ]   Roots                            1871 us, parallelism: 1.78x
[1.445s][info][gc,stats    ]     CWR: <total>                   3326 us
[1.445s][info][gc,stats    ]     CWR: Code Cache Roots           864 us, workers (us): 428, 436, ---, ---, ---, ---, ---, ---, 
[1.445s][info][gc,stats    ]     CWR: VM Weak Roots             2446 us, workers (us): 1360, 1087, ---, ---, ---, ---, ---, ---, 
[1.445s][info][gc,stats    ]     CWR: CLDG Roots                  16 us, workers (us): ---,  16, ---, ---, ---, ---, ---, ---, 
[1.445s][info][gc,stats    ]   Rendezvous                        120 us
[1.445s][info][gc,stats    ] Concurrent Cleanup                  104 us
[1.445s][info][gc,stats    ] Concurrent Class Unloading         6000 us
[1.445s][info][gc,stats    ]   Unlink Stale                     2590 us
[1.445s][info][gc,stats    ]     System Dictionary                53 us
[1.445s][info][gc,stats    ]     Weak Class Links                  0 us
[1.445s][info][gc,stats    ]     Code Roots                     2535 us
[1.445s][info][gc,stats    ]   Rendezvous                        125 us
[1.445s][info][gc,stats    ]   Purge Unlinked                   3239 us
[1.445s][info][gc,stats    ]     Code Roots                     3229 us
[1.445s][info][gc,stats    ]     CLDG                              9 us
[1.445s][info][gc,stats    ]     Exception Caches                  0 us
[1.445s][info][gc,stats    ] Concurrent Strong Roots            1149 us, parallelism: 0.94x
[1.445s][info][gc,stats    ]   CSR: <total>                     1084 us
[1.445s][info][gc,stats    ]   CSR: VM Strong Roots               22 us, workers (us):  16,   6, ---, ---, ---, ---, ---, ---, 
[1.445s][info][gc,stats    ]   CSR: CLDG Roots                  1061 us, workers (us): ---, 1061, ---, ---, ---, ---, ---, ---, 
[1.445s][info][gc,stats    ] Concurrent Evacuation              4731 us
[1.445s][info][gc,stats    ] Pause Init Update Refs (G)          260 us
[1.445s][info][gc,stats    ] Pause Init Update Refs (N)           55 us
[1.445s][info][gc,stats    ]   Manage GCLABs                       5 us
[1.445s][info][gc,stats    ] Concurrent Update Refs             5561 us
[1.445s][info][gc,stats    ] Concurrent Update Thread Roots      435 us
[1.445s][info][gc,stats    ] Pause Final Update Refs (G)         211 us
[1.445s][info][gc,stats    ] Pause Final Update Refs (N)          85 us
[1.445s][info][gc,stats    ]   Update Region States               22 us
[1.445s][info][gc,stats    ]   Trash Collection Set                4 us
[1.445s][info][gc,stats    ]   Rebuild Free Set                   16 us
[1.445s][info][gc,stats    ] Concurrent Cleanup                  136 us
[1.445s][info][gc,stats    ] 
[1.445s][info][gc,stats    ] Allocation pacing accrued:
[1.445s][info][gc,stats    ]       0 of  1432 ms (  0.0%): <total>
[1.445s][info][gc,stats    ]       0 of  1432 ms (  0.0%): <average total>
[1.445s][info][gc,stats    ] 
[1.445s][info][gc,metaspace] Metaspace: 21245K(21568K)->21604K(21952K) NonClass: 18908K(19072K)->19209K(19392K) Class: 2337K(2496K)->2394K(2560K)
[1.445s][info][gc,ergo     ] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[7.675s][info][gc          ] Cancelling GC: Stopping VM
[7.675s][info][gc,heap,exit] Heap
[7.675s][info][gc,heap,exit] Shenandoah Heap
[7.675s][info][gc,heap,exit]  1984M max, 1984M soft max, 133M committed, 38952K used
[7.675s][info][gc,heap,exit]  3969 x 512K regions
[7.675s][info][gc,heap,exit] Status: cancelled
[7.675s][info][gc,heap,exit] Reserved region:
[7.675s][info][gc,heap,exit]  - [0x0000000083f80000, 0x0000000100000000) 
[7.675s][info][gc,heap,exit] Collection set:
[7.675s][info][gc,heap,exit]  - map (vanilla): 0x000000000001107f
[7.675s][info][gc,heap,exit]  - map (biased):  0x0000000000010000
[7.675s][info][gc,heap,exit] 
[7.675s][info][gc,heap,exit]  Metaspace       used 25423K, committed 25728K, reserved 1114112K
[7.675s][info][gc,heap,exit]   class space    used 2924K, committed 3072K, reserved 1048576K
[7.675s][info][gc,stats    ] 
[7.675s][info][gc,stats    ] GC STATISTICS:
[7.675s][info][gc,stats    ]   "(G)" (gross) pauses include VM time: time to notify and block threads, do the pre-
[7.675s][info][gc,stats    ]         and post-safepoint housekeeping. Use -Xlog:safepoint+stats to dissect.
[7.675s][info][gc,stats    ]   "(N)" (net) pauses are the times spent in the actual GC code.
[7.675s][info][gc,stats    ]   "a" is average time for each phase, look at levels to see if average makes sense.
[7.675s][info][gc,stats    ]   "lvls" are quantiles: 0% (minimum), 25%, 50% (median), 75%, 100% (maximum).
[7.675s][info][gc,stats    ] 
[7.675s][info][gc,stats    ]   All times are wall-clock times, except per-root-class counters, that are sum over
[7.675s][info][gc,stats    ]   all workers. Dividing the <total> over the root stage time estimates parallelism.
[7.675s][info][gc,stats    ] 
[7.675s][info][gc,stats    ]   Pacing delays are measured from entering the pacing code till exiting it. Therefore,
[7.675s][info][gc,stats    ]   observed pacing delays may be higher than the threshold when paced thread spent more
[7.675s][info][gc,stats    ]   time in the pacing code. It usually happens when thread is de-scheduled while paced,
[7.675s][info][gc,stats    ]   OS takes longer to unblock the thread, or JVM experiences an STW pause.
[7.675s][info][gc,stats    ] 
[7.675s][info][gc,stats    ]   Higher delay would prevent application outpacing the GC, but it will hide the GC latencies
[7.675s][info][gc,stats    ]   from the STW pause times. Pacing affects the individual threads, and so it would also be
[7.675s][info][gc,stats    ]   invisible to the usual profiling tools, but would add up to end-to-end application latency.
[7.675s][info][gc,stats    ]   Raise max pacing delay with care.
[7.675s][info][gc,stats    ] 
[7.675s][info][gc,stats    ] Concurrent Reset               =    0.000 s (a =      447 us) (n =     1) (lvls, us =      445,      445,      445,      445,      447)
[7.675s][info][gc,stats    ] Pause Init Mark (G)            =    0.001 s (a =      892 us) (n =     1) (lvls, us =      891,      891,      891,      891,      892)
[7.675s][info][gc,stats    ] Pause Init Mark (N)            =    0.001 s (a =      635 us) (n =     1) (lvls, us =      635,      635,      635,      635,      635)
[7.675s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       36 us) (n =     1) (lvls, us =       36,       36,       36,       36,       36)
[7.675s][info][gc,stats    ] Concurrent Mark Roots          =    0.004 s (a =     4254 us) (n =     1) (lvls, us =     4238,     4238,     4238,     4238,     4254)
[7.675s][info][gc,stats    ]   CMR: <total>                 =    0.005 s (a =     5463 us) (n =     1) (lvls, us =     5449,     5449,     5449,     5449,     5463)
[7.675s][info][gc,stats    ]   CMR: Thread Roots            =    0.001 s (a =     1324 us) (n =     1) (lvls, us =     1309,     1309,     1309,     1309,     1324)
[7.675s][info][gc,stats    ]   CMR: VM Strong Roots         =    0.001 s (a =      824 us) (n =     1) (lvls, us =      822,      822,      822,      822,      824)
[7.675s][info][gc,stats    ]   CMR: CLDG Roots              =    0.003 s (a =     3315 us) (n =     1) (lvls, us =     3301,     3301,     3301,     3301,     3315)
[7.675s][info][gc,stats    ] Concurrent Marking             =    0.011 s (a =    10762 us) (n =     1) (lvls, us =    10742,    10742,    10742,    10742,    10762)
[7.675s][info][gc,stats    ] Pause Final Mark (G)           =    0.006 s (a =     5859 us) (n =     1) (lvls, us =     5840,     5840,     5840,     5840,     5859)
[7.675s][info][gc,stats    ] Pause Final Mark (N)           =    0.006 s (a =     5617 us) (n =     1) (lvls, us =     5605,     5605,     5605,     5605,     5617)
[7.675s][info][gc,stats    ]   Finish Mark                  =    0.005 s (a =     5407 us) (n =     1) (lvls, us =     5391,     5391,     5391,     5391,     5407)
[7.675s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       29 us) (n =     1) (lvls, us =       29,       29,       29,       29,       29)
[7.675s][info][gc,stats    ]   Choose Collection Set        =    0.000 s (a =      100 us) (n =     1) (lvls, us =      100,      100,      100,      100,      100)
[7.675s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       19 us) (n =     1) (lvls, us =       19,       19,       19,       19,       19)
[7.675s][info][gc,stats    ] Concurrent Thread Roots        =    0.000 s (a =      208 us) (n =     1) (lvls, us =      207,      207,      207,      207,      208)
[7.675s][info][gc,stats    ]   CTR: <total>                 =    0.000 s (a =      297 us) (n =     1) (lvls, us =      297,      297,      297,      297,      297)
[7.675s][info][gc,stats    ]   CTR: Thread Roots            =    0.000 s (a =      297 us) (n =     1) (lvls, us =      297,      297,      297,      297,      297)
[7.675s][info][gc,stats    ] Concurrent Weak References     =    0.000 s (a =      338 us) (n =     1) (lvls, us =      338,      338,      338,      338,      338)
[7.675s][info][gc,stats    ]   CWRF: <total>                =    0.000 s (a =      330 us) (n =     1) (lvls, us =      330,      330,      330,      330,      330)
[7.675s][info][gc,stats    ]   CWRF: Weak References        =    0.000 s (a =      330 us) (n =     1) (lvls, us =      330,      330,      330,      330,      330)
[7.675s][info][gc,stats    ] Concurrent Weak Roots          =    0.002 s (a =     2043 us) (n =     1) (lvls, us =     2031,     2031,     2031,     2031,     2043)
[7.675s][info][gc,stats    ]   Roots                        =    0.002 s (a =     1871 us) (n =     1) (lvls, us =     1855,     1855,     1855,     1855,     1871)
[7.675s][info][gc,stats    ]     CWR: <total>               =    0.003 s (a =     3326 us) (n =     1) (lvls, us =     3320,     3320,     3320,     3320,     3326)
[7.675s][info][gc,stats    ]     CWR: Code Cache Roots      =    0.001 s (a =      864 us) (n =     1) (lvls, us =      863,      863,      863,      863,      864)
[7.675s][info][gc,stats    ]     CWR: VM Weak Roots         =    0.002 s (a =     2446 us) (n =     1) (lvls, us =     2441,     2441,     2441,     2441,     2446)
[7.675s][info][gc,stats    ]     CWR: CLDG Roots            =    0.000 s (a =       16 us) (n =     1) (lvls, us =       16,       16,       16,       16,       16)
[7.675s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =      120 us) (n =     1) (lvls, us =      119,      119,      119,      119,      120)
[7.675s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =      104 us) (n =     1) (lvls, us =      104,      104,      104,      104,      104)
[7.675s][info][gc,stats    ] Concurrent Class Unloading     =    0.006 s (a =     6000 us) (n =     1) (lvls, us =     5996,     5996,     5996,     5996,     6000)
[7.675s][info][gc,stats    ]   Unlink Stale                 =    0.003 s (a =     2590 us) (n =     1) (lvls, us =     2578,     2578,     2578,     2578,     2590)
[7.675s][info][gc,stats    ]     System Dictionary          =    0.000 s (a =       53 us) (n =     1) (lvls, us =       53,       53,       53,       53,       53)
[7.675s][info][gc,stats    ]     Weak Class Links           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[7.675s][info][gc,stats    ]     Code Roots                 =    0.003 s (a =     2535 us) (n =     1) (lvls, us =     2520,     2520,     2520,     2520,     2535)
[7.675s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =      125 us) (n =     1) (lvls, us =      125,      125,      125,      125,      125)
[7.675s][info][gc,stats    ]   Purge Unlinked               =    0.003 s (a =     3239 us) (n =     1) (lvls, us =     3223,     3223,     3223,     3223,     3239)
[7.675s][info][gc,stats    ]     Code Roots                 =    0.003 s (a =     3229 us) (n =     1) (lvls, us =     3223,     3223,     3223,     3223,     3229)
[7.675s][info][gc,stats    ]     CLDG                       =    0.000 s (a =        9 us) (n =     1) (lvls, us =        9,        9,        9,        9,        9)
[7.675s][info][gc,stats    ]     Exception Caches           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[7.675s][info][gc,stats    ] Concurrent Strong Roots        =    0.001 s (a =     1149 us) (n =     1) (lvls, us =     1133,     1133,     1133,     1133,     1149)
[7.675s][info][gc,stats    ]   CSR: <total>                 =    0.001 s (a =     1084 us) (n =     1) (lvls, us =     1074,     1074,     1074,     1074,     1084)
[7.675s][info][gc,stats    ]   CSR: VM Strong Roots         =    0.000 s (a =       22 us) (n =     1) (lvls, us =       22,       22,       22,       22,       22)
[7.675s][info][gc,stats    ]   CSR: CLDG Roots              =    0.001 s (a =     1061 us) (n =     1) (lvls, us =     1055,     1055,     1055,     1055,     1061)
[7.675s][info][gc,stats    ] Concurrent Evacuation          =    0.005 s (a =     4731 us) (n =     1) (lvls, us =     4727,     4727,     4727,     4727,     4731)
[7.675s][info][gc,stats    ] Pause Init Update Refs (G)     =    0.000 s (a =      260 us) (n =     1) (lvls, us =      260,      260,      260,      260,      260)
[7.675s][info][gc,stats    ] Pause Init Update Refs (N)     =    0.000 s (a =       55 us) (n =     1) (lvls, us =       55,       55,       55,       55,       55)
[7.675s][info][gc,stats    ]   Manage GCLABs                =    0.000 s (a =        5 us) (n =     1) (lvls, us =        5,        5,        5,        5,        5)
[7.675s][info][gc,stats    ] Concurrent Update Refs         =    0.006 s (a =     5561 us) (n =     1) (lvls, us =     5547,     5547,     5547,     5547,     5561)
[7.675s][info][gc,stats    ] Concurrent Update Thread Roots =    0.000 s (a =      435 us) (n =     1) (lvls, us =      434,      434,      434,      434,      435)
[7.676s][info][gc,stats    ] Pause Final Update Refs (G)    =    0.000 s (a =      211 us) (n =     1) (lvls, us =      209,      209,      209,      209,      211)
[7.676s][info][gc,stats    ] Pause Final Update Refs (N)    =    0.000 s (a =       85 us) (n =     1) (lvls, us =       85,       85,       85,       85,       85)
[7.676s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       22 us) (n =     1) (lvls, us =       22,       22,       22,       22,       22)
[7.676s][info][gc,stats    ]   Trash Collection Set         =    0.000 s (a =        4 us) (n =     1) (lvls, us =        4,        4,        4,        4,        4)
[7.676s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       16 us) (n =     1) (lvls, us =       16,       16,       16,       16,       16)
[7.676s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =      136 us) (n =     1) (lvls, us =      135,      135,      135,      135,      136)
[7.676s][info][gc,stats    ] 
[7.676s][info][gc,stats    ] 
[7.676s][info][gc,stats    ] Under allocation pressure, concurrent cycles may cancel, and either continue cycle
[7.676s][info][gc,stats    ] under stop-the-world pause or result in stop-the-world Full GC. Increase heap size,
[7.676s][info][gc,stats    ] tune GC heuristics, set more aggressive pacing delay, or lower allocation rate
[7.676s][info][gc,stats    ] to avoid Degenerated and Full GC cycles.
[7.676s][info][gc,stats    ] 
[7.676s][info][gc,stats    ]     1 successful concurrent GCs
[7.676s][info][gc,stats    ]       0 invoked explicitly
[7.676s][info][gc,stats    ]       0 invoked implicitly
[7.676s][info][gc,stats    ] 
[7.676s][info][gc,stats    ]     0 Degenerated GCs
[7.676s][info][gc,stats    ]       0 caused by allocation failure
[7.676s][info][gc,stats    ]       0 upgraded to Full GC
[7.676s][info][gc,stats    ] 
[7.676s][info][gc,stats    ]     0 Full GCs
[7.676s][info][gc,stats    ]       0 invoked explicitly
[7.676s][info][gc,stats    ]       0 invoked implicitly
[7.676s][info][gc,stats    ]       0 caused by allocation failure
[7.676s][info][gc,stats    ]       0 upgraded from Degenerated GC
[7.676s][info][gc,stats    ] 
[7.676s][info][gc,stats    ] 
