[0.004s][info][gc] Heuristics ergonomically sets -XX:+ExplicitGCInvokesConcurrent
[0.004s][info][gc] Heuristics ergonomically sets -XX:+ShenandoahImplicitGCInvokesConcurrent
[0.004s][info][gc] Using Shenandoah
[0.005s][info][gc,ergo] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[0.005s][info][gc,init] Version: 21.0.7+6-Ubuntu-0ubuntu122.04 (release)
[0.005s][info][gc,init] CPUs: 4 total, 4 available
[0.005s][info][gc,init] Memory: 7937M
[0.005s][info][gc,init] Large Page Support: Disabled
[0.005s][info][gc,init] NUMA Support: Disabled
[0.005s][info][gc,init] Compressed Oops: Enabled (32-bit)
[0.005s][info][gc,init] Heap Min Capacity: 6656K
[0.005s][info][gc,init] Heap Initial Capacity: 127488K
[0.005s][info][gc,init] Heap Max Capacity: 2032128K
[0.005s][info][gc,init] Pre-touch: Disabled
[0.005s][info][gc,init] Mode: Snapshot-At-The-Beginning (SATB)
[0.005s][info][gc,init] Heuristics: Adaptive
[0.005s][info][gc,init] Heap Region Count: 3969
[0.005s][info][gc,init] Heap Region Size: 512K
[0.005s][info][gc,init] TLAB Size Max: 512K
[0.005s][info][gc,init] Humongous Object Threshold: 512K
[0.005s][info][gc,init] Parallel Workers: 8
[0.005s][info][gc,init] Concurrent Workers: 2
[0.013s][info][gc,metaspace] CDS archive(s) mapped at: [0x00007fd887000000-0x00007fd887c97000-0x00007fd887c97000), size 13201408, SharedBaseAddress: 0x00007fd887000000, ArchiveRelocationMode: 1.
[0.013s][info][gc,metaspace] Compressed class space mapped at: 0x00007fd888000000-0x00007fd8c8000000, reserved size: 1073741824
[0.013s][info][gc,metaspace] Narrow klass base: 0x00007fd887000000, Narrow klass shift: 0, Narrow klass range: 0x100000000
[2.150s][info][gc          ] Trigger: Metadata GC Threshold
[2.150s][info][gc,ergo     ] Free: 1746M, Max: 512K regular, 1746M humongous, Frag: 0% external, 0% internal; Reserve: 101888K, Max: 512K
[2.150s][info][gc,start    ] GC(0) Concurrent reset
[2.150s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reset
[2.150s][info][gc,ergo     ] GC(0) Pacer for Reset. Non-Taxable: 1984M
[2.151s][info][gc          ] GC(0) Concurrent reset 0.540ms
[2.151s][info][gc,start    ] GC(0) Pause Init Mark (unload classes)
[2.152s][info][gc,task     ] GC(0) Using 8 of 8 workers for init marking
[2.152s][info][gc,ergo     ] GC(0) Pacer for Mark. Expected Live: 198M, Free: 1746M, Non-Taxable: 174M, Alloc Tax Rate: 0.1x
[2.152s][info][gc          ] GC(0) Pause Init Mark (unload classes) 0.824ms
[2.152s][info][gc,start    ] GC(0) Concurrent marking roots
[2.152s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking roots
[2.154s][info][gc          ] GC(0) Concurrent marking roots 2.388ms
[2.154s][info][gc,start    ] GC(0) Concurrent marking (unload classes)
[2.154s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking
[2.218s][info][gc          ] GC(0) Concurrent marking (unload classes) 63.575ms
[2.218s][info][gc,start    ] GC(0) Pause Final Mark (unload classes)
[2.218s][info][gc,task     ] GC(0) Using 8 of 8 workers for final marking
[2.218s][info][gc,ergo     ] GC(0) Adaptive CSet Selection. Target Free: 281M, Actual Free: 1844M, Max CSet: 84672K, Min Garbage: 0B
[2.219s][info][gc,ergo     ] GC(0) Collectable Garbage: 72530K (98%), Immediate: 3823K (5%), CSet: 68707K (93%)
[2.219s][info][gc,ergo     ] GC(0) Pacer for Evacuation. Used CSet: 77312K, Free: 1745M, Non-Taxable: 174M, Alloc Tax Rate: 1.1x
[2.219s][info][gc          ] GC(0) Pause Final Mark (unload classes) 0.491ms
[2.219s][info][gc,start    ] GC(0) Concurrent thread roots
[2.219s][info][gc,task     ] GC(0) Using 2 of 8 workers for Concurrent thread roots
[2.219s][info][gc          ] GC(0) Concurrent thread roots 0.502ms
[2.219s][info][gc,start    ] GC(0) Concurrent weak references
[2.219s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak references
[2.220s][info][gc,ref      ] GC(0) Encountered references: Soft: 3953, Weak: 2094, Final: 4, Phantom: 820
[2.220s][info][gc,ref      ] GC(0) Discovered  references: Soft: 0, Weak: 1307, Final: 4, Phantom: 478
[2.220s][info][gc,ref      ] GC(0) Enqueued    references: Soft: 0, Weak: 497, Final: 0, Phantom: 230
[2.220s][info][gc          ] GC(0) Concurrent weak references 0.481ms
[2.220s][info][gc,start    ] GC(0) Concurrent weak roots
[2.220s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak root
[2.223s][info][gc          ] GC(0) Concurrent weak roots 3.174ms
[2.223s][info][gc,start    ] GC(0) Concurrent cleanup
[2.223s][info][gc          ] GC(0) Concurrent cleanup 142M->138M(145M) 0.099ms
[2.223s][info][gc,ergo     ] GC(0) Free: 1745M, Max: 512K regular, 1741M humongous, Frag: 1% external, 0% internal; Reserve: 100847K, Max: 512K
[2.223s][info][gc,start    ] GC(0) Concurrent class unloading
[2.223s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent class unloading
[2.229s][info][gc          ] GC(0) Concurrent class unloading 5.526ms
[2.229s][info][gc,start    ] GC(0) Concurrent strong roots
[2.229s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent strong root
[2.230s][info][gc          ] GC(0) Concurrent strong roots 1.378ms
[2.230s][info][gc,start    ] GC(0) Concurrent evacuation
[2.230s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent evacuation
[2.236s][info][gc          ] GC(0) Concurrent evacuation 5.966ms
[2.236s][info][gc,start    ] GC(0) Pause Init Update Refs
[2.236s][info][gc,ergo     ] GC(0) Pacer for Update Refs. Used: 147M, Free: 1744M, Non-Taxable: 174M, Alloc Tax Rate: 1.1x
[2.236s][info][gc          ] GC(0) Pause Init Update Refs 0.051ms
[2.236s][info][gc,start    ] GC(0) Concurrent update references
[2.236s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reference update
[2.256s][info][gc          ] GC(0) Concurrent update references 19.803ms
[2.256s][info][gc,start    ] GC(0) Concurrent update thread roots
[2.256s][info][gc          ] GC(0) Concurrent update thread roots 0.458ms
[2.257s][info][gc,start    ] GC(0) Pause Final Update Refs
[2.257s][info][gc,task     ] GC(0) Using 8 of 8 workers for final reference update
[2.257s][info][gc          ] GC(0) Pause Final Update Refs 0.090ms
[2.257s][info][gc,start    ] GC(0) Concurrent cleanup
[2.257s][info][gc          ] GC(0) Concurrent cleanup 148M->73M(153M) 0.115ms
[2.257s][info][gc,ergo     ] Free: 1809M, Max: 512K regular, 1731M humongous, Frag: 5% external, 0% internal; Reserve: 101888K, Max: 512K
[2.257s][info][gc,stats    ] 
[2.257s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[2.257s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[2.257s][info][gc,stats    ] 
[2.257s][info][gc,stats    ] Concurrent Reset                    577 us
[2.257s][info][gc,stats    ] Pause Init Mark (G)                1240 us
[2.257s][info][gc,stats    ] Pause Init Mark (N)                 874 us
[2.257s][info][gc,stats    ]   Update Region States               24 us
[2.257s][info][gc,stats    ] Concurrent Mark Roots              2425 us, parallelism: 1.51x
[2.257s][info][gc,stats    ]   CMR: <total>                     3672 us
[2.257s][info][gc,stats    ]   CMR: Thread Roots                1111 us, workers (us): 1110,   0, ---, ---, ---, ---, ---, ---, 
[2.257s][info][gc,stats    ]   CMR: VM Strong Roots              609 us, workers (us): 380, 229, ---, ---, ---, ---, ---, ---, 
[2.257s][info][gc,stats    ]   CMR: CLDG Roots                  1953 us, workers (us): ---, 1953, ---, ---, ---, ---, ---, ---, 
[2.257s][info][gc,stats    ] Concurrent Marking                63605 us
[2.257s][info][gc,stats    ] Pause Final Mark (G)                677 us
[2.257s][info][gc,stats    ] Pause Final Mark (N)                525 us
[2.257s][info][gc,stats    ]   Finish Mark                       113 us
[2.257s][info][gc,stats    ]   Update Region States               40 us
[2.257s][info][gc,stats    ]   Choose Collection Set             150 us
[2.257s][info][gc,stats    ]   Rebuild Free Set                   28 us
[2.258s][info][gc,stats    ] Concurrent Thread Roots             517 us, parallelism: 1.11x
[2.258s][info][gc,stats    ]   CTR: <total>                      573 us
[2.258s][info][gc,stats    ]   CTR: Thread Roots                 573 us, workers (us): 449, 124, ---, ---, ---, ---, ---, ---, 
[2.258s][info][gc,stats    ] Concurrent Weak References          486 us, parallelism: 0.83x
[2.258s][info][gc,stats    ]   CWRF: <total>                     403 us
[2.258s][info][gc,stats    ]   CWRF: Weak References             403 us, workers (us):  23, 380, ---, ---, ---, ---, ---, ---, 
[2.258s][info][gc,stats    ] Concurrent Weak Roots              3202 us
[2.258s][info][gc,stats    ]   Roots                            2509 us, parallelism: 1.06x
[2.258s][info][gc,stats    ]     CWR: <total>                   2669 us
[2.258s][info][gc,stats    ]     CWR: Code Cache Roots           832 us, workers (us): 417, 414, ---, ---, ---, ---, ---, ---, 
[2.258s][info][gc,stats    ]     CWR: VM Weak Roots             1818 us, workers (us): 898, 920, ---, ---, ---, ---, ---, ---, 
[2.258s][info][gc,stats    ]     CWR: CLDG Roots                  19 us, workers (us):  19, ---, ---, ---, ---, ---, ---, ---, 
[2.258s][info][gc,stats    ]   Rendezvous                        643 us
[2.258s][info][gc,stats    ] Concurrent Cleanup                  114 us
[2.258s][info][gc,stats    ] Concurrent Class Unloading         5543 us
[2.258s][info][gc,stats    ]   Unlink Stale                     1595 us
[2.258s][info][gc,stats    ]     System Dictionary                50 us
[2.258s][info][gc,stats    ]     Weak Class Links                  0 us
[2.258s][info][gc,stats    ]     Code Roots                     1544 us
[2.258s][info][gc,stats    ]   Rendezvous                        369 us
[2.258s][info][gc,stats    ]   Purge Unlinked                   3539 us
[2.258s][info][gc,stats    ]     Code Roots                     3528 us
[2.258s][info][gc,stats    ]     CLDG                             10 us
[2.258s][info][gc,stats    ]     Exception Caches                  0 us
[2.258s][info][gc,stats    ] Concurrent Strong Roots            1389 us, parallelism: 0.95x
[2.258s][info][gc,stats    ]   CSR: <total>                     1321 us
[2.258s][info][gc,stats    ]   CSR: VM Strong Roots               24 us, workers (us):  24,   1, ---, ---, ---, ---, ---, ---, 
[2.258s][info][gc,stats    ]   CSR: CLDG Roots                  1297 us, workers (us): 1297, ---, ---, ---, ---, ---, ---, ---, 
[2.258s][info][gc,stats    ] Concurrent Evacuation              5990 us
[2.258s][info][gc,stats    ] Pause Init Update Refs (G)          167 us
[2.258s][info][gc,stats    ] Pause Init Update Refs (N)           61 us
[2.258s][info][gc,stats    ]   Manage GCLABs                       5 us
[2.258s][info][gc,stats    ] Concurrent Update Refs            19846 us
[2.258s][info][gc,stats    ] Concurrent Update Thread Roots      498 us
[2.258s][info][gc,stats    ] Pause Final Update Refs (G)         213 us
[2.258s][info][gc,stats    ] Pause Final Update Refs (N)         101 us
[2.258s][info][gc,stats    ]   Update Region States               29 us
[2.258s][info][gc,stats    ]   Trash Collection Set                3 us
[2.258s][info][gc,stats    ]   Rebuild Free Set                   19 us
[2.258s][info][gc,stats    ] Concurrent Cleanup                  156 us
[2.258s][info][gc,stats    ] 
[2.258s][info][gc,stats    ] Allocation pacing accrued:
[2.258s][info][gc,stats    ]       0 of  2254 ms (  0.0%): <total>
[2.258s][info][gc,stats    ]       0 of  2254 ms (  0.0%): <average total>
[2.258s][info][gc,stats    ] 
[2.259s][info][gc,metaspace] Metaspace: 21256K(21568K)->22439K(22784K) NonClass: 18909K(19072K)->19933K(20096K) Class: 2347K(2496K)->2505K(2688K)
[2.259s][info][gc,ergo     ] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[6.543s][info][gc          ] Cancelling GC: Stopping VM
[6.543s][info][gc,heap,exit] Heap
[6.543s][info][gc,heap,exit] Shenandoah Heap
[6.543s][info][gc,heap,exit]  1984M max, 1984M soft max, 153M committed, 85028K used
[6.543s][info][gc,heap,exit]  3969 x 512K regions
[6.543s][info][gc,heap,exit] Status: cancelled
[6.543s][info][gc,heap,exit] Reserved region:
[6.543s][info][gc,heap,exit]  - [0x0000000083f80000, 0x0000000100000000) 
[6.543s][info][gc,heap,exit] Collection set:
[6.543s][info][gc,heap,exit]  - map (vanilla): 0x000000000001107f
[6.543s][info][gc,heap,exit]  - map (biased):  0x0000000000010000
[6.543s][info][gc,heap,exit] 
[6.543s][info][gc,heap,exit]  Metaspace       used 25126K, committed 25408K, reserved 1114112K
[6.543s][info][gc,heap,exit]   class space    used 2775K, committed 2880K, reserved 1048576K
[6.544s][info][gc,stats    ] 
[6.544s][info][gc,stats    ] GC STATISTICS:
[6.544s][info][gc,stats    ]   "(G)" (gross) pauses include VM time: time to notify and block threads, do the pre-
[6.544s][info][gc,stats    ]         and post-safepoint housekeeping. Use -Xlog:safepoint+stats to dissect.
[6.544s][info][gc,stats    ]   "(N)" (net) pauses are the times spent in the actual GC code.
[6.544s][info][gc,stats    ]   "a" is average time for each phase, look at levels to see if average makes sense.
[6.544s][info][gc,stats    ]   "lvls" are quantiles: 0% (minimum), 25%, 50% (median), 75%, 100% (maximum).
[6.544s][info][gc,stats    ] 
[6.544s][info][gc,stats    ]   All times are wall-clock times, except per-root-class counters, that are sum over
[6.544s][info][gc,stats    ]   all workers. Dividing the <total> over the root stage time estimates parallelism.
[6.544s][info][gc,stats    ] 
[6.544s][info][gc,stats    ]   Pacing delays are measured from entering the pacing code till exiting it. Therefore,
[6.544s][info][gc,stats    ]   observed pacing delays may be higher than the threshold when paced thread spent more
[6.544s][info][gc,stats    ]   time in the pacing code. It usually happens when thread is de-scheduled while paced,
[6.544s][info][gc,stats    ]   OS takes longer to unblock the thread, or JVM experiences an STW pause.
[6.544s][info][gc,stats    ] 
[6.544s][info][gc,stats    ]   Higher delay would prevent application outpacing the GC, but it will hide the GC latencies
[6.544s][info][gc,stats    ]   from the STW pause times. Pacing affects the individual threads, and so it would also be
[6.544s][info][gc,stats    ]   invisible to the usual profiling tools, but would add up to end-to-end application latency.
[6.544s][info][gc,stats    ]   Raise max pacing delay with care.
[6.544s][info][gc,stats    ] 
[6.544s][info][gc,stats    ] Concurrent Reset               =    0.001 s (a =      577 us) (n =     1) (lvls, us =      576,      576,      576,      576,      577)
[6.544s][info][gc,stats    ] Pause Init Mark (G)            =    0.001 s (a =     1240 us) (n =     1) (lvls, us =     1230,     1230,     1230,     1230,     1240)
[6.544s][info][gc,stats    ] Pause Init Mark (N)            =    0.001 s (a =      874 us) (n =     1) (lvls, us =      873,      873,      873,      873,      874)
[6.545s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       24 us) (n =     1) (lvls, us =       24,       24,       24,       24,       24)
[6.545s][info][gc,stats    ] Concurrent Mark Roots          =    0.002 s (a =     2425 us) (n =     1) (lvls, us =     2422,     2422,     2422,     2422,     2425)
[6.545s][info][gc,stats    ]   CMR: <total>                 =    0.004 s (a =     3672 us) (n =     1) (lvls, us =     3672,     3672,     3672,     3672,     3672)
[6.545s][info][gc,stats    ]   CMR: Thread Roots            =    0.001 s (a =     1111 us) (n =     1) (lvls, us =     1094,     1094,     1094,     1094,     1111)
[6.545s][info][gc,stats    ]   CMR: VM Strong Roots         =    0.001 s (a =      609 us) (n =     1) (lvls, us =      607,      607,      607,      607,      609)
[6.545s][info][gc,stats    ]   CMR: CLDG Roots              =    0.002 s (a =     1953 us) (n =     1) (lvls, us =     1934,     1934,     1934,     1934,     1953)
[6.545s][info][gc,stats    ] Concurrent Marking             =    0.064 s (a =    63605 us) (n =     1) (lvls, us =    63477,    63477,    63477,    63477,    63605)
[6.545s][info][gc,stats    ] Pause Final Mark (G)           =    0.001 s (a =      677 us) (n =     1) (lvls, us =      676,      676,      676,      676,      677)
[6.545s][info][gc,stats    ] Pause Final Mark (N)           =    0.001 s (a =      525 us) (n =     1) (lvls, us =      523,      523,      523,      523,      525)
[6.545s][info][gc,stats    ]   Finish Mark                  =    0.000 s (a =      113 us) (n =     1) (lvls, us =      111,      111,      111,      111,      113)
[6.545s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       40 us) (n =     1) (lvls, us =       40,       40,       40,       40,       40)
[6.545s][info][gc,stats    ]   Choose Collection Set        =    0.000 s (a =      150 us) (n =     1) (lvls, us =      148,      148,      148,      148,      150)
[6.545s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       28 us) (n =     1) (lvls, us =       28,       28,       28,       28,       28)
[6.545s][info][gc,stats    ] Concurrent Thread Roots        =    0.001 s (a =      517 us) (n =     1) (lvls, us =      516,      516,      516,      516,      517)
[6.545s][info][gc,stats    ]   CTR: <total>                 =    0.001 s (a =      573 us) (n =     1) (lvls, us =      572,      572,      572,      572,      573)
[6.545s][info][gc,stats    ]   CTR: Thread Roots            =    0.001 s (a =      573 us) (n =     1) (lvls, us =      572,      572,      572,      572,      573)
[6.545s][info][gc,stats    ] Concurrent Weak References     =    0.000 s (a =      486 us) (n =     1) (lvls, us =      484,      484,      484,      484,      486)
[6.545s][info][gc,stats    ]   CWRF: <total>                =    0.000 s (a =      403 us) (n =     1) (lvls, us =      402,      402,      402,      402,      403)
[6.545s][info][gc,stats    ]   CWRF: Weak References        =    0.000 s (a =      403 us) (n =     1) (lvls, us =      402,      402,      402,      402,      403)
[6.545s][info][gc,stats    ] Concurrent Weak Roots          =    0.003 s (a =     3202 us) (n =     1) (lvls, us =     3184,     3184,     3184,     3184,     3202)
[6.545s][info][gc,stats    ]   Roots                        =    0.003 s (a =     2509 us) (n =     1) (lvls, us =     2500,     2500,     2500,     2500,     2509)
[6.545s][info][gc,stats    ]     CWR: <total>               =    0.003 s (a =     2669 us) (n =     1) (lvls, us =     2656,     2656,     2656,     2656,     2669)
[6.545s][info][gc,stats    ]     CWR: Code Cache Roots      =    0.001 s (a =      832 us) (n =     1) (lvls, us =      830,      830,      830,      830,      832)
[6.546s][info][gc,stats    ]     CWR: VM Weak Roots         =    0.002 s (a =     1818 us) (n =     1) (lvls, us =     1816,     1816,     1816,     1816,     1818)
[6.546s][info][gc,stats    ]     CWR: CLDG Roots            =    0.000 s (a =       19 us) (n =     1) (lvls, us =       19,       19,       19,       19,       19)
[6.546s][info][gc,stats    ]   Rendezvous                   =    0.001 s (a =      643 us) (n =     1) (lvls, us =      643,      643,      643,      643,      643)
[6.546s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =      114 us) (n =     1) (lvls, us =      113,      113,      113,      113,      114)
[6.546s][info][gc,stats    ] Concurrent Class Unloading     =    0.006 s (a =     5543 us) (n =     1) (lvls, us =     5527,     5527,     5527,     5527,     5543)
[6.546s][info][gc,stats    ]   Unlink Stale                 =    0.002 s (a =     1595 us) (n =     1) (lvls, us =     1582,     1582,     1582,     1582,     1595)
[6.546s][info][gc,stats    ]     System Dictionary          =    0.000 s (a =       50 us) (n =     1) (lvls, us =       50,       50,       50,       50,       50)
[6.546s][info][gc,stats    ]     Weak Class Links           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[6.546s][info][gc,stats    ]     Code Roots                 =    0.002 s (a =     1544 us) (n =     1) (lvls, us =     1543,     1543,     1543,     1543,     1544)
[6.546s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =      369 us) (n =     1) (lvls, us =      369,      369,      369,      369,      369)
[6.546s][info][gc,stats    ]   Purge Unlinked               =    0.004 s (a =     3539 us) (n =     1) (lvls, us =     3535,     3535,     3535,     3535,     3539)
[6.546s][info][gc,stats    ]     Code Roots                 =    0.004 s (a =     3528 us) (n =     1) (lvls, us =     3516,     3516,     3516,     3516,     3528)
[6.546s][info][gc,stats    ]     CLDG                       =    0.000 s (a =       10 us) (n =     1) (lvls, us =       10,       10,       10,       10,       10)
[6.546s][info][gc,stats    ]     Exception Caches           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[6.546s][info][gc,stats    ] Concurrent Strong Roots        =    0.001 s (a =     1389 us) (n =     1) (lvls, us =     1387,     1387,     1387,     1387,     1389)
[6.546s][info][gc,stats    ]   CSR: <total>                 =    0.001 s (a =     1321 us) (n =     1) (lvls, us =     1309,     1309,     1309,     1309,     1321)
[6.546s][info][gc,stats    ]   CSR: VM Strong Roots         =    0.000 s (a =       24 us) (n =     1) (lvls, us =       24,       24,       24,       24,       24)
[6.546s][info][gc,stats    ]   CSR: CLDG Roots              =    0.001 s (a =     1297 us) (n =     1) (lvls, us =     1289,     1289,     1289,     1289,     1297)
[6.546s][info][gc,stats    ] Concurrent Evacuation          =    0.006 s (a =     5990 us) (n =     1) (lvls, us =     5977,     5977,     5977,     5977,     5990)
[6.546s][info][gc,stats    ] Pause Init Update Refs (G)     =    0.000 s (a =      167 us) (n =     1) (lvls, us =      166,      166,      166,      166,      167)
[6.546s][info][gc,stats    ] Pause Init Update Refs (N)     =    0.000 s (a =       61 us) (n =     1) (lvls, us =       61,       61,       61,       61,       61)
[6.546s][info][gc,stats    ]   Manage GCLABs                =    0.000 s (a =        5 us) (n =     1) (lvls, us =        5,        5,        5,        5,        5)
[6.547s][info][gc,stats    ] Concurrent Update Refs         =    0.020 s (a =    19846 us) (n =     1) (lvls, us =    19727,    19727,    19727,    19727,    19846)
[6.547s][info][gc,stats    ] Concurrent Update Thread Roots =    0.000 s (a =      498 us) (n =     1) (lvls, us =      496,      496,      496,      496,      498)
[6.547s][info][gc,stats    ] Pause Final Update Refs (G)    =    0.000 s (a =      213 us) (n =     1) (lvls, us =      213,      213,      213,      213,      213)
[6.547s][info][gc,stats    ] Pause Final Update Refs (N)    =    0.000 s (a =      101 us) (n =     1) (lvls, us =      100,      100,      100,      100,      101)
[6.547s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       29 us) (n =     1) (lvls, us =       29,       29,       29,       29,       29)
[6.547s][info][gc,stats    ]   Trash Collection Set         =    0.000 s (a =        3 us) (n =     1) (lvls, us =        3,        3,        3,        3,        3)
[6.547s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       19 us) (n =     1) (lvls, us =       19,       19,       19,       19,       19)
[6.547s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =      156 us) (n =     1) (lvls, us =      154,      154,      154,      154,      156)
[6.547s][info][gc,stats    ] 
[6.547s][info][gc,stats    ] 
[6.547s][info][gc,stats    ] Under allocation pressure, concurrent cycles may cancel, and either continue cycle
[6.547s][info][gc,stats    ] under stop-the-world pause or result in stop-the-world Full GC. Increase heap size,
[6.547s][info][gc,stats    ] tune GC heuristics, set more aggressive pacing delay, or lower allocation rate
[6.547s][info][gc,stats    ] to avoid Degenerated and Full GC cycles.
[6.547s][info][gc,stats    ] 
[6.547s][info][gc,stats    ]     1 successful concurrent GCs
[6.547s][info][gc,stats    ]       0 invoked explicitly
[6.547s][info][gc,stats    ]       0 invoked implicitly
[6.547s][info][gc,stats    ] 
[6.547s][info][gc,stats    ]     0 Degenerated GCs
[6.547s][info][gc,stats    ]       0 caused by allocation failure
[6.547s][info][gc,stats    ]       0 upgraded to Full GC
[6.547s][info][gc,stats    ] 
[6.547s][info][gc,stats    ]     0 Full GCs
[6.547s][info][gc,stats    ]       0 invoked explicitly
[6.547s][info][gc,stats    ]       0 invoked implicitly
[6.547s][info][gc,stats    ]       0 caused by allocation failure
[6.548s][info][gc,stats    ]       0 upgraded from Degenerated GC
[6.548s][info][gc,stats    ] 
[6.548s][info][gc,stats    ] 
