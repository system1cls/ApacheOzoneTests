[0.011s][info][gc] Heuristics ergonomically sets -XX:+ExplicitGCInvokesConcurrent
[0.011s][info][gc] Heuristics ergonomically sets -XX:+ShenandoahImplicitGCInvokesConcurrent
[0.011s][info][gc] Using Shenandoah
[0.012s][info][gc,ergo] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[0.012s][info][gc,init] Version: 21.0.7+6-Ubuntu-0ubuntu122.04 (release)
[0.012s][info][gc,init] CPUs: 4 total, 4 available
[0.012s][info][gc,init] Memory: 7937M
[0.012s][info][gc,init] Large Page Support: Disabled
[0.012s][info][gc,init] NUMA Support: Disabled
[0.012s][info][gc,init] Compressed Oops: Enabled (32-bit)
[0.012s][info][gc,init] Heap Min Capacity: 6656K
[0.012s][info][gc,init] Heap Initial Capacity: 127488K
[0.013s][info][gc,init] Heap Max Capacity: 2032128K
[0.013s][info][gc,init] Pre-touch: Disabled
[0.013s][info][gc,init] Mode: Snapshot-At-The-Beginning (SATB)
[0.013s][info][gc,init] Heuristics: Adaptive
[0.013s][info][gc,init] Heap Region Count: 3969
[0.013s][info][gc,init] Heap Region Size: 512K
[0.013s][info][gc,init] TLAB Size Max: 512K
[0.013s][info][gc,init] Humongous Object Threshold: 512K
[0.013s][info][gc,init] Parallel Workers: 8
[0.013s][info][gc,init] Concurrent Workers: 2
[0.024s][info][gc,metaspace] CDS archive(s) mapped at: [0x00007f78c7000000-0x00007f78c7c97000-0x00007f78c7c97000), size 13201408, SharedBaseAddress: 0x00007f78c7000000, ArchiveRelocationMode: 1.
[0.024s][info][gc,metaspace] Compressed class space mapped at: 0x00007f78c8000000-0x00007f7908000000, reserved size: 1073741824
[0.024s][info][gc,metaspace] Narrow klass base: 0x00007f78c7000000, Narrow klass shift: 0, Narrow klass range: 0x100000000
[1.401s][info][gc          ] Trigger: Metadata GC Threshold
[1.401s][info][gc,ergo     ] Free: 1790M, Max: 512K regular, 1790M humongous, Frag: 0% external, 0% internal; Reserve: 101888K, Max: 512K
[1.401s][info][gc,start    ] GC(0) Concurrent reset
[1.401s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reset
[1.401s][info][gc,ergo     ] GC(0) Pacer for Reset. Non-Taxable: 1984M
[1.401s][info][gc          ] GC(0) Concurrent reset 0.720ms
[1.402s][info][gc,start    ] GC(0) Pause Init Mark (unload classes)
[1.402s][info][gc,task     ] GC(0) Using 8 of 8 workers for init marking
[1.402s][info][gc,ergo     ] GC(0) Pacer for Mark. Expected Live: 198M, Free: 1790M, Non-Taxable: 179M, Alloc Tax Rate: 0.1x
[1.402s][info][gc          ] GC(0) Pause Init Mark (unload classes) 0.608ms
[1.402s][info][gc,start    ] GC(0) Concurrent marking roots
[1.402s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking roots
[1.405s][info][gc          ] GC(0) Concurrent marking roots 2.655ms
[1.405s][info][gc,start    ] GC(0) Concurrent marking (unload classes)
[1.405s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking
[1.416s][info][gc          ] GC(0) Concurrent marking (unload classes) 11.138ms
[1.416s][info][gc,start    ] GC(0) Pause Final Mark (unload classes)
[1.416s][info][gc,task     ] GC(0) Using 8 of 8 workers for final marking
[1.418s][info][gc,ergo     ] GC(0) Adaptive CSet Selection. Target Free: 281M, Actual Free: 1893M, Max CSet: 84672K, Min Garbage: 0B
[1.418s][info][gc,ergo     ] GC(0) Collectable Garbage: 82059K (99%), Immediate: 5855K (7%), CSet: 76203K (91%)
[1.418s][info][gc,ergo     ] GC(0) Pacer for Evacuation. Used CSet: 83968K, Free: 1794M, Non-Taxable: 179M, Alloc Tax Rate: 1.1x
[1.418s][info][gc          ] GC(0) Pause Final Mark (unload classes) 1.492ms
[1.418s][info][gc,start    ] GC(0) Concurrent thread roots
[1.418s][info][gc,task     ] GC(0) Using 2 of 8 workers for Concurrent thread roots
[1.418s][info][gc          ] GC(0) Concurrent thread roots 0.208ms
[1.418s][info][gc,start    ] GC(0) Concurrent weak references
[1.418s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak references
[1.418s][info][gc,ref      ] GC(0) Encountered references: Soft: 3956, Weak: 2137, Final: 20, Phantom: 796
[1.419s][info][gc,ref      ] GC(0) Discovered  references: Soft: 0, Weak: 866, Final: 0, Phantom: 568
[1.419s][info][gc,ref      ] GC(0) Enqueued    references: Soft: 0, Weak: 483, Final: 0, Phantom: 317
[1.419s][info][gc          ] GC(0) Concurrent weak references 0.359ms
[1.419s][info][gc,start    ] GC(0) Concurrent weak roots
[1.419s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak root
[1.422s][info][gc          ] GC(0) Concurrent weak roots 3.255ms
[1.422s][info][gc,start    ] GC(0) Concurrent cleanup
[1.422s][info][gc          ] GC(0) Concurrent cleanup 97M->91M(125M) 0.069ms
[1.422s][info][gc,ergo     ] GC(0) Free: 1794M, Max: 512K regular, 1788M humongous, Frag: 1% external, 0% internal; Reserve: 101087K, Max: 512K
[1.422s][info][gc,start    ] GC(0) Concurrent class unloading
[1.422s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent class unloading
[1.432s][info][gc          ] GC(0) Concurrent class unloading 9.806ms
[1.432s][info][gc,start    ] GC(0) Concurrent strong roots
[1.432s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent strong root
[1.434s][info][gc          ] GC(0) Concurrent strong roots 2.199ms
[1.435s][info][gc,start    ] GC(0) Concurrent evacuation
[1.435s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent evacuation
[1.453s][info][gc          ] GC(0) Concurrent evacuation 17.937ms
[1.453s][info][gc,start    ] GC(0) Pause Init Update Refs
[1.453s][info][gc,ergo     ] GC(0) Pacer for Update Refs. Used: 101930K, Free: 1793M, Non-Taxable: 179M, Alloc Tax Rate: 1.1x
[1.453s][info][gc          ] GC(0) Pause Init Update Refs 0.048ms
[1.453s][info][gc,start    ] GC(0) Concurrent update references
[1.453s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reference update
[1.458s][info][gc          ] GC(0) Concurrent update references 5.206ms
[1.458s][info][gc,start    ] GC(0) Concurrent update thread roots
[1.458s][info][gc          ] GC(0) Concurrent update thread roots 0.310ms
[1.458s][info][gc,start    ] GC(0) Pause Final Update Refs
[1.458s][info][gc,task     ] GC(0) Using 8 of 8 workers for final reference update
[1.458s][info][gc          ] GC(0) Pause Final Update Refs 0.078ms
[1.459s][info][gc,start    ] GC(0) Concurrent cleanup
[1.459s][info][gc          ] GC(0) Concurrent cleanup 100M->18M(133M) 0.097ms
[1.459s][info][gc,ergo     ] Free: 1866M, Max: 512K regular, 1779M humongous, Frag: 5% external, 0% internal; Reserve: 101888K, Max: 512K
[1.459s][info][gc,stats    ] 
[1.459s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[1.459s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[1.459s][info][gc,stats    ] 
[1.459s][info][gc,stats    ] Concurrent Reset                    824 us
[1.459s][info][gc,stats    ] Pause Init Mark (G)                 839 us
[1.459s][info][gc,stats    ] Pause Init Mark (N)                 647 us
[1.459s][info][gc,stats    ]   Update Region States               26 us
[1.459s][info][gc,stats    ] Concurrent Mark Roots              2728 us, parallelism: 0.93x
[1.459s][info][gc,stats    ]   CMR: <total>                     2530 us
[1.459s][info][gc,stats    ]   CMR: Thread Roots                 843 us, workers (us): 842,   0, ---, ---, ---, ---, ---, ---, 
[1.459s][info][gc,stats    ]   CMR: VM Strong Roots              479 us, workers (us): 479,   0, ---, ---, ---, ---, ---, ---, 
[1.459s][info][gc,stats    ]   CMR: CLDG Roots                  1208 us, workers (us): 1208, ---, ---, ---, ---, ---, ---, ---, 
[1.459s][info][gc,stats    ] Concurrent Marking                11201 us
[1.459s][info][gc,stats    ] Pause Final Mark (G)               1613 us
[1.459s][info][gc,stats    ] Pause Final Mark (N)               1518 us
[1.459s][info][gc,stats    ]   Finish Mark                      1223 us
[1.459s][info][gc,stats    ]   Update Region States               25 us
[1.459s][info][gc,stats    ]   Choose Collection Set             144 us
[1.459s][info][gc,stats    ]   Rebuild Free Set                   24 us
[1.459s][info][gc,stats    ] Concurrent Thread Roots             272 us, parallelism: 1.16x
[1.459s][info][gc,stats    ]   CTR: <total>                      314 us
[1.459s][info][gc,stats    ]   CTR: Thread Roots                 314 us, workers (us): 157, 157, ---, ---, ---, ---, ---, ---, 
[1.459s][info][gc,stats    ] Concurrent Weak References          383 us, parallelism: 0.72x
[1.459s][info][gc,stats    ]   CWRF: <total>                     275 us
[1.459s][info][gc,stats    ]   CWRF: Weak References             275 us, workers (us): 186,  89, ---, ---, ---, ---, ---, ---, 
[1.459s][info][gc,stats    ] Concurrent Weak Roots              3601 us
[1.459s][info][gc,stats    ]   Roots                            2931 us, parallelism: 1.06x
[1.459s][info][gc,stats    ]     CWR: <total>                   3110 us
[1.459s][info][gc,stats    ]     CWR: Code Cache Roots           735 us, workers (us): 377, 358, ---, ---, ---, ---, ---, ---, 
[1.459s][info][gc,stats    ]     CWR: VM Weak Roots             2364 us, workers (us): 2263, 100, ---, ---, ---, ---, ---, ---, 
[1.459s][info][gc,stats    ]     CWR: CLDG Roots                  11 us, workers (us): ---,  11, ---, ---, ---, ---, ---, ---, 
[1.459s][info][gc,stats    ]   Rendezvous                        282 us
[1.459s][info][gc,stats    ] Concurrent Cleanup                  103 us
[1.459s][info][gc,stats    ] Concurrent Class Unloading         9858 us
[1.459s][info][gc,stats    ]   Unlink Stale                     2425 us
[1.459s][info][gc,stats    ]     System Dictionary                88 us
[1.459s][info][gc,stats    ]     Weak Class Links                  0 us
[1.459s][info][gc,stats    ]     Code Roots                     2335 us
[1.459s][info][gc,stats    ]   Rendezvous                       2111 us
[1.459s][info][gc,stats    ]   Purge Unlinked                   5210 us
[1.459s][info][gc,stats    ]     Code Roots                     5195 us
[1.459s][info][gc,stats    ]     CLDG                             15 us
[1.459s][info][gc,stats    ]     Exception Caches                  0 us
[1.459s][info][gc,stats    ] Concurrent Strong Roots            2387 us, parallelism: 0.66x
[1.459s][info][gc,stats    ]   CSR: <total>                     1582 us
[1.459s][info][gc,stats    ]   CSR: VM Strong Roots               38 us, workers (us):  31,   7, ---, ---, ---, ---, ---, ---, 
[1.459s][info][gc,stats    ]   CSR: CLDG Roots                  1544 us, workers (us): ---, 1544, ---, ---, ---, ---, ---, ---, 
[1.459s][info][gc,stats    ] Concurrent Evacuation             17977 us
[1.459s][info][gc,stats    ] Pause Init Update Refs (G)          109 us
[1.459s][info][gc,stats    ] Pause Init Update Refs (N)           58 us
[1.459s][info][gc,stats    ]   Manage GCLABs                       5 us
[1.459s][info][gc,stats    ] Concurrent Update Refs             5237 us
[1.459s][info][gc,stats    ] Concurrent Update Thread Roots      327 us
[1.459s][info][gc,stats    ] Pause Final Update Refs (G)         184 us
[1.459s][info][gc,stats    ] Pause Final Update Refs (N)          90 us
[1.459s][info][gc,stats    ]   Update Region States               19 us
[1.459s][info][gc,stats    ]   Trash Collection Set                4 us
[1.459s][info][gc,stats    ]   Rebuild Free Set                   20 us
[1.459s][info][gc,stats    ] Concurrent Cleanup                  112 us
[1.459s][info][gc,stats    ] 
[1.459s][info][gc,stats    ] Allocation pacing accrued:
[1.459s][info][gc,stats    ]       0 of  1447 ms (  0.0%): <total>
[1.459s][info][gc,stats    ]       0 of  1447 ms (  0.0%): <average total>
[1.459s][info][gc,stats    ] 
[1.459s][info][gc,metaspace] Metaspace: 21236K(21568K)->21589K(21952K) NonClass: 18897K(19072K)->19194K(19392K) Class: 2338K(2496K)->2394K(2560K)
[1.459s][info][gc,ergo     ] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[7.746s][info][gc          ] Cancelling GC: Stopping VM
[7.746s][info][gc,heap,exit] Heap
[7.746s][info][gc,heap,exit] Shenandoah Heap
[7.746s][info][gc,heap,exit]  1984M max, 1984M soft max, 133M committed, 37418K used
[7.746s][info][gc,heap,exit]  3969 x 512K regions
[7.746s][info][gc,heap,exit] Status: cancelled
[7.746s][info][gc,heap,exit] Reserved region:
[7.746s][info][gc,heap,exit]  - [0x0000000083f80000, 0x0000000100000000) 
[7.746s][info][gc,heap,exit] Collection set:
[7.746s][info][gc,heap,exit]  - map (vanilla): 0x000000000001107f
[7.746s][info][gc,heap,exit]  - map (biased):  0x0000000000010000
[7.746s][info][gc,heap,exit] 
[7.747s][info][gc,heap,exit]  Metaspace       used 25408K, committed 25728K, reserved 1114112K
[7.747s][info][gc,heap,exit]   class space    used 2924K, committed 3072K, reserved 1048576K
[7.747s][info][gc,stats    ] 
[7.747s][info][gc,stats    ] GC STATISTICS:
[7.747s][info][gc,stats    ]   "(G)" (gross) pauses include VM time: time to notify and block threads, do the pre-
[7.747s][info][gc,stats    ]         and post-safepoint housekeeping. Use -Xlog:safepoint+stats to dissect.
[7.747s][info][gc,stats    ]   "(N)" (net) pauses are the times spent in the actual GC code.
[7.747s][info][gc,stats    ]   "a" is average time for each phase, look at levels to see if average makes sense.
[7.747s][info][gc,stats    ]   "lvls" are quantiles: 0% (minimum), 25%, 50% (median), 75%, 100% (maximum).
[7.747s][info][gc,stats    ] 
[7.747s][info][gc,stats    ]   All times are wall-clock times, except per-root-class counters, that are sum over
[7.747s][info][gc,stats    ]   all workers. Dividing the <total> over the root stage time estimates parallelism.
[7.747s][info][gc,stats    ] 
[7.747s][info][gc,stats    ]   Pacing delays are measured from entering the pacing code till exiting it. Therefore,
[7.747s][info][gc,stats    ]   observed pacing delays may be higher than the threshold when paced thread spent more
[7.747s][info][gc,stats    ]   time in the pacing code. It usually happens when thread is de-scheduled while paced,
[7.747s][info][gc,stats    ]   OS takes longer to unblock the thread, or JVM experiences an STW pause.
[7.747s][info][gc,stats    ] 
[7.747s][info][gc,stats    ]   Higher delay would prevent application outpacing the GC, but it will hide the GC latencies
[7.747s][info][gc,stats    ]   from the STW pause times. Pacing affects the individual threads, and so it would also be
[7.747s][info][gc,stats    ]   invisible to the usual profiling tools, but would add up to end-to-end application latency.
[7.747s][info][gc,stats    ]   Raise max pacing delay with care.
[7.747s][info][gc,stats    ] 
[7.747s][info][gc,stats    ] Concurrent Reset               =    0.001 s (a =      824 us) (n =     1) (lvls, us =      822,      822,      822,      822,      824)
[7.747s][info][gc,stats    ] Pause Init Mark (G)            =    0.001 s (a =      839 us) (n =     1) (lvls, us =      838,      838,      838,      838,      839)
[7.747s][info][gc,stats    ] Pause Init Mark (N)            =    0.001 s (a =      647 us) (n =     1) (lvls, us =      646,      646,      646,      646,      647)
[7.747s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       26 us) (n =     1) (lvls, us =       26,       26,       26,       26,       26)
[7.747s][info][gc,stats    ] Concurrent Mark Roots          =    0.003 s (a =     2728 us) (n =     1) (lvls, us =     2715,     2715,     2715,     2715,     2728)
[7.747s][info][gc,stats    ]   CMR: <total>                 =    0.003 s (a =     2530 us) (n =     1) (lvls, us =     2520,     2520,     2520,     2520,     2530)
[7.747s][info][gc,stats    ]   CMR: Thread Roots            =    0.001 s (a =      843 us) (n =     1) (lvls, us =      842,      842,      842,      842,      843)
[7.747s][info][gc,stats    ]   CMR: VM Strong Roots         =    0.000 s (a =      479 us) (n =     1) (lvls, us =      479,      479,      479,      479,      479)
[7.747s][info][gc,stats    ]   CMR: CLDG Roots              =    0.001 s (a =     1208 us) (n =     1) (lvls, us =     1191,     1191,     1191,     1191,     1208)
[7.747s][info][gc,stats    ] Concurrent Marking             =    0.011 s (a =    11201 us) (n =     1) (lvls, us =    11133,    11133,    11133,    11133,    11201)
[7.747s][info][gc,stats    ] Pause Final Mark (G)           =    0.002 s (a =     1613 us) (n =     1) (lvls, us =     1602,     1602,     1602,     1602,     1613)
[7.747s][info][gc,stats    ] Pause Final Mark (N)           =    0.002 s (a =     1518 us) (n =     1) (lvls, us =     1504,     1504,     1504,     1504,     1518)
[7.747s][info][gc,stats    ]   Finish Mark                  =    0.001 s (a =     1223 us) (n =     1) (lvls, us =     1211,     1211,     1211,     1211,     1223)
[7.747s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       25 us) (n =     1) (lvls, us =       24,       24,       24,       24,       25)
[7.747s][info][gc,stats    ]   Choose Collection Set        =    0.000 s (a =      144 us) (n =     1) (lvls, us =      143,      143,      143,      143,      144)
[7.747s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       24 us) (n =     1) (lvls, us =       24,       24,       24,       24,       24)
[7.747s][info][gc,stats    ] Concurrent Thread Roots        =    0.000 s (a =      272 us) (n =     1) (lvls, us =      271,      271,      271,      271,      272)
[7.747s][info][gc,stats    ]   CTR: <total>                 =    0.000 s (a =      314 us) (n =     1) (lvls, us =      312,      312,      312,      312,      314)
[7.747s][info][gc,stats    ]   CTR: Thread Roots            =    0.000 s (a =      314 us) (n =     1) (lvls, us =      312,      312,      312,      312,      314)
[7.748s][info][gc,stats    ] Concurrent Weak References     =    0.000 s (a =      383 us) (n =     1) (lvls, us =      383,      383,      383,      383,      383)
[7.748s][info][gc,stats    ]   CWRF: <total>                =    0.000 s (a =      275 us) (n =     1) (lvls, us =      275,      275,      275,      275,      275)
[7.748s][info][gc,stats    ]   CWRF: Weak References        =    0.000 s (a =      275 us) (n =     1) (lvls, us =      275,      275,      275,      275,      275)
[7.748s][info][gc,stats    ] Concurrent Weak Roots          =    0.004 s (a =     3601 us) (n =     1) (lvls, us =     3594,     3594,     3594,     3594,     3601)
[7.748s][info][gc,stats    ]   Roots                        =    0.003 s (a =     2931 us) (n =     1) (lvls, us =     2930,     2930,     2930,     2930,     2931)
[7.748s][info][gc,stats    ]     CWR: <total>               =    0.003 s (a =     3110 us) (n =     1) (lvls, us =     3105,     3105,     3105,     3105,     3110)
[7.748s][info][gc,stats    ]     CWR: Code Cache Roots      =    0.001 s (a =      735 us) (n =     1) (lvls, us =      734,      734,      734,      734,      735)
[7.748s][info][gc,stats    ]     CWR: VM Weak Roots         =    0.002 s (a =     2364 us) (n =     1) (lvls, us =     2363,     2363,     2363,     2363,     2364)
[7.748s][info][gc,stats    ]     CWR: CLDG Roots            =    0.000 s (a =       11 us) (n =     1) (lvls, us =       11,       11,       11,       11,       11)
[7.748s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =      282 us) (n =     1) (lvls, us =      281,      281,      281,      281,      282)
[7.748s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =      103 us) (n =     1) (lvls, us =      102,      102,      102,      102,      103)
[7.748s][info][gc,stats    ] Concurrent Class Unloading     =    0.010 s (a =     9858 us) (n =     1) (lvls, us =     9844,     9844,     9844,     9844,     9858)
[7.748s][info][gc,stats    ]   Unlink Stale                 =    0.002 s (a =     2425 us) (n =     1) (lvls, us =     2422,     2422,     2422,     2422,     2425)
[7.748s][info][gc,stats    ]     System Dictionary          =    0.000 s (a =       88 us) (n =     1) (lvls, us =       88,       88,       88,       88,       88)
[7.748s][info][gc,stats    ]     Weak Class Links           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[7.748s][info][gc,stats    ]     Code Roots                 =    0.002 s (a =     2335 us) (n =     1) (lvls, us =     2324,     2324,     2324,     2324,     2335)
[7.748s][info][gc,stats    ]   Rendezvous                   =    0.002 s (a =     2111 us) (n =     1) (lvls, us =     2109,     2109,     2109,     2109,     2111)
[7.748s][info][gc,stats    ]   Purge Unlinked               =    0.005 s (a =     5210 us) (n =     1) (lvls, us =     5195,     5195,     5195,     5195,     5210)
[7.748s][info][gc,stats    ]     Code Roots                 =    0.005 s (a =     5195 us) (n =     1) (lvls, us =     5176,     5176,     5176,     5176,     5195)
[7.748s][info][gc,stats    ]     CLDG                       =    0.000 s (a =       15 us) (n =     1) (lvls, us =       15,       15,       15,       15,       15)
[7.748s][info][gc,stats    ]     Exception Caches           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[7.748s][info][gc,stats    ] Concurrent Strong Roots        =    0.002 s (a =     2387 us) (n =     1) (lvls, us =     2383,     2383,     2383,     2383,     2387)
[7.748s][info][gc,stats    ]   CSR: <total>                 =    0.002 s (a =     1582 us) (n =     1) (lvls, us =     1562,     1562,     1562,     1562,     1582)
[7.748s][info][gc,stats    ]   CSR: VM Strong Roots         =    0.000 s (a =       38 us) (n =     1) (lvls, us =       38,       38,       38,       38,       38)
[7.748s][info][gc,stats    ]   CSR: CLDG Roots              =    0.002 s (a =     1544 us) (n =     1) (lvls, us =     1543,     1543,     1543,     1543,     1544)
[7.748s][info][gc,stats    ] Concurrent Evacuation          =    0.018 s (a =    17977 us) (n =     1) (lvls, us =    17969,    17969,    17969,    17969,    17977)
[7.748s][info][gc,stats    ] Pause Init Update Refs (G)     =    0.000 s (a =      109 us) (n =     1) (lvls, us =      107,      107,      107,      107,      109)
[7.748s][info][gc,stats    ] Pause Init Update Refs (N)     =    0.000 s (a =       58 us) (n =     1) (lvls, us =       58,       58,       58,       58,       58)
[7.748s][info][gc,stats    ]   Manage GCLABs                =    0.000 s (a =        5 us) (n =     1) (lvls, us =        5,        5,        5,        5,        5)
[7.748s][info][gc,stats    ] Concurrent Update Refs         =    0.005 s (a =     5237 us) (n =     1) (lvls, us =     5234,     5234,     5234,     5234,     5237)
[7.748s][info][gc,stats    ] Concurrent Update Thread Roots =    0.000 s (a =      327 us) (n =     1) (lvls, us =      326,      326,      326,      326,      327)
[7.748s][info][gc,stats    ] Pause Final Update Refs (G)    =    0.000 s (a =      184 us) (n =     1) (lvls, us =      184,      184,      184,      184,      184)
[7.748s][info][gc,stats    ] Pause Final Update Refs (N)    =    0.000 s (a =       90 us) (n =     1) (lvls, us =       90,       90,       90,       90,       90)
[7.748s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       19 us) (n =     1) (lvls, us =       19,       19,       19,       19,       19)
[7.748s][info][gc,stats    ]   Trash Collection Set         =    0.000 s (a =        4 us) (n =     1) (lvls, us =        4,        4,        4,        4,        4)
[7.748s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       20 us) (n =     1) (lvls, us =       20,       20,       20,       20,       20)
[7.748s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =      112 us) (n =     1) (lvls, us =      111,      111,      111,      111,      112)
[7.748s][info][gc,stats    ] 
[7.748s][info][gc,stats    ] 
[7.748s][info][gc,stats    ] Under allocation pressure, concurrent cycles may cancel, and either continue cycle
[7.748s][info][gc,stats    ] under stop-the-world pause or result in stop-the-world Full GC. Increase heap size,
[7.749s][info][gc,stats    ] tune GC heuristics, set more aggressive pacing delay, or lower allocation rate
[7.749s][info][gc,stats    ] to avoid Degenerated and Full GC cycles.
[7.749s][info][gc,stats    ] 
[7.749s][info][gc,stats    ]     1 successful concurrent GCs
[7.749s][info][gc,stats    ]       0 invoked explicitly
[7.749s][info][gc,stats    ]       0 invoked implicitly
[7.749s][info][gc,stats    ] 
[7.749s][info][gc,stats    ]     0 Degenerated GCs
[7.749s][info][gc,stats    ]       0 caused by allocation failure
[7.749s][info][gc,stats    ]       0 upgraded to Full GC
[7.749s][info][gc,stats    ] 
[7.749s][info][gc,stats    ]     0 Full GCs
[7.749s][info][gc,stats    ]       0 invoked explicitly
[7.749s][info][gc,stats    ]       0 invoked implicitly
[7.749s][info][gc,stats    ]       0 caused by allocation failure
[7.749s][info][gc,stats    ]       0 upgraded from Degenerated GC
[7.749s][info][gc,stats    ] 
[7.749s][info][gc,stats    ] 
