[0.006s][info][gc] Heuristics ergonomically sets -XX:+ExplicitGCInvokesConcurrent
[0.006s][info][gc] Heuristics ergonomically sets -XX:+ShenandoahImplicitGCInvokesConcurrent
[0.007s][info][gc] Using Shenandoah
[0.008s][info][gc,ergo] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[0.008s][info][gc,init] Version: 21.0.7+6-Ubuntu-0ubuntu122.04 (release)
[0.008s][info][gc,init] CPUs: 4 total, 4 available
[0.008s][info][gc,init] Memory: 7937M
[0.008s][info][gc,init] Large Page Support: Disabled
[0.008s][info][gc,init] NUMA Support: Disabled
[0.008s][info][gc,init] Compressed Oops: Enabled (32-bit)
[0.008s][info][gc,init] Heap Min Capacity: 6656K
[0.008s][info][gc,init] Heap Initial Capacity: 127488K
[0.008s][info][gc,init] Heap Max Capacity: 2032128K
[0.008s][info][gc,init] Pre-touch: Disabled
[0.008s][info][gc,init] Mode: Snapshot-At-The-Beginning (SATB)
[0.008s][info][gc,init] Heuristics: Adaptive
[0.008s][info][gc,init] Heap Region Count: 3969
[0.008s][info][gc,init] Heap Region Size: 512K
[0.009s][info][gc,init] TLAB Size Max: 512K
[0.009s][info][gc,init] Humongous Object Threshold: 512K
[0.009s][info][gc,init] Parallel Workers: 8
[0.009s][info][gc,init] Concurrent Workers: 2
[0.020s][info][gc,metaspace] CDS archive(s) mapped at: [0x00007fb7cb000000-0x00007fb7cbc97000-0x00007fb7cbc97000), size 13201408, SharedBaseAddress: 0x00007fb7cb000000, ArchiveRelocationMode: 1.
[0.020s][info][gc,metaspace] Compressed class space mapped at: 0x00007fb7cc000000-0x00007fb80c000000, reserved size: 1073741824
[0.020s][info][gc,metaspace] Narrow klass base: 0x00007fb7cb000000, Narrow klass shift: 0, Narrow klass range: 0x100000000
[1.285s][info][gc          ] Trigger: Metadata GC Threshold
[1.285s][info][gc,ergo     ] Free: 1790M, Max: 512K regular, 1790M humongous, Frag: 0% external, 0% internal; Reserve: 101888K, Max: 512K
[1.285s][info][gc,start    ] GC(0) Concurrent reset
[1.286s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reset
[1.286s][info][gc,ergo     ] GC(0) Pacer for Reset. Non-Taxable: 1984M
[1.286s][info][gc          ] GC(0) Concurrent reset 0.417ms
[1.286s][info][gc,start    ] GC(0) Pause Init Mark (unload classes)
[1.287s][info][gc,task     ] GC(0) Using 8 of 8 workers for init marking
[1.287s][info][gc,ergo     ] GC(0) Pacer for Mark. Expected Live: 198M, Free: 1790M, Non-Taxable: 179M, Alloc Tax Rate: 0.1x
[1.287s][info][gc          ] GC(0) Pause Init Mark (unload classes) 0.730ms
[1.287s][info][gc,start    ] GC(0) Concurrent marking roots
[1.287s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking roots
[1.289s][info][gc          ] GC(0) Concurrent marking roots 2.254ms
[1.289s][info][gc,start    ] GC(0) Concurrent marking (unload classes)
[1.289s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking
[1.299s][info][gc          ] GC(0) Concurrent marking (unload classes) 10.018ms
[1.299s][info][gc,start    ] GC(0) Pause Final Mark (unload classes)
[1.299s][info][gc,task     ] GC(0) Using 8 of 8 workers for final marking
[1.300s][info][gc,ergo     ] GC(0) Adaptive CSet Selection. Target Free: 281M, Actual Free: 1894M, Max CSet: 84672K, Min Garbage: 0B
[1.300s][info][gc,ergo     ] GC(0) Collectable Garbage: 81068K (98%), Immediate: 5343K (6%), CSet: 75724K (92%)
[1.300s][info][gc,ergo     ] GC(0) Pacer for Evacuation. Used CSet: 83456K, Free: 1795M, Non-Taxable: 179M, Alloc Tax Rate: 1.1x
[1.300s][info][gc          ] GC(0) Pause Final Mark (unload classes) 0.358ms
[1.300s][info][gc,start    ] GC(0) Concurrent thread roots
[1.300s][info][gc,task     ] GC(0) Using 2 of 8 workers for Concurrent thread roots
[1.301s][info][gc          ] GC(0) Concurrent thread roots 0.749ms
[1.301s][info][gc,start    ] GC(0) Concurrent weak references
[1.301s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak references
[1.301s][info][gc,ref      ] GC(0) Encountered references: Soft: 3955, Weak: 2131, Final: 20, Phantom: 794
[1.301s][info][gc,ref      ] GC(0) Discovered  references: Soft: 0, Weak: 1281, Final: 20, Phantom: 499
[1.301s][info][gc,ref      ] GC(0) Enqueued    references: Soft: 0, Weak: 480, Final: 0, Phantom: 315
[1.301s][info][gc          ] GC(0) Concurrent weak references 0.316ms
[1.301s][info][gc,start    ] GC(0) Concurrent weak roots
[1.301s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak root
[1.306s][info][gc          ] GC(0) Concurrent weak roots 5.197ms
[1.306s][info][gc,start    ] GC(0) Concurrent cleanup
[1.306s][info][gc          ] GC(0) Concurrent cleanup 96M->91M(125M) 0.085ms
[1.306s][info][gc,ergo     ] GC(0) Free: 1794M, Max: 512K regular, 1788M humongous, Frag: 1% external, 0% internal; Reserve: 101039K, Max: 512K
[1.306s][info][gc,start    ] GC(0) Concurrent class unloading
[1.306s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent class unloading
[1.311s][info][gc          ] GC(0) Concurrent class unloading 5.098ms
[1.311s][info][gc,start    ] GC(0) Concurrent strong roots
[1.311s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent strong root
[1.313s][info][gc          ] GC(0) Concurrent strong roots 1.204ms
[1.313s][info][gc,start    ] GC(0) Concurrent evacuation
[1.313s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent evacuation
[1.319s][info][gc          ] GC(0) Concurrent evacuation 5.965ms
[1.319s][info][gc,start    ] GC(0) Pause Init Update Refs
[1.319s][info][gc,ergo     ] GC(0) Pacer for Update Refs. Used: 100M, Free: 1794M, Non-Taxable: 179M, Alloc Tax Rate: 1.1x
[1.319s][info][gc          ] GC(0) Pause Init Update Refs 0.027ms
[1.319s][info][gc,start    ] GC(0) Concurrent update references
[1.319s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reference update
[1.324s][info][gc          ] GC(0) Concurrent update references 5.197ms
[1.324s][info][gc,start    ] GC(0) Concurrent update thread roots
[1.324s][info][gc          ] GC(0) Concurrent update thread roots 0.261ms
[1.324s][info][gc,start    ] GC(0) Pause Final Update Refs
[1.324s][info][gc,task     ] GC(0) Using 8 of 8 workers for final reference update
[1.324s][info][gc          ] GC(0) Pause Final Update Refs 0.070ms
[1.324s][info][gc,start    ] GC(0) Concurrent cleanup
[1.325s][info][gc          ] GC(0) Concurrent cleanup 100M->19M(134M) 0.070ms
[1.325s][info][gc,ergo     ] Free: 1865M, Max: 512K regular, 1779M humongous, Frag: 5% external, 0% internal; Reserve: 101888K, Max: 512K
[1.325s][info][gc,stats    ] 
[1.325s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[1.325s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[1.325s][info][gc,stats    ] 
[1.325s][info][gc,stats    ] Concurrent Reset                    463 us
[1.325s][info][gc,stats    ] Pause Init Mark (G)                1030 us
[1.325s][info][gc,stats    ] Pause Init Mark (N)                 765 us
[1.325s][info][gc,stats    ]   Update Region States               32 us
[1.325s][info][gc,stats    ] Concurrent Mark Roots              2285 us, parallelism: 1.59x
[1.325s][info][gc,stats    ]   CMR: <total>                     3642 us
[1.325s][info][gc,stats    ]   CMR: Thread Roots                1095 us, workers (us): 1095,   0, ---, ---, ---, ---, ---, ---, 
[1.325s][info][gc,stats    ]   CMR: VM Strong Roots              677 us, workers (us): 400, 277, ---, ---, ---, ---, ---, ---, 
[1.325s][info][gc,stats    ]   CMR: CLDG Roots                  1870 us, workers (us): ---, 1870, ---, ---, ---, ---, ---, ---, 
[1.325s][info][gc,stats    ] Concurrent Marking                10045 us
[1.325s][info][gc,stats    ] Pause Final Mark (G)                508 us
[1.325s][info][gc,stats    ] Pause Final Mark (N)                380 us
[1.325s][info][gc,stats    ]   Finish Mark                        77 us
[1.325s][info][gc,stats    ]   Update Region States               24 us
[1.325s][info][gc,stats    ]   Choose Collection Set             117 us
[1.325s][info][gc,stats    ]   Rebuild Free Set                   28 us
[1.325s][info][gc,stats    ] Concurrent Thread Roots             760 us, parallelism: 1.30x
[1.325s][info][gc,stats    ]   CTR: <total>                      986 us
[1.325s][info][gc,stats    ]   CTR: Thread Roots                 986 us, workers (us): 283, 702, ---, ---, ---, ---, ---, ---, 
[1.325s][info][gc,stats    ] Concurrent Weak References          325 us, parallelism: 0.94x
[1.325s][info][gc,stats    ]   CWRF: <total>                     304 us
[1.325s][info][gc,stats    ]   CWRF: Weak References             304 us, workers (us):  69, 235, ---, ---, ---, ---, ---, ---, 
[1.325s][info][gc,stats    ] Concurrent Weak Roots              5226 us
[1.325s][info][gc,stats    ]   Roots                            1639 us, parallelism: 1.79x
[1.325s][info][gc,stats    ]     CWR: <total>                   2926 us
[1.325s][info][gc,stats    ]     CWR: Code Cache Roots           713 us, workers (us): 199, 514, ---, ---, ---, ---, ---, ---, 
[1.325s][info][gc,stats    ]     CWR: VM Weak Roots             2202 us, workers (us): 1368, 834, ---, ---, ---, ---, ---, ---, 
[1.325s][info][gc,stats    ]     CWR: CLDG Roots                  11 us, workers (us): ---,  11, ---, ---, ---, ---, ---, ---, 
[1.325s][info][gc,stats    ]   Rendezvous                       3538 us
[1.325s][info][gc,stats    ] Concurrent Cleanup                   97 us
[1.325s][info][gc,stats    ] Concurrent Class Unloading         5118 us
[1.325s][info][gc,stats    ]   Unlink Stale                     1694 us
[1.325s][info][gc,stats    ]     System Dictionary                40 us
[1.325s][info][gc,stats    ]     Weak Class Links                  0 us
[1.325s][info][gc,stats    ]     Code Roots                     1653 us
[1.325s][info][gc,stats    ]   Rendezvous                        278 us
[1.325s][info][gc,stats    ]   Purge Unlinked                   3101 us
[1.325s][info][gc,stats    ]     Code Roots                     3090 us
[1.325s][info][gc,stats    ]     CLDG                             10 us
[1.325s][info][gc,stats    ]     Exception Caches                  0 us
[1.325s][info][gc,stats    ] Concurrent Strong Roots            1219 us, parallelism: 0.93x
[1.325s][info][gc,stats    ]   CSR: <total>                     1133 us
[1.325s][info][gc,stats    ]   CSR: VM Strong Roots               42 us, workers (us):  36,   5, ---, ---, ---, ---, ---, ---, 
[1.325s][info][gc,stats    ]   CSR: CLDG Roots                  1092 us, workers (us): 1092, ---, ---, ---, ---, ---, ---, ---, 
[1.325s][info][gc,stats    ] Concurrent Evacuation              5992 us
[1.325s][info][gc,stats    ] Pause Init Update Refs (G)          136 us
[1.325s][info][gc,stats    ] Pause Init Update Refs (N)           33 us
[1.325s][info][gc,stats    ]   Manage GCLABs                       4 us
[1.325s][info][gc,stats    ] Concurrent Update Refs             5244 us
[1.325s][info][gc,stats    ] Concurrent Update Thread Roots      271 us
[1.325s][info][gc,stats    ] Pause Final Update Refs (G)         253 us
[1.325s][info][gc,stats    ] Pause Final Update Refs (N)          80 us
[1.325s][info][gc,stats    ]   Update Region States               18 us
[1.325s][info][gc,stats    ]   Trash Collection Set                4 us
[1.325s][info][gc,stats    ]   Rebuild Free Set                   19 us
[1.325s][info][gc,stats    ] Concurrent Cleanup                   80 us
[1.325s][info][gc,stats    ] 
[1.325s][info][gc,stats    ] Allocation pacing accrued:
[1.325s][info][gc,stats    ]       0 of  1317 ms (  0.0%): <total>
[1.325s][info][gc,stats    ]       0 of  1317 ms (  0.0%): <average total>
[1.325s][info][gc,stats    ] 
[1.325s][info][gc,metaspace] Metaspace: 21206K(21568K)->21444K(21824K) NonClass: 18869K(19072K)->19067K(19264K) Class: 2336K(2496K)->2377K(2560K)
[1.325s][info][gc,ergo     ] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[7.609s][info][gc          ] Cancelling GC: Stopping VM
[7.609s][info][gc,heap,exit] Heap
[7.609s][info][gc,heap,exit] Shenandoah Heap
[7.609s][info][gc,heap,exit]  1984M max, 1984M soft max, 134M committed, 38942K used
[7.609s][info][gc,heap,exit]  3969 x 512K regions
[7.609s][info][gc,heap,exit] Status: cancelled
[7.609s][info][gc,heap,exit] Reserved region:
[7.609s][info][gc,heap,exit]  - [0x0000000083f80000, 0x0000000100000000) 
[7.610s][info][gc,heap,exit] Collection set:
[7.610s][info][gc,heap,exit]  - map (vanilla): 0x000000000001107f
[7.610s][info][gc,heap,exit]  - map (biased):  0x0000000000010000
[7.610s][info][gc,heap,exit] 
[7.610s][info][gc,heap,exit]  Metaspace       used 25413K, committed 25792K, reserved 1114112K
[7.610s][info][gc,heap,exit]   class space    used 2925K, committed 3136K, reserved 1048576K
[7.610s][info][gc,stats    ] 
[7.610s][info][gc,stats    ] GC STATISTICS:
[7.610s][info][gc,stats    ]   "(G)" (gross) pauses include VM time: time to notify and block threads, do the pre-
[7.610s][info][gc,stats    ]         and post-safepoint housekeeping. Use -Xlog:safepoint+stats to dissect.
[7.610s][info][gc,stats    ]   "(N)" (net) pauses are the times spent in the actual GC code.
[7.610s][info][gc,stats    ]   "a" is average time for each phase, look at levels to see if average makes sense.
[7.610s][info][gc,stats    ]   "lvls" are quantiles: 0% (minimum), 25%, 50% (median), 75%, 100% (maximum).
[7.610s][info][gc,stats    ] 
[7.610s][info][gc,stats    ]   All times are wall-clock times, except per-root-class counters, that are sum over
[7.610s][info][gc,stats    ]   all workers. Dividing the <total> over the root stage time estimates parallelism.
[7.610s][info][gc,stats    ] 
[7.610s][info][gc,stats    ]   Pacing delays are measured from entering the pacing code till exiting it. Therefore,
[7.610s][info][gc,stats    ]   observed pacing delays may be higher than the threshold when paced thread spent more
[7.610s][info][gc,stats    ]   time in the pacing code. It usually happens when thread is de-scheduled while paced,
[7.610s][info][gc,stats    ]   OS takes longer to unblock the thread, or JVM experiences an STW pause.
[7.610s][info][gc,stats    ] 
[7.610s][info][gc,stats    ]   Higher delay would prevent application outpacing the GC, but it will hide the GC latencies
[7.610s][info][gc,stats    ]   from the STW pause times. Pacing affects the individual threads, and so it would also be
[7.610s][info][gc,stats    ]   invisible to the usual profiling tools, but would add up to end-to-end application latency.
[7.610s][info][gc,stats    ]   Raise max pacing delay with care.
[7.610s][info][gc,stats    ] 
[7.610s][info][gc,stats    ] Concurrent Reset               =    0.000 s (a =      463 us) (n =     1) (lvls, us =      463,      463,      463,      463,      463)
[7.610s][info][gc,stats    ] Pause Init Mark (G)            =    0.001 s (a =     1030 us) (n =     1) (lvls, us =     1016,     1016,     1016,     1016,     1030)
[7.610s][info][gc,stats    ] Pause Init Mark (N)            =    0.001 s (a =      765 us) (n =     1) (lvls, us =      764,      764,      764,      764,      765)
[7.610s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       32 us) (n =     1) (lvls, us =       32,       32,       32,       32,       32)
[7.610s][info][gc,stats    ] Concurrent Mark Roots          =    0.002 s (a =     2285 us) (n =     1) (lvls, us =     2285,     2285,     2285,     2285,     2285)
[7.610s][info][gc,stats    ]   CMR: <total>                 =    0.004 s (a =     3642 us) (n =     1) (lvls, us =     3633,     3633,     3633,     3633,     3642)
[7.610s][info][gc,stats    ]   CMR: Thread Roots            =    0.001 s (a =     1095 us) (n =     1) (lvls, us =     1094,     1094,     1094,     1094,     1095)
[7.610s][info][gc,stats    ]   CMR: VM Strong Roots         =    0.001 s (a =      677 us) (n =     1) (lvls, us =      676,      676,      676,      676,      677)
[7.610s][info][gc,stats    ]   CMR: CLDG Roots              =    0.002 s (a =     1870 us) (n =     1) (lvls, us =     1855,     1855,     1855,     1855,     1870)
[7.610s][info][gc,stats    ] Concurrent Marking             =    0.010 s (a =    10045 us) (n =     1) (lvls, us =     9961,     9961,     9961,     9961,    10045)
[7.610s][info][gc,stats    ] Pause Final Mark (G)           =    0.001 s (a =      508 us) (n =     1) (lvls, us =      508,      508,      508,      508,      508)
[7.610s][info][gc,stats    ] Pause Final Mark (N)           =    0.000 s (a =      380 us) (n =     1) (lvls, us =      379,      379,      379,      379,      380)
[7.610s][info][gc,stats    ]   Finish Mark                  =    0.000 s (a =       77 us) (n =     1) (lvls, us =       77,       77,       77,       77,       77)
[7.610s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       24 us) (n =     1) (lvls, us =       24,       24,       24,       24,       24)
[7.610s][info][gc,stats    ]   Choose Collection Set        =    0.000 s (a =      117 us) (n =     1) (lvls, us =      117,      117,      117,      117,      117)
[7.610s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       28 us) (n =     1) (lvls, us =       28,       28,       28,       28,       28)
[7.610s][info][gc,stats    ] Concurrent Thread Roots        =    0.001 s (a =      760 us) (n =     1) (lvls, us =      758,      758,      758,      758,      760)
[7.610s][info][gc,stats    ]   CTR: <total>                 =    0.001 s (a =      986 us) (n =     1) (lvls, us =      984,      984,      984,      984,      986)
[7.610s][info][gc,stats    ]   CTR: Thread Roots            =    0.001 s (a =      986 us) (n =     1) (lvls, us =      984,      984,      984,      984,      986)
[7.610s][info][gc,stats    ] Concurrent Weak References     =    0.000 s (a =      325 us) (n =     1) (lvls, us =      324,      324,      324,      324,      325)
[7.610s][info][gc,stats    ]   CWRF: <total>                =    0.000 s (a =      304 us) (n =     1) (lvls, us =      303,      303,      303,      303,      304)
[7.610s][info][gc,stats    ]   CWRF: Weak References        =    0.000 s (a =      304 us) (n =     1) (lvls, us =      303,      303,      303,      303,      304)
[7.610s][info][gc,stats    ] Concurrent Weak Roots          =    0.005 s (a =     5226 us) (n =     1) (lvls, us =     5215,     5215,     5215,     5215,     5226)
[7.610s][info][gc,stats    ]   Roots                        =    0.002 s (a =     1639 us) (n =     1) (lvls, us =     1621,     1621,     1621,     1621,     1639)
[7.610s][info][gc,stats    ]     CWR: <total>               =    0.003 s (a =     2926 us) (n =     1) (lvls, us =     2910,     2910,     2910,     2910,     2926)
[7.610s][info][gc,stats    ]     CWR: Code Cache Roots      =    0.001 s (a =      713 us) (n =     1) (lvls, us =      711,      711,      711,      711,      713)
[7.610s][info][gc,stats    ]     CWR: VM Weak Roots         =    0.002 s (a =     2202 us) (n =     1) (lvls, us =     2188,     2188,     2188,     2188,     2202)
[7.610s][info][gc,stats    ]     CWR: CLDG Roots            =    0.000 s (a =       11 us) (n =     1) (lvls, us =       11,       11,       11,       11,       11)
[7.610s][info][gc,stats    ]   Rendezvous                   =    0.004 s (a =     3538 us) (n =     1) (lvls, us =     3535,     3535,     3535,     3535,     3538)
[7.610s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =       97 us) (n =     1) (lvls, us =       96,       96,       96,       96,       97)
[7.610s][info][gc,stats    ] Concurrent Class Unloading     =    0.005 s (a =     5118 us) (n =     1) (lvls, us =     5117,     5117,     5117,     5117,     5118)
[7.610s][info][gc,stats    ]   Unlink Stale                 =    0.002 s (a =     1694 us) (n =     1) (lvls, us =     1680,     1680,     1680,     1680,     1694)
[7.610s][info][gc,stats    ]     System Dictionary          =    0.000 s (a =       40 us) (n =     1) (lvls, us =       40,       40,       40,       40,       40)
[7.610s][info][gc,stats    ]     Weak Class Links           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[7.610s][info][gc,stats    ]     Code Roots                 =    0.002 s (a =     1653 us) (n =     1) (lvls, us =     1641,     1641,     1641,     1641,     1653)
[7.610s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =      278 us) (n =     1) (lvls, us =      277,      277,      277,      277,      278)
[7.610s][info][gc,stats    ]   Purge Unlinked               =    0.003 s (a =     3101 us) (n =     1) (lvls, us =     3086,     3086,     3086,     3086,     3101)
[7.610s][info][gc,stats    ]     Code Roots                 =    0.003 s (a =     3090 us) (n =     1) (lvls, us =     3086,     3086,     3086,     3086,     3090)
[7.610s][info][gc,stats    ]     CLDG                       =    0.000 s (a =       10 us) (n =     1) (lvls, us =       10,       10,       10,       10,       10)
[7.610s][info][gc,stats    ]     Exception Caches           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[7.610s][info][gc,stats    ] Concurrent Strong Roots        =    0.001 s (a =     1219 us) (n =     1) (lvls, us =     1211,     1211,     1211,     1211,     1219)
[7.610s][info][gc,stats    ]   CSR: <total>                 =    0.001 s (a =     1133 us) (n =     1) (lvls, us =     1133,     1133,     1133,     1133,     1133)
[7.610s][info][gc,stats    ]   CSR: VM Strong Roots         =    0.000 s (a =       42 us) (n =     1) (lvls, us =       41,       41,       41,       41,       42)
[7.610s][info][gc,stats    ]   CSR: CLDG Roots              =    0.001 s (a =     1092 us) (n =     1) (lvls, us =     1074,     1074,     1074,     1074,     1092)
[7.610s][info][gc,stats    ] Concurrent Evacuation          =    0.006 s (a =     5992 us) (n =     1) (lvls, us =     5977,     5977,     5977,     5977,     5992)
[7.610s][info][gc,stats    ] Pause Init Update Refs (G)     =    0.000 s (a =      136 us) (n =     1) (lvls, us =      135,      135,      135,      135,      136)
[7.610s][info][gc,stats    ] Pause Init Update Refs (N)     =    0.000 s (a =       33 us) (n =     1) (lvls, us =       33,       33,       33,       33,       33)
[7.610s][info][gc,stats    ]   Manage GCLABs                =    0.000 s (a =        4 us) (n =     1) (lvls, us =        4,        4,        4,        4,        4)
[7.610s][info][gc,stats    ] Concurrent Update Refs         =    0.005 s (a =     5244 us) (n =     1) (lvls, us =     5234,     5234,     5234,     5234,     5244)
[7.611s][info][gc,stats    ] Concurrent Update Thread Roots =    0.000 s (a =      271 us) (n =     1) (lvls, us =      270,      270,      270,      270,      271)
[7.611s][info][gc,stats    ] Pause Final Update Refs (G)    =    0.000 s (a =      253 us) (n =     1) (lvls, us =      252,      252,      252,      252,      253)
[7.611s][info][gc,stats    ] Pause Final Update Refs (N)    =    0.000 s (a =       80 us) (n =     1) (lvls, us =       80,       80,       80,       80,       80)
[7.611s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       18 us) (n =     1) (lvls, us =       18,       18,       18,       18,       18)
[7.611s][info][gc,stats    ]   Trash Collection Set         =    0.000 s (a =        4 us) (n =     1) (lvls, us =        4,        4,        4,        4,        4)
[7.611s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       19 us) (n =     1) (lvls, us =       19,       19,       19,       19,       19)
[7.611s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =       80 us) (n =     1) (lvls, us =       79,       79,       79,       79,       80)
[7.611s][info][gc,stats    ] 
[7.611s][info][gc,stats    ] 
[7.611s][info][gc,stats    ] Under allocation pressure, concurrent cycles may cancel, and either continue cycle
[7.611s][info][gc,stats    ] under stop-the-world pause or result in stop-the-world Full GC. Increase heap size,
[7.611s][info][gc,stats    ] tune GC heuristics, set more aggressive pacing delay, or lower allocation rate
[7.611s][info][gc,stats    ] to avoid Degenerated and Full GC cycles.
[7.611s][info][gc,stats    ] 
[7.611s][info][gc,stats    ]     1 successful concurrent GCs
[7.611s][info][gc,stats    ]       0 invoked explicitly
[7.611s][info][gc,stats    ]       0 invoked implicitly
[7.611s][info][gc,stats    ] 
[7.611s][info][gc,stats    ]     0 Degenerated GCs
[7.611s][info][gc,stats    ]       0 caused by allocation failure
[7.611s][info][gc,stats    ]       0 upgraded to Full GC
[7.611s][info][gc,stats    ] 
[7.611s][info][gc,stats    ]     0 Full GCs
[7.611s][info][gc,stats    ]       0 invoked explicitly
[7.611s][info][gc,stats    ]       0 invoked implicitly
[7.611s][info][gc,stats    ]       0 caused by allocation failure
[7.611s][info][gc,stats    ]       0 upgraded from Degenerated GC
[7.611s][info][gc,stats    ] 
[7.611s][info][gc,stats    ] 
