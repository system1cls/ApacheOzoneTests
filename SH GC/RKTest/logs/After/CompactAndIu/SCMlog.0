[0.011s][info][gc] Heuristics ergonomically sets -XX:+ExplicitGCInvokesConcurrent
[0.011s][info][gc] Heuristics ergonomically sets -XX:+ShenandoahImplicitGCInvokesConcurrent
[0.011s][info][gc] Using Shenandoah
[0.011s][info][gc] Heuristics ergonomically sets -XX:+ShenandoahAlwaysClearSoftRefs
[0.011s][info][gc] Heuristics ergonomically sets -XX:ShenandoahAllocationThreshold=10
[0.011s][info][gc] Heuristics ergonomically sets -XX:ShenandoahImmediateThreshold=100
[0.011s][info][gc] Heuristics ergonomically sets -XX:ShenandoahUncommitDelay=1000
[0.011s][info][gc] Heuristics ergonomically sets -XX:ShenandoahGuaranteedGCInterval=30000
[0.011s][info][gc] Heuristics ergonomically sets -XX:ShenandoahGarbageThreshold=10
[0.012s][info][gc,ergo] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[0.012s][info][gc,init] Version: 21.0.7+6-Ubuntu-0ubuntu122.04 (release)
[0.012s][info][gc,init] CPUs: 4 total, 4 available
[0.012s][info][gc,init] Memory: 7937M
[0.012s][info][gc,init] Large Page Support: Disabled
[0.012s][info][gc,init] NUMA Support: Disabled
[0.012s][info][gc,init] Compressed Oops: Enabled (32-bit)
[0.012s][info][gc,init] Heap Min Capacity: 6656K
[0.012s][info][gc,init] Heap Initial Capacity: 127488K
[0.012s][info][gc,init] Heap Max Capacity: 2032128K
[0.012s][info][gc,init] Pre-touch: Disabled
[0.012s][info][gc,init] Mode: Incremental-Update (IU)
[0.012s][info][gc,init] Heuristics: Compact
[0.012s][info][gc,init] Heap Region Count: 3969
[0.012s][info][gc,init] Heap Region Size: 512K
[0.012s][info][gc,init] TLAB Size Max: 512K
[0.012s][info][gc,init] Humongous Object Threshold: 512K
[0.012s][info][gc,init] Parallel Workers: 8
[0.012s][info][gc,init] Concurrent Workers: 2
[0.021s][info][gc,metaspace] CDS archive(s) mapped at: [0x00007f9e7b000000-0x00007f9e7bc97000-0x00007f9e7bc97000), size 13201408, SharedBaseAddress: 0x00007f9e7b000000, ArchiveRelocationMode: 1.
[0.021s][info][gc,metaspace] Compressed class space mapped at: 0x00007f9e7c000000-0x00007f9ebc000000, reserved size: 1073741824
[0.021s][info][gc,metaspace] Narrow klass base: 0x00007f9e7b000000, Narrow klass shift: 0, Narrow klass range: 0x100000000
[1.040s][info][gc,start    ] Concurrent uncommit
[1.040s][info][gc          ] Concurrent uncommit 68M->68M(69M) 0.604ms
[1.392s][info][gc          ] Trigger: Metadata GC Threshold
[1.392s][info][gc,ergo     ] Free: 1789M, Max: 512K regular, 1789M humongous, Frag: 0% external, 0% internal; Reserve: 101888K, Max: 512K
[1.392s][info][gc,start    ] GC(0) Concurrent reset
[1.392s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reset
[1.392s][info][gc,ergo     ] GC(0) Pacer for Reset. Non-Taxable: 1984M
[1.392s][info][gc          ] GC(0) Concurrent reset 0.353ms
[1.393s][info][gc,start    ] GC(0) Pause Init Mark (unload classes)
[1.393s][info][gc,task     ] GC(0) Using 8 of 8 workers for init marking
[1.393s][info][gc,ref      ] GC(0) Clearing All SoftReferences
[1.393s][info][gc,ergo     ] GC(0) Pacer for Mark. Expected Live: 198M, Free: 1789M, Non-Taxable: 178M, Alloc Tax Rate: 0.1x
[1.393s][info][gc          ] GC(0) Pause Init Mark (unload classes) 0.407ms
[1.396s][info][gc,start    ] GC(0) Concurrent marking roots
[1.396s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking roots
[1.397s][info][gc          ] GC(0) Concurrent marking roots 1.480ms
[1.397s][info][gc,start    ] GC(0) Concurrent marking (unload classes)
[1.397s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking
[1.407s][info][gc          ] GC(0) Concurrent marking (unload classes) 10.069ms
[1.408s][info][gc,start    ] GC(0) Pause Final Mark (unload classes)
[1.408s][info][gc,task     ] GC(0) Using 8 of 8 workers for final marking
[1.408s][info][gc,ergo     ] GC(0) CSet Selection. Actual Free: 1893M, Max CSet: 1420M
[1.408s][info][gc,ergo     ] GC(0) Collectable Garbage: 83958K (99%), Immediate: 5343K (6%), CSet: 78614K (93%)
[1.408s][info][gc,ergo     ] GC(0) Pacer for Evacuation. Used CSet: 88576K, Free: 1794M, Non-Taxable: 179M, Alloc Tax Rate: 1.1x
[1.408s][info][gc          ] GC(0) Pause Final Mark (unload classes) 0.436ms
[1.408s][info][gc,start    ] GC(0) Concurrent thread roots
[1.408s][info][gc,task     ] GC(0) Using 2 of 8 workers for Concurrent thread roots
[1.408s][info][gc          ] GC(0) Concurrent thread roots 0.144ms
[1.408s][info][gc,start    ] GC(0) Concurrent weak references
[1.408s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak references
[1.409s][info][gc,ref      ] GC(0) Encountered references: Soft: 3900, Weak: 2145, Final: 20, Phantom: 800
[1.409s][info][gc,ref      ] GC(0) Discovered  references: Soft: 1728, Weak: 1386, Final: 20, Phantom: 783
[1.409s][info][gc,ref      ] GC(0) Enqueued    references: Soft: 1607, Weak: 541, Final: 0, Phantom: 321
[1.409s][info][gc          ] GC(0) Concurrent weak references 0.701ms
[1.409s][info][gc,start    ] GC(0) Concurrent weak roots
[1.409s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak root
[1.414s][info][gc          ] GC(0) Concurrent weak roots 4.863ms
[1.414s][info][gc,start    ] GC(0) Concurrent cleanup
[1.414s][info][gc          ] GC(0) Concurrent cleanup 97M->92M(98M) 0.088ms
[1.414s][info][gc,ergo     ] GC(0) Free: 1794M, Max: 512K regular, 1788M humongous, Frag: 1% external, 0% internal; Reserve: 100329K, Max: 512K
[1.414s][info][gc,start    ] GC(0) Concurrent class unloading
[1.414s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent class unloading
[1.422s][info][gc          ] GC(0) Concurrent class unloading 7.862ms
[1.422s][info][gc,start    ] GC(0) Concurrent strong roots
[1.422s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent strong root
[1.423s][info][gc          ] GC(0) Concurrent strong roots 1.165ms
[1.423s][info][gc,start    ] GC(0) Concurrent evacuation
[1.423s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent evacuation
[1.432s][info][gc          ] GC(0) Concurrent evacuation 8.616ms
[1.432s][info][gc,start    ] GC(0) Pause Init Update Refs
[1.432s][info][gc,ergo     ] GC(0) Pacer for Update Refs. Used: 102M, Free: 1793M, Non-Taxable: 179M, Alloc Tax Rate: 1.1x
[1.432s][info][gc          ] GC(0) Pause Init Update Refs 0.040ms
[1.432s][info][gc,start    ] GC(0) Concurrent update references
[1.432s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reference update
[1.436s][info][gc          ] GC(0) Concurrent update references 4.377ms
[1.436s][info][gc,start    ] GC(0) Concurrent update thread roots
[1.437s][info][gc          ] GC(0) Concurrent update thread roots 0.401ms
[1.437s][info][gc,start    ] GC(0) Pause Final Update Refs
[1.437s][info][gc,task     ] GC(0) Using 8 of 8 workers for final reference update
[1.437s][info][gc          ] GC(0) Pause Final Update Refs 0.075ms
[1.437s][info][gc,start    ] GC(0) Concurrent cleanup
[1.437s][info][gc          ] GC(0) Concurrent cleanup 102M->16M(108M) 0.079ms
[1.437s][info][gc,ergo     ] Free: 1868M, Max: 512K regular, 1777M humongous, Frag: 5% external, 0% internal; Reserve: 101888K, Max: 512K
[1.437s][info][gc,stats    ] 
[1.437s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[1.437s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[1.437s][info][gc,stats    ] 
[1.437s][info][gc,stats    ] Concurrent Reset                    379 us
[1.437s][info][gc,stats    ] Pause Init Mark (G)                3365 us
[1.437s][info][gc,stats    ] Pause Init Mark (N)                 419 us
[1.437s][info][gc,stats    ]   Update Region States               21 us
[1.437s][info][gc,stats    ] Concurrent Mark Roots              1541 us, parallelism: 1.65x
[1.437s][info][gc,stats    ]   CMR: <total>                     2546 us
[1.437s][info][gc,stats    ]   CMR: Thread Roots                1069 us, workers (us): 955, 114, ---, ---, ---, ---, ---, ---, 
[1.437s][info][gc,stats    ]   CMR: VM Strong Roots              473 us, workers (us): 340, 133, ---, ---, ---, ---, ---, ---, 
[1.437s][info][gc,stats    ]   CMR: CLDG Roots                  1004 us, workers (us): ---, 1004, ---, ---, ---, ---, ---, ---, 
[1.437s][info][gc,stats    ] Concurrent Marking                10096 us
[1.437s][info][gc,stats    ] Pause Final Mark (G)                573 us
[1.437s][info][gc,stats    ] Pause Final Mark (N)                473 us
[1.437s][info][gc,stats    ]   Finish Mark                       282 us
[1.437s][info][gc,stats    ]   Update Region States               26 us
[1.437s][info][gc,stats    ]   Choose Collection Set              64 us
[1.437s][info][gc,stats    ]   Rebuild Free Set                   16 us
[1.437s][info][gc,stats    ] Concurrent Thread Roots             155 us, parallelism: 1.16x
[1.437s][info][gc,stats    ]   CTR: <total>                      180 us
[1.437s][info][gc,stats    ]   CTR: Thread Roots                 180 us, workers (us):  75, 105, ---, ---, ---, ---, ---, ---, 
[1.437s][info][gc,stats    ] Concurrent Weak References          709 us, parallelism: 1.03x
[1.437s][info][gc,stats    ]   CWRF: <total>                     731 us
[1.437s][info][gc,stats    ]   CWRF: Weak References             731 us, workers (us): 204, 528, ---, ---, ---, ---, ---, ---, 
[1.437s][info][gc,stats    ] Concurrent Weak Roots              4880 us
[1.437s][info][gc,stats    ]   Roots                            1247 us, parallelism: 1.92x
[1.437s][info][gc,stats    ]     CWR: <total>                   2397 us
[1.437s][info][gc,stats    ]     CWR: Code Cache Roots           737 us, workers (us): 368, 370, ---, ---, ---, ---, ---, ---, 
[1.437s][info][gc,stats    ]     CWR: VM Weak Roots             1644 us, workers (us): 824, 820, ---, ---, ---, ---, ---, ---, 
[1.437s][info][gc,stats    ]     CWR: CLDG Roots                  15 us, workers (us):  15, ---, ---, ---, ---, ---, ---, ---, 
[1.437s][info][gc,stats    ]   Rendezvous                       3601 us
[1.437s][info][gc,stats    ] Concurrent Cleanup                   97 us
[1.437s][info][gc,stats    ] Concurrent Class Unloading         7880 us
[1.437s][info][gc,stats    ]   Unlink Stale                     5393 us
[1.437s][info][gc,stats    ]     System Dictionary               155 us
[1.437s][info][gc,stats    ]     Weak Class Links               2535 us
[1.437s][info][gc,stats    ]     Code Roots                     2702 us
[1.437s][info][gc,stats    ]   Rendezvous                         29 us
[1.437s][info][gc,stats    ]   Purge Unlinked                   2421 us
[1.437s][info][gc,stats    ]     Code Roots                     2326 us
[1.437s][info][gc,stats    ]     CLDG                             94 us
[1.437s][info][gc,stats    ]     Exception Caches                  0 us
[1.437s][info][gc,stats    ] Concurrent Strong Roots            1185 us, parallelism: 0.93x
[1.437s][info][gc,stats    ]   CSR: <total>                     1097 us
[1.437s][info][gc,stats    ]   CSR: VM Strong Roots               24 us, workers (us):  24,   0, ---, ---, ---, ---, ---, ---, 
[1.437s][info][gc,stats    ]   CSR: CLDG Roots                  1073 us, workers (us): 1073, ---, ---, ---, ---, ---, ---, ---, 
[1.437s][info][gc,stats    ] Concurrent Evacuation              8643 us
[1.437s][info][gc,stats    ] Pause Init Update Refs (G)          170 us
[1.437s][info][gc,stats    ] Pause Init Update Refs (N)           49 us
[1.437s][info][gc,stats    ]   Manage GCLABs                       4 us
[1.437s][info][gc,stats    ] Concurrent Update Refs             4403 us
[1.437s][info][gc,stats    ] Concurrent Update Thread Roots      411 us
[1.437s][info][gc,stats    ] Pause Final Update Refs (G)         182 us
[1.437s][info][gc,stats    ] Pause Final Update Refs (N)          85 us
[1.437s][info][gc,stats    ]   Update Region States               21 us
[1.437s][info][gc,stats    ]   Trash Collection Set                4 us
[1.437s][info][gc,stats    ]   Rebuild Free Set                   19 us
[1.437s][info][gc,stats    ] Concurrent Cleanup                   89 us
[1.437s][info][gc,stats    ] 
[1.437s][info][gc,stats    ] Allocation pacing accrued:
[1.437s][info][gc,stats    ]       0 of  1425 ms (  0.0%): <total>
[1.437s][info][gc,stats    ]       0 of  1425 ms (  0.0%): <average total>
[1.437s][info][gc,stats    ] 
[1.437s][info][gc,metaspace] Metaspace: 21247K(21568K)->21340K(21824K) NonClass: 18895K(19072K)->18990K(19264K) Class: 2351K(2496K)->2349K(2560K)
[1.437s][info][gc,ergo     ] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[2.449s][info][gc,start    ] Concurrent uncommit
[2.463s][info][gc          ] Concurrent uncommit 26M->26M(27M) 14.313ms
[7.776s][info][gc          ] Cancelling GC: Stopping VM
[7.777s][info][gc,heap,exit] Heap
[7.777s][info][gc,heap,exit] Shenandoah Heap
[7.777s][info][gc,heap,exit]  1984M max, 1984M soft max, 36352K committed, 35892K used
[7.777s][info][gc,heap,exit]  3969 x 512K regions
[7.777s][info][gc,heap,exit] Status: cancelled
[7.777s][info][gc,heap,exit] Reserved region:
[7.777s][info][gc,heap,exit]  - [0x0000000083f80000, 0x0000000100000000) 
[7.777s][info][gc,heap,exit] Collection set:
[7.777s][info][gc,heap,exit]  - map (vanilla): 0x000000000001107f
[7.777s][info][gc,heap,exit]  - map (biased):  0x0000000000010000
[7.777s][info][gc,heap,exit] 
[7.777s][info][gc,heap,exit]  Metaspace       used 25324K, committed 25664K, reserved 1114112K
[7.777s][info][gc,heap,exit]   class space    used 2914K, committed 3072K, reserved 1048576K
[7.777s][info][gc,stats    ] 
[7.777s][info][gc,stats    ] GC STATISTICS:
[7.777s][info][gc,stats    ]   "(G)" (gross) pauses include VM time: time to notify and block threads, do the pre-
[7.777s][info][gc,stats    ]         and post-safepoint housekeeping. Use -Xlog:safepoint+stats to dissect.
[7.777s][info][gc,stats    ]   "(N)" (net) pauses are the times spent in the actual GC code.
[7.777s][info][gc,stats    ]   "a" is average time for each phase, look at levels to see if average makes sense.
[7.777s][info][gc,stats    ]   "lvls" are quantiles: 0% (minimum), 25%, 50% (median), 75%, 100% (maximum).
[7.777s][info][gc,stats    ] 
[7.777s][info][gc,stats    ]   All times are wall-clock times, except per-root-class counters, that are sum over
[7.777s][info][gc,stats    ]   all workers. Dividing the <total> over the root stage time estimates parallelism.
[7.777s][info][gc,stats    ] 
[7.777s][info][gc,stats    ]   Pacing delays are measured from entering the pacing code till exiting it. Therefore,
[7.777s][info][gc,stats    ]   observed pacing delays may be higher than the threshold when paced thread spent more
[7.777s][info][gc,stats    ]   time in the pacing code. It usually happens when thread is de-scheduled while paced,
[7.777s][info][gc,stats    ]   OS takes longer to unblock the thread, or JVM experiences an STW pause.
[7.777s][info][gc,stats    ] 
[7.777s][info][gc,stats    ]   Higher delay would prevent application outpacing the GC, but it will hide the GC latencies
[7.777s][info][gc,stats    ]   from the STW pause times. Pacing affects the individual threads, and so it would also be
[7.777s][info][gc,stats    ]   invisible to the usual profiling tools, but would add up to end-to-end application latency.
[7.777s][info][gc,stats    ]   Raise max pacing delay with care.
[7.777s][info][gc,stats    ] 
[7.777s][info][gc,stats    ] Concurrent Reset               =    0.000 s (a =      379 us) (n =     1) (lvls, us =      377,      377,      377,      377,      379)
[7.777s][info][gc,stats    ] Pause Init Mark (G)            =    0.003 s (a =     3365 us) (n =     1) (lvls, us =     3359,     3359,     3359,     3359,     3365)
[7.777s][info][gc,stats    ] Pause Init Mark (N)            =    0.000 s (a =      419 us) (n =     1) (lvls, us =      418,      418,      418,      418,      419)
[7.777s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       21 us) (n =     1) (lvls, us =       21,       21,       21,       21,       21)
[7.777s][info][gc,stats    ] Concurrent Mark Roots          =    0.002 s (a =     1541 us) (n =     1) (lvls, us =     1523,     1523,     1523,     1523,     1541)
[7.777s][info][gc,stats    ]   CMR: <total>                 =    0.003 s (a =     2546 us) (n =     1) (lvls, us =     2539,     2539,     2539,     2539,     2546)
[7.777s][info][gc,stats    ]   CMR: Thread Roots            =    0.001 s (a =     1069 us) (n =     1) (lvls, us =     1055,     1055,     1055,     1055,     1069)
[7.777s][info][gc,stats    ]   CMR: VM Strong Roots         =    0.000 s (a =      473 us) (n =     1) (lvls, us =      473,      473,      473,      473,      473)
[7.777s][info][gc,stats    ]   CMR: CLDG Roots              =    0.001 s (a =     1004 us) (n =     1) (lvls, us =      996,      996,      996,      996,     1004)
[7.777s][info][gc,stats    ] Concurrent Marking             =    0.010 s (a =    10096 us) (n =     1) (lvls, us =     9961,     9961,     9961,     9961,    10096)
[7.777s][info][gc,stats    ] Pause Final Mark (G)           =    0.001 s (a =      573 us) (n =     1) (lvls, us =      572,      572,      572,      572,      573)
[7.777s][info][gc,stats    ] Pause Final Mark (N)           =    0.000 s (a =      473 us) (n =     1) (lvls, us =      473,      473,      473,      473,      473)
[7.777s][info][gc,stats    ]   Finish Mark                  =    0.000 s (a =      282 us) (n =     1) (lvls, us =      281,      281,      281,      281,      282)
[7.777s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       26 us) (n =     1) (lvls, us =       25,       25,       25,       25,       26)
[7.777s][info][gc,stats    ]   Choose Collection Set        =    0.000 s (a =       64 us) (n =     1) (lvls, us =       63,       63,       63,       63,       64)
[7.777s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       16 us) (n =     1) (lvls, us =       16,       16,       16,       16,       16)
[7.777s][info][gc,stats    ] Concurrent Thread Roots        =    0.000 s (a =      155 us) (n =     1) (lvls, us =      154,      154,      154,      154,      155)
[7.777s][info][gc,stats    ]   CTR: <total>                 =    0.000 s (a =      180 us) (n =     1) (lvls, us =      180,      180,      180,      180,      180)
[7.777s][info][gc,stats    ]   CTR: Thread Roots            =    0.000 s (a =      180 us) (n =     1) (lvls, us =      180,      180,      180,      180,      180)
[7.777s][info][gc,stats    ] Concurrent Weak References     =    0.001 s (a =      709 us) (n =     1) (lvls, us =      709,      709,      709,      709,      709)
[7.777s][info][gc,stats    ]   CWRF: <total>                =    0.001 s (a =      731 us) (n =     1) (lvls, us =      730,      730,      730,      730,      731)
[7.777s][info][gc,stats    ]   CWRF: Weak References        =    0.001 s (a =      731 us) (n =     1) (lvls, us =      730,      730,      730,      730,      731)
[7.777s][info][gc,stats    ] Concurrent Weak Roots          =    0.005 s (a =     4880 us) (n =     1) (lvls, us =     4863,     4863,     4863,     4863,     4880)
[7.777s][info][gc,stats    ]   Roots                        =    0.001 s (a =     1247 us) (n =     1) (lvls, us =     1230,     1230,     1230,     1230,     1247)
[7.777s][info][gc,stats    ]     CWR: <total>               =    0.002 s (a =     2397 us) (n =     1) (lvls, us =     2383,     2383,     2383,     2383,     2397)
[7.777s][info][gc,stats    ]     CWR: Code Cache Roots      =    0.001 s (a =      737 us) (n =     1) (lvls, us =      736,      736,      736,      736,      737)
[7.777s][info][gc,stats    ]     CWR: VM Weak Roots         =    0.002 s (a =     1644 us) (n =     1) (lvls, us =     1641,     1641,     1641,     1641,     1644)
[7.777s][info][gc,stats    ]     CWR: CLDG Roots            =    0.000 s (a =       15 us) (n =     1) (lvls, us =       15,       15,       15,       15,       15)
[7.778s][info][gc,stats    ]   Rendezvous                   =    0.004 s (a =     3601 us) (n =     1) (lvls, us =     3594,     3594,     3594,     3594,     3601)
[7.778s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =       97 us) (n =     1) (lvls, us =       96,       96,       96,       96,       97)
[7.778s][info][gc,stats    ] Concurrent Class Unloading     =    0.008 s (a =     7880 us) (n =     1) (lvls, us =     7871,     7871,     7871,     7871,     7880)
[7.778s][info][gc,stats    ]   Unlink Stale                 =    0.005 s (a =     5393 us) (n =     1) (lvls, us =     5391,     5391,     5391,     5391,     5393)
[7.778s][info][gc,stats    ]     System Dictionary          =    0.000 s (a =      155 us) (n =     1) (lvls, us =      154,      154,      154,      154,      155)
[7.778s][info][gc,stats    ]     Weak Class Links           =    0.003 s (a =     2535 us) (n =     1) (lvls, us =     2520,     2520,     2520,     2520,     2535)
[7.778s][info][gc,stats    ]     Code Roots                 =    0.003 s (a =     2702 us) (n =     1) (lvls, us =     2695,     2695,     2695,     2695,     2702)
[7.778s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =       29 us) (n =     1) (lvls, us =       29,       29,       29,       29,       29)
[7.778s][info][gc,stats    ]   Purge Unlinked               =    0.002 s (a =     2421 us) (n =     1) (lvls, us =     2402,     2402,     2402,     2402,     2421)
[7.778s][info][gc,stats    ]     Code Roots                 =    0.002 s (a =     2326 us) (n =     1) (lvls, us =     2324,     2324,     2324,     2324,     2326)
[7.778s][info][gc,stats    ]     CLDG                       =    0.000 s (a =       94 us) (n =     1) (lvls, us =       94,       94,       94,       94,       94)
[7.778s][info][gc,stats    ]     Exception Caches           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[7.778s][info][gc,stats    ] Concurrent Strong Roots        =    0.001 s (a =     1185 us) (n =     1) (lvls, us =     1172,     1172,     1172,     1172,     1185)
[7.778s][info][gc,stats    ]   CSR: <total>                 =    0.001 s (a =     1097 us) (n =     1) (lvls, us =     1094,     1094,     1094,     1094,     1097)
[7.778s][info][gc,stats    ]   CSR: VM Strong Roots         =    0.000 s (a =       24 us) (n =     1) (lvls, us =       24,       24,       24,       24,       24)
[7.778s][info][gc,stats    ]   CSR: CLDG Roots              =    0.001 s (a =     1073 us) (n =     1) (lvls, us =     1055,     1055,     1055,     1055,     1073)
[7.778s][info][gc,stats    ] Concurrent Evacuation          =    0.009 s (a =     8643 us) (n =     1) (lvls, us =     8633,     8633,     8633,     8633,     8643)
[7.778s][info][gc,stats    ] Pause Init Update Refs (G)     =    0.000 s (a =      170 us) (n =     1) (lvls, us =      170,      170,      170,      170,      170)
[7.778s][info][gc,stats    ] Pause Init Update Refs (N)     =    0.000 s (a =       49 us) (n =     1) (lvls, us =       49,       49,       49,       49,       49)
[7.778s][info][gc,stats    ]   Manage GCLABs                =    0.000 s (a =        4 us) (n =     1) (lvls, us =        4,        4,        4,        4,        4)
[7.778s][info][gc,stats    ] Concurrent Update Refs         =    0.004 s (a =     4403 us) (n =     1) (lvls, us =     4395,     4395,     4395,     4395,     4403)
[7.778s][info][gc,stats    ] Concurrent Update Thread Roots =    0.000 s (a =      411 us) (n =     1) (lvls, us =      410,      410,      410,      410,      411)
[7.778s][info][gc,stats    ] Pause Final Update Refs (G)    =    0.000 s (a =      182 us) (n =     1) (lvls, us =      182,      182,      182,      182,      182)
[7.778s][info][gc,stats    ] Pause Final Update Refs (N)    =    0.000 s (a =       85 us) (n =     1) (lvls, us =       85,       85,       85,       85,       85)
[7.778s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       21 us) (n =     1) (lvls, us =       21,       21,       21,       21,       21)
[7.778s][info][gc,stats    ]   Trash Collection Set         =    0.000 s (a =        4 us) (n =     1) (lvls, us =        4,        4,        4,        4,        4)
[7.778s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       19 us) (n =     1) (lvls, us =       19,       19,       19,       19,       19)
[7.778s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =       89 us) (n =     1) (lvls, us =       89,       89,       89,       89,       89)
[7.778s][info][gc,stats    ] Concurrent Uncommit            =    0.015 s (a =     7501 us) (n =     2) (lvls, us =      617,      617,      617,      617,    14382)
[7.778s][info][gc,stats    ] 
[7.778s][info][gc,stats    ] 
[7.778s][info][gc,stats    ] Under allocation pressure, concurrent cycles may cancel, and either continue cycle
[7.778s][info][gc,stats    ] under stop-the-world pause or result in stop-the-world Full GC. Increase heap size,
[7.778s][info][gc,stats    ] tune GC heuristics, set more aggressive pacing delay, or lower allocation rate
[7.778s][info][gc,stats    ] to avoid Degenerated and Full GC cycles.
[7.778s][info][gc,stats    ] 
[7.778s][info][gc,stats    ]     1 successful concurrent GCs
[7.778s][info][gc,stats    ]       0 invoked explicitly
[7.778s][info][gc,stats    ]       0 invoked implicitly
[7.778s][info][gc,stats    ] 
[7.778s][info][gc,stats    ]     0 Degenerated GCs
[7.778s][info][gc,stats    ]       0 caused by allocation failure
[7.778s][info][gc,stats    ]       0 upgraded to Full GC
[7.778s][info][gc,stats    ] 
[7.778s][info][gc,stats    ]     0 Full GCs
[7.778s][info][gc,stats    ]       0 invoked explicitly
[7.778s][info][gc,stats    ]       0 invoked implicitly
[7.778s][info][gc,stats    ]       0 caused by allocation failure
[7.778s][info][gc,stats    ]       0 upgraded from Degenerated GC
[7.778s][info][gc,stats    ] 
[7.778s][info][gc,stats    ] 
