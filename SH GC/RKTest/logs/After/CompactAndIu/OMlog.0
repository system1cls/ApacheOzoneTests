[0.004s][info][gc] Heuristics ergonomically sets -XX:+ExplicitGCInvokesConcurrent
[0.004s][info][gc] Heuristics ergonomically sets -XX:+ShenandoahImplicitGCInvokesConcurrent
[0.004s][info][gc] Using Shenandoah
[0.004s][info][gc] Heuristics ergonomically sets -XX:+ShenandoahAlwaysClearSoftRefs
[0.004s][info][gc] Heuristics ergonomically sets -XX:ShenandoahAllocationThreshold=10
[0.004s][info][gc] Heuristics ergonomically sets -XX:ShenandoahImmediateThreshold=100
[0.004s][info][gc] Heuristics ergonomically sets -XX:ShenandoahUncommitDelay=1000
[0.004s][info][gc] Heuristics ergonomically sets -XX:ShenandoahGuaranteedGCInterval=30000
[0.004s][info][gc] Heuristics ergonomically sets -XX:ShenandoahGarbageThreshold=10
[0.005s][info][gc,ergo] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[0.005s][info][gc,init] Version: 21.0.7+6-Ubuntu-0ubuntu122.04 (release)
[0.005s][info][gc,init] CPUs: 4 total, 4 available
[0.005s][info][gc,init] Memory: 7937M
[0.005s][info][gc,init] Large Page Support: Disabled
[0.005s][info][gc,init] NUMA Support: Disabled
[0.005s][info][gc,init] Compressed Oops: Enabled (32-bit)
[0.005s][info][gc,init] Heap Min Capacity: 6656K
[0.005s][info][gc,init] Heap Initial Capacity: 127488K
[0.005s][info][gc,init] Heap Max Capacity: 2032128K
[0.005s][info][gc,init] Pre-touch: Disabled
[0.005s][info][gc,init] Mode: Incremental-Update (IU)
[0.005s][info][gc,init] Heuristics: Compact
[0.005s][info][gc,init] Heap Region Count: 3969
[0.005s][info][gc,init] Heap Region Size: 512K
[0.005s][info][gc,init] TLAB Size Max: 512K
[0.005s][info][gc,init] Humongous Object Threshold: 512K
[0.005s][info][gc,init] Parallel Workers: 8
[0.005s][info][gc,init] Concurrent Workers: 2
[0.013s][info][gc,metaspace] CDS archive(s) mapped at: [0x00007effe7000000-0x00007effe7c97000-0x00007effe7c97000), size 13201408, SharedBaseAddress: 0x00007effe7000000, ArchiveRelocationMode: 1.
[0.013s][info][gc,metaspace] Compressed class space mapped at: 0x00007effe8000000-0x00007f0028000000, reserved size: 1073741824
[0.013s][info][gc,metaspace] Narrow klass base: 0x00007effe7000000, Narrow klass shift: 0, Narrow klass range: 0x100000000
[1.028s][info][gc,start    ] Concurrent uncommit
[1.029s][info][gc          ] Concurrent uncommit 37M->37M(38M) 0.537ms
[2.159s][info][gc          ] Trigger: Metadata GC Threshold
[2.159s][info][gc,ergo     ] Free: 1746M, Max: 512K regular, 1746M humongous, Frag: 0% external, 0% internal; Reserve: 101888K, Max: 512K
[2.159s][info][gc,start    ] GC(0) Concurrent reset
[2.165s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reset
[2.165s][info][gc,ergo     ] GC(0) Pacer for Reset. Non-Taxable: 1984M
[2.165s][info][gc          ] GC(0) Concurrent reset 5.840ms
[2.165s][info][gc,start    ] GC(0) Pause Init Mark (unload classes)
[2.166s][info][gc,task     ] GC(0) Using 8 of 8 workers for init marking
[2.166s][info][gc,ref      ] GC(0) Clearing All SoftReferences
[2.166s][info][gc,ergo     ] GC(0) Pacer for Mark. Expected Live: 198M, Free: 1746M, Non-Taxable: 174M, Alloc Tax Rate: 0.1x
[2.166s][info][gc          ] GC(0) Pause Init Mark (unload classes) 0.683ms
[2.166s][info][gc,start    ] GC(0) Concurrent marking roots
[2.166s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking roots
[2.168s][info][gc          ] GC(0) Concurrent marking roots 2.274ms
[2.168s][info][gc,start    ] GC(0) Concurrent marking (unload classes)
[2.168s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking
[2.214s][info][gc          ] GC(0) Concurrent marking (unload classes) 45.837ms
[2.214s][info][gc,start    ] GC(0) Pause Final Mark (unload classes)
[2.214s][info][gc,task     ] GC(0) Using 8 of 8 workers for final marking
[2.223s][info][gc,ergo     ] GC(0) CSet Selection. Actual Free: 1844M, Max CSet: 1383M
[2.223s][info][gc,ergo     ] GC(0) Collectable Garbage: 74528K (99%), Immediate: 3823K (5%), CSet: 70705K (94%)
[2.223s][info][gc,ergo     ] GC(0) Pacer for Evacuation. Used CSet: 82944K, Free: 1745M, Non-Taxable: 174M, Alloc Tax Rate: 1.1x
[2.223s][info][gc          ] GC(0) Pause Final Mark (unload classes) 8.582ms
[2.223s][info][gc,start    ] GC(0) Concurrent thread roots
[2.223s][info][gc,task     ] GC(0) Using 2 of 8 workers for Concurrent thread roots
[2.227s][info][gc          ] GC(0) Concurrent thread roots 4.202ms
[2.227s][info][gc,start    ] GC(0) Concurrent weak references
[2.227s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak references
[2.228s][info][gc,ref      ] GC(0) Encountered references: Soft: 3877, Weak: 2095, Final: 4, Phantom: 821
[2.228s][info][gc,ref      ] GC(0) Discovered  references: Soft: 3793, Weak: 1450, Final: 0, Phantom: 468
[2.228s][info][gc,ref      ] GC(0) Enqueued    references: Soft: 1588, Weak: 648, Final: 0, Phantom: 231
[2.228s][info][gc          ] GC(0) Concurrent weak references 1.019ms
[2.228s][info][gc,start    ] GC(0) Concurrent weak roots
[2.228s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak root
[2.233s][info][gc          ] GC(0) Concurrent weak roots 4.565ms
[2.233s][info][gc,start    ] GC(0) Concurrent cleanup
[2.233s][info][gc          ] GC(0) Concurrent cleanup 145M->141M(148M) 0.109ms
[2.233s][info][gc,ergo     ] GC(0) Free: 1743M, Max: 512K regular, 1739M humongous, Frag: 1% external, 0% internal; Reserve: 99328K, Max: 512K
[2.233s][info][gc,start    ] GC(0) Concurrent class unloading
[2.233s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent class unloading
[2.243s][info][gc          ] GC(0) Concurrent class unloading 9.939ms
[2.243s][info][gc,start    ] GC(0) Concurrent strong roots
[2.243s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent strong root
[2.244s][info][gc          ] GC(0) Concurrent strong roots 1.458ms
[2.244s][info][gc,start    ] GC(0) Concurrent evacuation
[2.244s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent evacuation
[2.255s][info][gc          ] GC(0) Concurrent evacuation 10.459ms
[2.255s][info][gc,start    ] GC(0) Pause Init Update Refs
[2.255s][info][gc,ergo     ] GC(0) Pacer for Update Refs. Used: 153M, Free: 1742M, Non-Taxable: 174M, Alloc Tax Rate: 1.1x
[2.255s][info][gc          ] GC(0) Pause Init Update Refs 0.043ms
[2.255s][info][gc,start    ] GC(0) Concurrent update references
[2.255s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reference update
[2.272s][info][gc          ] GC(0) Concurrent update references 16.944ms
[2.272s][info][gc,start    ] GC(0) Concurrent update thread roots
[2.272s][info][gc          ] GC(0) Concurrent update thread roots 0.288ms
[2.272s][info][gc,start    ] GC(0) Pause Final Update Refs
[2.272s][info][gc,task     ] GC(0) Using 8 of 8 workers for final reference update
[2.272s][info][gc          ] GC(0) Pause Final Update Refs 0.091ms
[2.272s][info][gc,start    ] GC(0) Concurrent cleanup
[2.273s][info][gc          ] GC(0) Concurrent cleanup 154M->73M(160M) 0.115ms
[2.273s][info][gc,ergo     ] Free: 1809M, Max: 512K regular, 1725M humongous, Frag: 5% external, 0% internal; Reserve: 101888K, Max: 512K
[2.273s][info][gc,stats    ] 
[2.273s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[2.273s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[2.273s][info][gc,stats    ] 
[2.273s][info][gc,stats    ] Concurrent Reset                   5861 us
[2.273s][info][gc,stats    ] Pause Init Mark (G)                 902 us
[2.273s][info][gc,stats    ] Pause Init Mark (N)                 700 us
[2.273s][info][gc,stats    ]   Update Region States               29 us
[2.273s][info][gc,stats    ] Concurrent Mark Roots              2296 us, parallelism: 1.55x
[2.273s][info][gc,stats    ]   CMR: <total>                     3553 us
[2.273s][info][gc,stats    ]   CMR: Thread Roots                1908 us, workers (us): 517, 1391, ---, ---, ---, ---, ---, ---, 
[2.273s][info][gc,stats    ]   CMR: VM Strong Roots              356 us, workers (us): 354,   2, ---, ---, ---, ---, ---, ---, 
[2.273s][info][gc,stats    ]   CMR: CLDG Roots                  1289 us, workers (us): 1289, ---, ---, ---, ---, ---, ---, ---, 
[2.273s][info][gc,stats    ] Concurrent Marking                45872 us
[2.273s][info][gc,stats    ] Pause Final Mark (G)               8728 us
[2.273s][info][gc,stats    ] Pause Final Mark (N)               8605 us
[2.273s][info][gc,stats    ]   Finish Mark                      8377 us
[2.273s][info][gc,stats    ]   Update Region States               38 us
[2.273s][info][gc,stats    ]   Choose Collection Set              83 us
[2.273s][info][gc,stats    ]   Rebuild Free Set                   26 us
[2.273s][info][gc,stats    ] Concurrent Thread Roots            4224 us, parallelism: 1.00x
[2.273s][info][gc,stats    ]   CTR: <total>                     4228 us
[2.273s][info][gc,stats    ]   CTR: Thread Roots                4228 us, workers (us): 264, 3964, ---, ---, ---, ---, ---, ---, 
[2.273s][info][gc,stats    ] Concurrent Weak References         1028 us, parallelism: 0.91x
[2.273s][info][gc,stats    ]   CWRF: <total>                     934 us
[2.273s][info][gc,stats    ]   CWRF: Weak References             934 us, workers (us): 934,   0, ---, ---, ---, ---, ---, ---, 
[2.273s][info][gc,stats    ] Concurrent Weak Roots              4582 us
[2.273s][info][gc,stats    ]   Roots                            4444 us, parallelism: 1.72x
[2.273s][info][gc,stats    ]     CWR: <total>                   7662 us
[2.273s][info][gc,stats    ]     CWR: Code Cache Roots           749 us, workers (us): 354, 395, ---, ---, ---, ---, ---, ---, 
[2.273s][info][gc,stats    ]     CWR: VM Weak Roots             6897 us, workers (us): 3961, 2936, ---, ---, ---, ---, ---, ---, 
[2.273s][info][gc,stats    ]     CWR: CLDG Roots                  17 us, workers (us): ---,  17, ---, ---, ---, ---, ---, ---, 
[2.273s][info][gc,stats    ]   Rendezvous                        106 us
[2.273s][info][gc,stats    ] Concurrent Cleanup                  118 us
[2.273s][info][gc,stats    ] Concurrent Class Unloading         9966 us
[2.273s][info][gc,stats    ]   Unlink Stale                     6069 us
[2.273s][info][gc,stats    ]     System Dictionary               197 us
[2.273s][info][gc,stats    ]     Weak Class Links               2472 us
[2.273s][info][gc,stats    ]     Code Roots                     3398 us
[2.273s][info][gc,stats    ]   Rendezvous                        324 us
[2.273s][info][gc,stats    ]   Purge Unlinked                   3525 us
[2.273s][info][gc,stats    ]     Code Roots                     3348 us
[2.273s][info][gc,stats    ]     CLDG                            176 us
[2.273s][info][gc,stats    ]     Exception Caches                  0 us
[2.273s][info][gc,stats    ] Concurrent Strong Roots            1477 us, parallelism: 0.75x
[2.273s][info][gc,stats    ]   CSR: <total>                     1113 us
[2.273s][info][gc,stats    ]   CSR: VM Strong Roots               38 us, workers (us):  38,   0, ---, ---, ---, ---, ---, ---, 
[2.273s][info][gc,stats    ]   CSR: CLDG Roots                  1074 us, workers (us): 1074, ---, ---, ---, ---, ---, ---, ---, 
[2.273s][info][gc,stats    ] Concurrent Evacuation             10489 us
[2.273s][info][gc,stats    ] Pause Init Update Refs (G)          102 us
[2.273s][info][gc,stats    ] Pause Init Update Refs (N)           52 us
[2.273s][info][gc,stats    ]   Manage GCLABs                       4 us
[2.273s][info][gc,stats    ] Concurrent Update Refs            16983 us
[2.273s][info][gc,stats    ] Concurrent Update Thread Roots      299 us
[2.273s][info][gc,stats    ] Pause Final Update Refs (G)         255 us
[2.273s][info][gc,stats    ] Pause Final Update Refs (N)         100 us
[2.273s][info][gc,stats    ]   Update Region States               31 us
[2.273s][info][gc,stats    ]   Trash Collection Set                4 us
[2.273s][info][gc,stats    ]   Rebuild Free Set                   16 us
[2.273s][info][gc,stats    ] Concurrent Cleanup                  127 us
[2.273s][info][gc,stats    ] 
[2.273s][info][gc,stats    ] Allocation pacing accrued:
[2.273s][info][gc,stats    ]       0 of  2268 ms (  0.0%): <total>
[2.273s][info][gc,stats    ]       0 of  2268 ms (  0.0%): <average total>
[2.273s][info][gc,stats    ] 
[2.273s][info][gc,metaspace] Metaspace: 21251K(21632K)->22292K(22656K) NonClass: 18903K(19136K)->19820K(20032K) Class: 2348K(2496K)->2471K(2624K)
[2.273s][info][gc,ergo     ] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[3.283s][info][gc,start    ] Concurrent uncommit
[3.289s][info][gc          ] Concurrent uncommit 79M->79M(83M) 5.653ms
[6.551s][info][gc          ] Cancelling GC: Stopping VM
[6.552s][info][gc,heap,exit] Heap
[6.552s][info][gc,heap,exit] Shenandoah Heap
[6.552s][info][gc,heap,exit]  1984M max, 1984M soft max, 88576K committed, 85483K used
[6.552s][info][gc,heap,exit]  3969 x 512K regions
[6.552s][info][gc,heap,exit] Status: cancelled
[6.552s][info][gc,heap,exit] Reserved region:
[6.552s][info][gc,heap,exit]  - [0x0000000083f80000, 0x0000000100000000) 
[6.552s][info][gc,heap,exit] Collection set:
[6.552s][info][gc,heap,exit]  - map (vanilla): 0x000000000001107f
[6.552s][info][gc,heap,exit]  - map (biased):  0x0000000000010000
[6.552s][info][gc,heap,exit] 
[6.552s][info][gc,heap,exit]  Metaspace       used 24948K, committed 25152K, reserved 1114112K
[6.552s][info][gc,heap,exit]   class space    used 2742K, committed 2816K, reserved 1048576K
[6.552s][info][gc,stats    ] 
[6.552s][info][gc,stats    ] GC STATISTICS:
[6.552s][info][gc,stats    ]   "(G)" (gross) pauses include VM time: time to notify and block threads, do the pre-
[6.552s][info][gc,stats    ]         and post-safepoint housekeeping. Use -Xlog:safepoint+stats to dissect.
[6.552s][info][gc,stats    ]   "(N)" (net) pauses are the times spent in the actual GC code.
[6.552s][info][gc,stats    ]   "a" is average time for each phase, look at levels to see if average makes sense.
[6.552s][info][gc,stats    ]   "lvls" are quantiles: 0% (minimum), 25%, 50% (median), 75%, 100% (maximum).
[6.552s][info][gc,stats    ] 
[6.552s][info][gc,stats    ]   All times are wall-clock times, except per-root-class counters, that are sum over
[6.552s][info][gc,stats    ]   all workers. Dividing the <total> over the root stage time estimates parallelism.
[6.552s][info][gc,stats    ] 
[6.552s][info][gc,stats    ]   Pacing delays are measured from entering the pacing code till exiting it. Therefore,
[6.552s][info][gc,stats    ]   observed pacing delays may be higher than the threshold when paced thread spent more
[6.552s][info][gc,stats    ]   time in the pacing code. It usually happens when thread is de-scheduled while paced,
[6.552s][info][gc,stats    ]   OS takes longer to unblock the thread, or JVM experiences an STW pause.
[6.552s][info][gc,stats    ] 
[6.552s][info][gc,stats    ]   Higher delay would prevent application outpacing the GC, but it will hide the GC latencies
[6.552s][info][gc,stats    ]   from the STW pause times. Pacing affects the individual threads, and so it would also be
[6.552s][info][gc,stats    ]   invisible to the usual profiling tools, but would add up to end-to-end application latency.
[6.552s][info][gc,stats    ]   Raise max pacing delay with care.
[6.552s][info][gc,stats    ] 
[6.552s][info][gc,stats    ] Concurrent Reset               =    0.006 s (a =     5861 us) (n =     1) (lvls, us =     5859,     5859,     5859,     5859,     5861)
[6.552s][info][gc,stats    ] Pause Init Mark (G)            =    0.001 s (a =      902 us) (n =     1) (lvls, us =      902,      902,      902,      902,      902)
[6.552s][info][gc,stats    ] Pause Init Mark (N)            =    0.001 s (a =      700 us) (n =     1) (lvls, us =      699,      699,      699,      699,      700)
[6.552s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       29 us) (n =     1) (lvls, us =       29,       29,       29,       29,       29)
[6.552s][info][gc,stats    ] Concurrent Mark Roots          =    0.002 s (a =     2296 us) (n =     1) (lvls, us =     2285,     2285,     2285,     2285,     2296)
[6.552s][info][gc,stats    ]   CMR: <total>                 =    0.004 s (a =     3553 us) (n =     1) (lvls, us =     3535,     3535,     3535,     3535,     3553)
[6.552s][info][gc,stats    ]   CMR: Thread Roots            =    0.002 s (a =     1908 us) (n =     1) (lvls, us =     1895,     1895,     1895,     1895,     1908)
[6.552s][info][gc,stats    ]   CMR: VM Strong Roots         =    0.000 s (a =      356 us) (n =     1) (lvls, us =      355,      355,      355,      355,      356)
[6.552s][info][gc,stats    ]   CMR: CLDG Roots              =    0.001 s (a =     1289 us) (n =     1) (lvls, us =     1289,     1289,     1289,     1289,     1289)
[6.552s][info][gc,stats    ] Concurrent Marking             =    0.046 s (a =    45872 us) (n =     1) (lvls, us =    45703,    45703,    45703,    45703,    45872)
[6.552s][info][gc,stats    ] Pause Final Mark (G)           =    0.009 s (a =     8728 us) (n =     1) (lvls, us =     8711,     8711,     8711,     8711,     8728)
[6.552s][info][gc,stats    ] Pause Final Mark (N)           =    0.009 s (a =     8605 us) (n =     1) (lvls, us =     8594,     8594,     8594,     8594,     8605)
[6.552s][info][gc,stats    ]   Finish Mark                  =    0.008 s (a =     8377 us) (n =     1) (lvls, us =     8359,     8359,     8359,     8359,     8377)
[6.552s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       38 us) (n =     1) (lvls, us =       38,       38,       38,       38,       38)
[6.552s][info][gc,stats    ]   Choose Collection Set        =    0.000 s (a =       83 us) (n =     1) (lvls, us =       83,       83,       83,       83,       83)
[6.552s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       26 us) (n =     1) (lvls, us =       26,       26,       26,       26,       26)
[6.553s][info][gc,stats    ] Concurrent Thread Roots        =    0.004 s (a =     4224 us) (n =     1) (lvls, us =     4219,     4219,     4219,     4219,     4224)
[6.553s][info][gc,stats    ]   CTR: <total>                 =    0.004 s (a =     4228 us) (n =     1) (lvls, us =     4219,     4219,     4219,     4219,     4228)
[6.553s][info][gc,stats    ]   CTR: Thread Roots            =    0.004 s (a =     4228 us) (n =     1) (lvls, us =     4219,     4219,     4219,     4219,     4228)
[6.553s][info][gc,stats    ] Concurrent Weak References     =    0.001 s (a =     1028 us) (n =     1) (lvls, us =     1016,     1016,     1016,     1016,     1028)
[6.553s][info][gc,stats    ]   CWRF: <total>                =    0.001 s (a =      934 us) (n =     1) (lvls, us =      934,      934,      934,      934,      934)
[6.553s][info][gc,stats    ]   CWRF: Weak References        =    0.001 s (a =      934 us) (n =     1) (lvls, us =      934,      934,      934,      934,      934)
[6.553s][info][gc,stats    ] Concurrent Weak Roots          =    0.005 s (a =     4582 us) (n =     1) (lvls, us =     4570,     4570,     4570,     4570,     4582)
[6.553s][info][gc,stats    ]   Roots                        =    0.004 s (a =     4444 us) (n =     1) (lvls, us =     4434,     4434,     4434,     4434,     4444)
[6.553s][info][gc,stats    ]     CWR: <total>               =    0.008 s (a =     7662 us) (n =     1) (lvls, us =     7656,     7656,     7656,     7656,     7662)
[6.553s][info][gc,stats    ]     CWR: Code Cache Roots      =    0.001 s (a =      749 us) (n =     1) (lvls, us =      748,      748,      748,      748,      749)
[6.553s][info][gc,stats    ]     CWR: VM Weak Roots         =    0.007 s (a =     6897 us) (n =     1) (lvls, us =     6895,     6895,     6895,     6895,     6897)
[6.553s][info][gc,stats    ]     CWR: CLDG Roots            =    0.000 s (a =       17 us) (n =     1) (lvls, us =       17,       17,       17,       17,       17)
[6.553s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =      106 us) (n =     1) (lvls, us =      105,      105,      105,      105,      106)
[6.553s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =      118 us) (n =     1) (lvls, us =      117,      117,      117,      117,      118)
[6.553s][info][gc,stats    ] Concurrent Class Unloading     =    0.010 s (a =     9966 us) (n =     1) (lvls, us =     9961,     9961,     9961,     9961,     9966)
[6.553s][info][gc,stats    ]   Unlink Stale                 =    0.006 s (a =     6069 us) (n =     1) (lvls, us =     6055,     6055,     6055,     6055,     6069)
[6.553s][info][gc,stats    ]     System Dictionary          =    0.000 s (a =      197 us) (n =     1) (lvls, us =      197,      197,      197,      197,      197)
[6.553s][info][gc,stats    ]     Weak Class Links           =    0.002 s (a =     2472 us) (n =     1) (lvls, us =     2461,     2461,     2461,     2461,     2472)
[6.553s][info][gc,stats    ]     Code Roots                 =    0.003 s (a =     3398 us) (n =     1) (lvls, us =     3379,     3379,     3379,     3379,     3398)
[6.553s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =      324 us) (n =     1) (lvls, us =      322,      322,      322,      322,      324)
[6.553s][info][gc,stats    ]   Purge Unlinked               =    0.004 s (a =     3525 us) (n =     1) (lvls, us =     3516,     3516,     3516,     3516,     3525)
[6.553s][info][gc,stats    ]     Code Roots                 =    0.003 s (a =     3348 us) (n =     1) (lvls, us =     3340,     3340,     3340,     3340,     3348)
[6.553s][info][gc,stats    ]     CLDG                       =    0.000 s (a =      176 us) (n =     1) (lvls, us =      176,      176,      176,      176,      176)
[6.553s][info][gc,stats    ]     Exception Caches           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[6.553s][info][gc,stats    ] Concurrent Strong Roots        =    0.001 s (a =     1477 us) (n =     1) (lvls, us =     1465,     1465,     1465,     1465,     1477)
[6.553s][info][gc,stats    ]   CSR: <total>                 =    0.001 s (a =     1113 us) (n =     1) (lvls, us =     1094,     1094,     1094,     1094,     1113)
[6.553s][info][gc,stats    ]   CSR: VM Strong Roots         =    0.000 s (a =       38 us) (n =     1) (lvls, us =       38,       38,       38,       38,       38)
[6.553s][info][gc,stats    ]   CSR: CLDG Roots              =    0.001 s (a =     1074 us) (n =     1) (lvls, us =     1074,     1074,     1074,     1074,     1074)
[6.553s][info][gc,stats    ] Concurrent Evacuation          =    0.010 s (a =    10489 us) (n =     1) (lvls, us =    10352,    10352,    10352,    10352,    10489)
[6.553s][info][gc,stats    ] Pause Init Update Refs (G)     =    0.000 s (a =      102 us) (n =     1) (lvls, us =      102,      102,      102,      102,      102)
[6.553s][info][gc,stats    ] Pause Init Update Refs (N)     =    0.000 s (a =       52 us) (n =     1) (lvls, us =       52,       52,       52,       52,       52)
[6.553s][info][gc,stats    ]   Manage GCLABs                =    0.000 s (a =        4 us) (n =     1) (lvls, us =        4,        4,        4,        4,        4)
[6.553s][info][gc,stats    ] Concurrent Update Refs         =    0.017 s (a =    16983 us) (n =     1) (lvls, us =    16797,    16797,    16797,    16797,    16983)
[6.553s][info][gc,stats    ] Concurrent Update Thread Roots =    0.000 s (a =      299 us) (n =     1) (lvls, us =      299,      299,      299,      299,      299)
[6.553s][info][gc,stats    ] Pause Final Update Refs (G)    =    0.000 s (a =      255 us) (n =     1) (lvls, us =      254,      254,      254,      254,      255)
[6.553s][info][gc,stats    ] Pause Final Update Refs (N)    =    0.000 s (a =      100 us) (n =     1) (lvls, us =      100,      100,      100,      100,      100)
[6.553s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       31 us) (n =     1) (lvls, us =       31,       31,       31,       31,       31)
[6.553s][info][gc,stats    ]   Trash Collection Set         =    0.000 s (a =        4 us) (n =     1) (lvls, us =        4,        4,        4,        4,        4)
[6.553s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       16 us) (n =     1) (lvls, us =       16,       16,       16,       16,       16)
[6.553s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =      127 us) (n =     1) (lvls, us =      125,      125,      125,      125,      127)
[6.553s][info][gc,stats    ] Concurrent Uncommit            =    0.006 s (a =     3132 us) (n =     2) (lvls, us =      578,      578,      578,      578,     5686)
[6.553s][info][gc,stats    ] 
[6.553s][info][gc,stats    ] 
[6.553s][info][gc,stats    ] Under allocation pressure, concurrent cycles may cancel, and either continue cycle
[6.553s][info][gc,stats    ] under stop-the-world pause or result in stop-the-world Full GC. Increase heap size,
[6.553s][info][gc,stats    ] tune GC heuristics, set more aggressive pacing delay, or lower allocation rate
[6.553s][info][gc,stats    ] to avoid Degenerated and Full GC cycles.
[6.553s][info][gc,stats    ] 
[6.553s][info][gc,stats    ]     1 successful concurrent GCs
[6.553s][info][gc,stats    ]       0 invoked explicitly
[6.553s][info][gc,stats    ]       0 invoked implicitly
[6.553s][info][gc,stats    ] 
[6.553s][info][gc,stats    ]     0 Degenerated GCs
[6.553s][info][gc,stats    ]       0 caused by allocation failure
[6.553s][info][gc,stats    ]       0 upgraded to Full GC
[6.553s][info][gc,stats    ] 
[6.554s][info][gc,stats    ]     0 Full GCs
[6.554s][info][gc,stats    ]       0 invoked explicitly
[6.554s][info][gc,stats    ]       0 invoked implicitly
[6.554s][info][gc,stats    ]       0 caused by allocation failure
[6.554s][info][gc,stats    ]       0 upgraded from Degenerated GC
[6.554s][info][gc,stats    ] 
[6.554s][info][gc,stats    ] 
