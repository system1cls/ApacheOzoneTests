[0.004s][info][gc] Heuristics ergonomically sets -XX:+ExplicitGCInvokesConcurrent
[0.004s][info][gc] Heuristics ergonomically sets -XX:+ShenandoahImplicitGCInvokesConcurrent
[0.006s][info][gc] Using Shenandoah
[0.006s][info][gc,ergo] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[0.007s][info][gc,init] Version: 21.0.7+6-Ubuntu-0ubuntu122.04 (release)
[0.007s][info][gc,init] CPUs: 4 total, 4 available
[0.007s][info][gc,init] Memory: 7937M
[0.007s][info][gc,init] Large Page Support: Disabled
[0.007s][info][gc,init] NUMA Support: Disabled
[0.007s][info][gc,init] Compressed Oops: Enabled (32-bit)
[0.007s][info][gc,init] Heap Min Capacity: 6656K
[0.007s][info][gc,init] Heap Initial Capacity: 127488K
[0.007s][info][gc,init] Heap Max Capacity: 2032128K
[0.007s][info][gc,init] Pre-touch: Disabled
[0.007s][info][gc,init] Mode: Snapshot-At-The-Beginning (SATB)
[0.007s][info][gc,init] Heuristics: Adaptive
[0.007s][info][gc,init] Heap Region Count: 3969
[0.007s][info][gc,init] Heap Region Size: 512K
[0.007s][info][gc,init] TLAB Size Max: 512K
[0.007s][info][gc,init] Humongous Object Threshold: 512K
[0.007s][info][gc,init] Parallel Workers: 8
[0.007s][info][gc,init] Concurrent Workers: 2
[0.017s][info][gc,metaspace] CDS archive(s) mapped at: [0x00007f8327000000-0x00007f8327c97000-0x00007f8327c97000), size 13201408, SharedBaseAddress: 0x00007f8327000000, ArchiveRelocationMode: 1.
[0.017s][info][gc,metaspace] Compressed class space mapped at: 0x00007f8328000000-0x00007f8368000000, reserved size: 1073741824
[0.017s][info][gc,metaspace] Narrow klass base: 0x00007f8327000000, Narrow klass shift: 0, Narrow klass range: 0x100000000
[2.032s][info][gc          ] Trigger: Metadata GC Threshold
[2.032s][info][gc,ergo     ] Free: 1746M, Max: 512K regular, 1746M humongous, Frag: 0% external, 0% internal; Reserve: 101888K, Max: 512K
[2.032s][info][gc,start    ] GC(0) Concurrent reset
[2.032s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reset
[2.032s][info][gc,ergo     ] GC(0) Pacer for Reset. Non-Taxable: 1984M
[2.032s][info][gc          ] GC(0) Concurrent reset 0.453ms
[2.033s][info][gc,start    ] GC(0) Pause Init Mark (unload classes)
[2.033s][info][gc,task     ] GC(0) Using 8 of 8 workers for init marking
[2.033s][info][gc,ergo     ] GC(0) Pacer for Mark. Expected Live: 198M, Free: 1746M, Non-Taxable: 174M, Alloc Tax Rate: 0.1x
[2.033s][info][gc          ] GC(0) Pause Init Mark (unload classes) 0.612ms
[2.033s][info][gc,start    ] GC(0) Concurrent marking roots
[2.033s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking roots
[2.034s][info][gc          ] GC(0) Concurrent marking roots 1.269ms
[2.034s][info][gc,start    ] GC(0) Concurrent marking (unload classes)
[2.034s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking
[2.080s][info][gc          ] GC(0) Concurrent marking (unload classes) 45.078ms
[2.080s][info][gc,start    ] GC(0) Pause Final Mark (unload classes)
[2.080s][info][gc,task     ] GC(0) Using 8 of 8 workers for final marking
[2.080s][info][gc,ergo     ] GC(0) Adaptive CSet Selection. Target Free: 201M, Actual Free: 1845M, Max CSet: 84672K, Min Garbage: 0B
[2.080s][info][gc,ergo     ] GC(0) Collectable Garbage: 73041K (98%), Immediate: 4847K (6%), CSet: 68194K (92%)
[2.080s][info][gc,ergo     ] GC(0) Pacer for Evacuation. Used CSet: 76288K, Free: 1746M, Non-Taxable: 174M, Alloc Tax Rate: 1.1x
[2.080s][info][gc          ] GC(0) Pause Final Mark (unload classes) 0.333ms
[2.080s][info][gc,start    ] GC(0) Concurrent thread roots
[2.080s][info][gc,task     ] GC(0) Using 2 of 8 workers for Concurrent thread roots
[2.081s][info][gc          ] GC(0) Concurrent thread roots 0.439ms
[2.081s][info][gc,start    ] GC(0) Concurrent weak references
[2.081s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak references
[2.081s][info][gc,ref      ] GC(0) Encountered references: Soft: 3954, Weak: 2094, Final: 4, Phantom: 821
[2.081s][info][gc,ref      ] GC(0) Discovered  references: Soft: 0, Weak: 1284, Final: 0, Phantom: 500
[2.081s][info][gc,ref      ] GC(0) Enqueued    references: Soft: 0, Weak: 498, Final: 0, Phantom: 230
[2.081s][info][gc          ] GC(0) Concurrent weak references 0.621ms
[2.081s][info][gc,start    ] GC(0) Concurrent weak roots
[2.081s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak root
[2.083s][info][gc          ] GC(0) Concurrent weak roots 2.063ms
[2.083s][info][gc,start    ] GC(0) Concurrent cleanup
[2.084s][info][gc          ] GC(0) Concurrent cleanup 142M->138M(146M) 0.108ms
[2.084s][info][gc,ergo     ] GC(0) Free: 1744M, Max: 512K regular, 1740M humongous, Frag: 1% external, 0% internal; Reserve: 101164K, Max: 512K
[2.084s][info][gc,start    ] GC(0) Concurrent class unloading
[2.084s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent class unloading
[2.090s][info][gc          ] GC(0) Concurrent class unloading 6.272ms
[2.090s][info][gc,start    ] GC(0) Concurrent strong roots
[2.090s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent strong root
[2.091s][info][gc          ] GC(0) Concurrent strong roots 1.516ms
[2.091s][info][gc,start    ] GC(0) Concurrent evacuation
[2.091s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent evacuation
[2.096s][info][gc          ] GC(0) Concurrent evacuation 4.614ms
[2.096s][info][gc,start    ] GC(0) Pause Init Update Refs
[2.096s][info][gc,ergo     ] GC(0) Pacer for Update Refs. Used: 147M, Free: 1744M, Non-Taxable: 174M, Alloc Tax Rate: 1.1x
[2.096s][info][gc          ] GC(0) Pause Init Update Refs 0.030ms
[2.096s][info][gc,start    ] GC(0) Concurrent update references
[2.096s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reference update
[2.114s][info][gc          ] GC(0) Concurrent update references 17.516ms
[2.114s][info][gc,start    ] GC(0) Concurrent update thread roots
[2.115s][info][gc          ] GC(0) Concurrent update thread roots 0.750ms
[2.115s][info][gc,start    ] GC(0) Pause Final Update Refs
[2.115s][info][gc,task     ] GC(0) Using 8 of 8 workers for final reference update
[2.115s][info][gc          ] GC(0) Pause Final Update Refs 0.079ms
[2.115s][info][gc,start    ] GC(0) Concurrent cleanup
[2.115s][info][gc          ] GC(0) Concurrent cleanup 148M->73M(154M) 0.087ms
[2.115s][info][gc,ergo     ] Free: 1808M, Max: 512K regular, 1730M humongous, Frag: 5% external, 0% internal; Reserve: 101888K, Max: 512K
[2.115s][info][gc,stats    ] 
[2.115s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[2.115s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[2.115s][info][gc,stats    ] 
[2.115s][info][gc,stats    ] Concurrent Reset                    503 us
[2.115s][info][gc,stats    ] Pause Init Mark (G)                 814 us
[2.115s][info][gc,stats    ] Pause Init Mark (N)                 625 us
[2.115s][info][gc,stats    ]   Update Region States               24 us
[2.115s][info][gc,stats    ] Concurrent Mark Roots              1288 us, parallelism: 1.73x
[2.115s][info][gc,stats    ]   CMR: <total>                     2234 us
[2.115s][info][gc,stats    ]   CMR: Thread Roots                 998 us, workers (us): 878, 119, ---, ---, ---, ---, ---, ---, 
[2.115s][info][gc,stats    ]   CMR: VM Strong Roots              371 us, workers (us): 255, 117, ---, ---, ---, ---, ---, ---, 
[2.115s][info][gc,stats    ]   CMR: CLDG Roots                   864 us, workers (us): ---, 864, ---, ---, ---, ---, ---, ---, 
[2.115s][info][gc,stats    ] Concurrent Marking                45128 us
[2.115s][info][gc,stats    ] Pause Final Mark (G)                642 us
[2.115s][info][gc,stats    ] Pause Final Mark (N)                343 us
[2.115s][info][gc,stats    ]   Finish Mark                       123 us
[2.115s][info][gc,stats    ]   Update Region States               42 us
[2.115s][info][gc,stats    ]   Choose Collection Set              94 us
[2.115s][info][gc,stats    ]   Rebuild Free Set                   23 us
[2.115s][info][gc,stats    ] Concurrent Thread Roots             456 us, parallelism: 1.06x
[2.115s][info][gc,stats    ]   CTR: <total>                      486 us
[2.115s][info][gc,stats    ]   CTR: Thread Roots                 486 us, workers (us): 392,  94, ---, ---, ---, ---, ---, ---, 
[2.115s][info][gc,stats    ] Concurrent Weak References          639 us, parallelism: 0.75x
[2.115s][info][gc,stats    ]   CWRF: <total>                     481 us
[2.115s][info][gc,stats    ]   CWRF: Weak References             481 us, workers (us): 449,  32, ---, ---, ---, ---, ---, ---, 
[2.115s][info][gc,stats    ] Concurrent Weak Roots              2111 us
[2.115s][info][gc,stats    ]   Roots                            1469 us, parallelism: 1.89x
[2.115s][info][gc,stats    ]     CWR: <total>                   2778 us
[2.115s][info][gc,stats    ]     CWR: Code Cache Roots           728 us, workers (us): 383, 345, ---, ---, ---, ---, ---, ---, 
[2.115s][info][gc,stats    ]     CWR: VM Weak Roots             2029 us, workers (us): 1017, 1012, ---, ---, ---, ---, ---, ---, 
[2.115s][info][gc,stats    ]     CWR: CLDG Roots                  21 us, workers (us): ---,  21, ---, ---, ---, ---, ---, ---, 
[2.115s][info][gc,stats    ]   Rendezvous                        574 us
[2.115s][info][gc,stats    ] Concurrent Cleanup                  119 us
[2.115s][info][gc,stats    ] Concurrent Class Unloading         6289 us
[2.115s][info][gc,stats    ]   Unlink Stale                     2693 us
[2.115s][info][gc,stats    ]     System Dictionary                43 us
[2.115s][info][gc,stats    ]     Weak Class Links                  0 us
[2.115s][info][gc,stats    ]     Code Roots                     2648 us
[2.115s][info][gc,stats    ]   Rendezvous                         21 us
[2.115s][info][gc,stats    ]   Purge Unlinked                   3538 us
[2.115s][info][gc,stats    ]     Code Roots                     3526 us
[2.115s][info][gc,stats    ]     CLDG                             12 us
[2.115s][info][gc,stats    ]     Exception Caches                  0 us
[2.115s][info][gc,stats    ] Concurrent Strong Roots            1536 us, parallelism: 0.76x
[2.115s][info][gc,stats    ]   CSR: <total>                     1172 us
[2.115s][info][gc,stats    ]   CSR: VM Strong Roots               21 us, workers (us):  15,   6, ---, ---, ---, ---, ---, ---, 
[2.115s][info][gc,stats    ]   CSR: CLDG Roots                  1152 us, workers (us): ---, 1152, ---, ---, ---, ---, ---, ---, 
[2.115s][info][gc,stats    ] Concurrent Evacuation              4635 us
[2.115s][info][gc,stats    ] Pause Init Update Refs (G)          148 us
[2.115s][info][gc,stats    ] Pause Init Update Refs (N)           39 us
[2.115s][info][gc,stats    ]   Manage GCLABs                       5 us
[2.115s][info][gc,stats    ] Concurrent Update Refs            17544 us
[2.115s][info][gc,stats    ] Concurrent Update Thread Roots      763 us
[2.115s][info][gc,stats    ] Pause Final Update Refs (G)         183 us
[2.115s][info][gc,stats    ] Pause Final Update Refs (N)          94 us
[2.115s][info][gc,stats    ]   Update Region States               32 us
[2.115s][info][gc,stats    ]   Trash Collection Set                4 us
[2.115s][info][gc,stats    ]   Rebuild Free Set                   20 us
[2.115s][info][gc,stats    ] Concurrent Cleanup                   96 us
[2.115s][info][gc,stats    ] 
[2.115s][info][gc,stats    ] Allocation pacing accrued:
[2.115s][info][gc,stats    ]       0 of  2109 ms (  0.0%): <total>
[2.116s][info][gc,stats    ]       0 of  2109 ms (  0.0%): <average total>
[2.116s][info][gc,stats    ] 
[2.116s][info][gc,metaspace] Metaspace: 21216K(21632K)->22296K(22656K) NonClass: 18865K(19072K)->19803K(19968K) Class: 2350K(2560K)->2492K(2688K)
[2.116s][info][gc,ergo     ] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[6.397s][info][gc          ] Cancelling GC: Stopping VM
[6.397s][info][gc,heap,exit] Heap
[6.397s][info][gc,heap,exit] Shenandoah Heap
[6.397s][info][gc,heap,exit]  1984M max, 1984M soft max, 154M committed, 87029K used
[6.397s][info][gc,heap,exit]  3969 x 512K regions
[6.397s][info][gc,heap,exit] Status: cancelled
[6.397s][info][gc,heap,exit] Reserved region:
[6.397s][info][gc,heap,exit]  - [0x0000000083f80000, 0x0000000100000000) 
[6.397s][info][gc,heap,exit] Collection set:
[6.397s][info][gc,heap,exit]  - map (vanilla): 0x000000000001107f
[6.397s][info][gc,heap,exit]  - map (biased):  0x0000000000010000
[6.397s][info][gc,heap,exit] 
[6.397s][info][gc,heap,exit]  Metaspace       used 25069K, committed 25408K, reserved 1114112K
[6.397s][info][gc,heap,exit]   class space    used 2775K, committed 2880K, reserved 1048576K
[6.397s][info][gc,stats    ] 
[6.397s][info][gc,stats    ] GC STATISTICS:
[6.397s][info][gc,stats    ]   "(G)" (gross) pauses include VM time: time to notify and block threads, do the pre-
[6.397s][info][gc,stats    ]         and post-safepoint housekeeping. Use -Xlog:safepoint+stats to dissect.
[6.397s][info][gc,stats    ]   "(N)" (net) pauses are the times spent in the actual GC code.
[6.398s][info][gc,stats    ]   "a" is average time for each phase, look at levels to see if average makes sense.
[6.398s][info][gc,stats    ]   "lvls" are quantiles: 0% (minimum), 25%, 50% (median), 75%, 100% (maximum).
[6.398s][info][gc,stats    ] 
[6.398s][info][gc,stats    ]   All times are wall-clock times, except per-root-class counters, that are sum over
[6.398s][info][gc,stats    ]   all workers. Dividing the <total> over the root stage time estimates parallelism.
[6.398s][info][gc,stats    ] 
[6.398s][info][gc,stats    ]   Pacing delays are measured from entering the pacing code till exiting it. Therefore,
[6.398s][info][gc,stats    ]   observed pacing delays may be higher than the threshold when paced thread spent more
[6.398s][info][gc,stats    ]   time in the pacing code. It usually happens when thread is de-scheduled while paced,
[6.398s][info][gc,stats    ]   OS takes longer to unblock the thread, or JVM experiences an STW pause.
[6.398s][info][gc,stats    ] 
[6.398s][info][gc,stats    ]   Higher delay would prevent application outpacing the GC, but it will hide the GC latencies
[6.398s][info][gc,stats    ]   from the STW pause times. Pacing affects the individual threads, and so it would also be
[6.398s][info][gc,stats    ]   invisible to the usual profiling tools, but would add up to end-to-end application latency.
[6.398s][info][gc,stats    ]   Raise max pacing delay with care.
[6.398s][info][gc,stats    ] 
[6.398s][info][gc,stats    ] Concurrent Reset               =    0.001 s (a =      503 us) (n =     1) (lvls, us =      502,      502,      502,      502,      503)
[6.398s][info][gc,stats    ] Pause Init Mark (G)            =    0.001 s (a =      814 us) (n =     1) (lvls, us =      813,      813,      813,      813,      814)
[6.398s][info][gc,stats    ] Pause Init Mark (N)            =    0.001 s (a =      625 us) (n =     1) (lvls, us =      623,      623,      623,      623,      625)
[6.398s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       24 us) (n =     1) (lvls, us =       23,       23,       23,       23,       24)
[6.398s][info][gc,stats    ] Concurrent Mark Roots          =    0.001 s (a =     1288 us) (n =     1) (lvls, us =     1270,     1270,     1270,     1270,     1288)
[6.398s][info][gc,stats    ]   CMR: <total>                 =    0.002 s (a =     2234 us) (n =     1) (lvls, us =     2227,     2227,     2227,     2227,     2234)
[6.398s][info][gc,stats    ]   CMR: Thread Roots            =    0.001 s (a =      998 us) (n =     1) (lvls, us =      996,      996,      996,      996,      998)
[6.398s][info][gc,stats    ]   CMR: VM Strong Roots         =    0.000 s (a =      371 us) (n =     1) (lvls, us =      371,      371,      371,      371,      371)
[6.398s][info][gc,stats    ]   CMR: CLDG Roots              =    0.001 s (a =      864 us) (n =     1) (lvls, us =      863,      863,      863,      863,      864)
[6.398s][info][gc,stats    ] Concurrent Marking             =    0.045 s (a =    45128 us) (n =     1) (lvls, us =    45117,    45117,    45117,    45117,    45128)
[6.398s][info][gc,stats    ] Pause Final Mark (G)           =    0.001 s (a =      642 us) (n =     1) (lvls, us =      641,      641,      641,      641,      642)
[6.398s][info][gc,stats    ] Pause Final Mark (N)           =    0.000 s (a =      343 us) (n =     1) (lvls, us =      342,      342,      342,      342,      343)
[6.398s][info][gc,stats    ]   Finish Mark                  =    0.000 s (a =      123 us) (n =     1) (lvls, us =      121,      121,      121,      121,      123)
[6.398s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       42 us) (n =     1) (lvls, us =       41,       41,       41,       41,       42)
[6.398s][info][gc,stats    ]   Choose Collection Set        =    0.000 s (a =       94 us) (n =     1) (lvls, us =       94,       94,       94,       94,       94)
[6.398s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       23 us) (n =     1) (lvls, us =       23,       23,       23,       23,       23)
[6.398s][info][gc,stats    ] Concurrent Thread Roots        =    0.000 s (a =      456 us) (n =     1) (lvls, us =      455,      455,      455,      455,      456)
[6.399s][info][gc,stats    ]   CTR: <total>                 =    0.000 s (a =      486 us) (n =     1) (lvls, us =      484,      484,      484,      484,      486)
[6.399s][info][gc,stats    ]   CTR: Thread Roots            =    0.000 s (a =      486 us) (n =     1) (lvls, us =      484,      484,      484,      484,      486)
[6.399s][info][gc,stats    ] Concurrent Weak References     =    0.001 s (a =      639 us) (n =     1) (lvls, us =      639,      639,      639,      639,      639)
[6.399s][info][gc,stats    ]   CWRF: <total>                =    0.000 s (a =      481 us) (n =     1) (lvls, us =      480,      480,      480,      480,      481)
[6.399s][info][gc,stats    ]   CWRF: Weak References        =    0.000 s (a =      481 us) (n =     1) (lvls, us =      480,      480,      480,      480,      481)
[6.399s][info][gc,stats    ] Concurrent Weak Roots          =    0.002 s (a =     2111 us) (n =     1) (lvls, us =     2109,     2109,     2109,     2109,     2111)
[6.399s][info][gc,stats    ]   Roots                        =    0.001 s (a =     1469 us) (n =     1) (lvls, us =     1465,     1465,     1465,     1465,     1469)
[6.399s][info][gc,stats    ]     CWR: <total>               =    0.003 s (a =     2778 us) (n =     1) (lvls, us =     2773,     2773,     2773,     2773,     2778)
[6.399s][info][gc,stats    ]     CWR: Code Cache Roots      =    0.001 s (a =      728 us) (n =     1) (lvls, us =      727,      727,      727,      727,      728)
[6.399s][info][gc,stats    ]     CWR: VM Weak Roots         =    0.002 s (a =     2029 us) (n =     1) (lvls, us =     2012,     2012,     2012,     2012,     2029)
[6.399s][info][gc,stats    ]     CWR: CLDG Roots            =    0.000 s (a =       21 us) (n =     1) (lvls, us =       21,       21,       21,       21,       21)
[6.399s][info][gc,stats    ]   Rendezvous                   =    0.001 s (a =      574 us) (n =     1) (lvls, us =      574,      574,      574,      574,      574)
[6.399s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =      119 us) (n =     1) (lvls, us =      117,      117,      117,      117,      119)
[6.399s][info][gc,stats    ] Concurrent Class Unloading     =    0.006 s (a =     6289 us) (n =     1) (lvls, us =     6289,     6289,     6289,     6289,     6289)
[6.399s][info][gc,stats    ]   Unlink Stale                 =    0.003 s (a =     2693 us) (n =     1) (lvls, us =     2676,     2676,     2676,     2676,     2693)
[6.399s][info][gc,stats    ]     System Dictionary          =    0.000 s (a =       43 us) (n =     1) (lvls, us =       43,       43,       43,       43,       43)
[6.399s][info][gc,stats    ]     Weak Class Links           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[6.399s][info][gc,stats    ]     Code Roots                 =    0.003 s (a =     2648 us) (n =     1) (lvls, us =     2637,     2637,     2637,     2637,     2648)
[6.399s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =       21 us) (n =     1) (lvls, us =       21,       21,       21,       21,       21)
[6.399s][info][gc,stats    ]   Purge Unlinked               =    0.004 s (a =     3538 us) (n =     1) (lvls, us =     3535,     3535,     3535,     3535,     3538)
[6.399s][info][gc,stats    ]     Code Roots                 =    0.004 s (a =     3526 us) (n =     1) (lvls, us =     3516,     3516,     3516,     3516,     3526)
[6.399s][info][gc,stats    ]     CLDG                       =    0.000 s (a =       12 us) (n =     1) (lvls, us =       12,       12,       12,       12,       12)
[6.399s][info][gc,stats    ]     Exception Caches           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[6.399s][info][gc,stats    ] Concurrent Strong Roots        =    0.002 s (a =     1536 us) (n =     1) (lvls, us =     1523,     1523,     1523,     1523,     1536)
[6.399s][info][gc,stats    ]   CSR: <total>                 =    0.001 s (a =     1172 us) (n =     1) (lvls, us =     1172,     1172,     1172,     1172,     1172)
[6.399s][info][gc,stats    ]   CSR: VM Strong Roots         =    0.000 s (a =       21 us) (n =     1) (lvls, us =       21,       21,       21,       21,       21)
[6.399s][info][gc,stats    ]   CSR: CLDG Roots              =    0.001 s (a =     1152 us) (n =     1) (lvls, us =     1133,     1133,     1133,     1133,     1152)
[6.399s][info][gc,stats    ] Concurrent Evacuation          =    0.005 s (a =     4635 us) (n =     1) (lvls, us =     4629,     4629,     4629,     4629,     4635)
[6.400s][info][gc,stats    ] Pause Init Update Refs (G)     =    0.000 s (a =      148 us) (n =     1) (lvls, us =      146,      146,      146,      146,      148)
[6.400s][info][gc,stats    ] Pause Init Update Refs (N)     =    0.000 s (a =       39 us) (n =     1) (lvls, us =       39,       39,       39,       39,       39)
[6.400s][info][gc,stats    ]   Manage GCLABs                =    0.000 s (a =        5 us) (n =     1) (lvls, us =        5,        5,        5,        5,        5)
[6.400s][info][gc,stats    ] Concurrent Update Refs         =    0.018 s (a =    17544 us) (n =     1) (lvls, us =    17383,    17383,    17383,    17383,    17544)
[6.400s][info][gc,stats    ] Concurrent Update Thread Roots =    0.001 s (a =      763 us) (n =     1) (lvls, us =      762,      762,      762,      762,      763)
[6.400s][info][gc,stats    ] Pause Final Update Refs (G)    =    0.000 s (a =      183 us) (n =     1) (lvls, us =      182,      182,      182,      182,      183)
[6.400s][info][gc,stats    ] Pause Final Update Refs (N)    =    0.000 s (a =       94 us) (n =     1) (lvls, us =       94,       94,       94,       94,       94)
[6.400s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       32 us) (n =     1) (lvls, us =       32,       32,       32,       32,       32)
[6.400s][info][gc,stats    ]   Trash Collection Set         =    0.000 s (a =        4 us) (n =     1) (lvls, us =        4,        4,        4,        4,        4)
[6.400s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       20 us) (n =     1) (lvls, us =       20,       20,       20,       20,       20)
[6.400s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =       96 us) (n =     1) (lvls, us =       96,       96,       96,       96,       96)
[6.400s][info][gc,stats    ] 
[6.400s][info][gc,stats    ] 
[6.400s][info][gc,stats    ] Under allocation pressure, concurrent cycles may cancel, and either continue cycle
[6.400s][info][gc,stats    ] under stop-the-world pause or result in stop-the-world Full GC. Increase heap size,
[6.400s][info][gc,stats    ] tune GC heuristics, set more aggressive pacing delay, or lower allocation rate
[6.400s][info][gc,stats    ] to avoid Degenerated and Full GC cycles.
[6.400s][info][gc,stats    ] 
[6.400s][info][gc,stats    ]     1 successful concurrent GCs
[6.400s][info][gc,stats    ]       0 invoked explicitly
[6.400s][info][gc,stats    ]       0 invoked implicitly
[6.400s][info][gc,stats    ] 
[6.400s][info][gc,stats    ]     0 Degenerated GCs
[6.400s][info][gc,stats    ]       0 caused by allocation failure
[6.400s][info][gc,stats    ]       0 upgraded to Full GC
[6.400s][info][gc,stats    ] 
[6.400s][info][gc,stats    ]     0 Full GCs
[6.400s][info][gc,stats    ]       0 invoked explicitly
[6.400s][info][gc,stats    ]       0 invoked implicitly
[6.400s][info][gc,stats    ]       0 caused by allocation failure
[6.400s][info][gc,stats    ]       0 upgraded from Degenerated GC
[6.400s][info][gc,stats    ] 
[6.400s][info][gc,stats    ] 
