[0.004s][info][gc] Heuristics ergonomically sets -XX:+ExplicitGCInvokesConcurrent
[0.004s][info][gc] Heuristics ergonomically sets -XX:+ShenandoahImplicitGCInvokesConcurrent
[0.004s][info][gc] Using Shenandoah
[0.005s][info][gc,ergo] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[0.005s][info][gc,init] Version: 21.0.7+6-Ubuntu-0ubuntu122.04 (release)
[0.005s][info][gc,init] CPUs: 4 total, 4 available
[0.005s][info][gc,init] Memory: 7937M
[0.005s][info][gc,init] Large Page Support: Disabled
[0.005s][info][gc,init] NUMA Support: Disabled
[0.005s][info][gc,init] Compressed Oops: Enabled (32-bit)
[0.006s][info][gc,init] Heap Min Capacity: 6656K
[0.006s][info][gc,init] Heap Initial Capacity: 127488K
[0.006s][info][gc,init] Heap Max Capacity: 2032128K
[0.006s][info][gc,init] Pre-touch: Disabled
[0.006s][info][gc,init] Mode: Snapshot-At-The-Beginning (SATB)
[0.006s][info][gc,init] Heuristics: Adaptive
[0.006s][info][gc,init] Heap Region Count: 3969
[0.006s][info][gc,init] Heap Region Size: 512K
[0.006s][info][gc,init] TLAB Size Max: 512K
[0.006s][info][gc,init] Humongous Object Threshold: 512K
[0.006s][info][gc,init] Parallel Workers: 8
[0.006s][info][gc,init] Concurrent Workers: 2
[0.014s][info][gc,metaspace] CDS archive(s) mapped at: [0x00007fdd9f000000-0x00007fdd9fc97000-0x00007fdd9fc97000), size 13201408, SharedBaseAddress: 0x00007fdd9f000000, ArchiveRelocationMode: 1.
[0.014s][info][gc,metaspace] Compressed class space mapped at: 0x00007fdda0000000-0x00007fdde0000000, reserved size: 1073741824
[0.014s][info][gc,metaspace] Narrow klass base: 0x00007fdd9f000000, Narrow klass shift: 0, Narrow klass range: 0x100000000
[1.842s][info][gc          ] Trigger: Metadata GC Threshold
[1.842s][info][gc,ergo     ] Free: 1746M, Max: 512K regular, 1746M humongous, Frag: 0% external, 0% internal; Reserve: 101888K, Max: 512K
[1.842s][info][gc,start    ] GC(0) Concurrent reset
[1.842s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reset
[1.842s][info][gc,ergo     ] GC(0) Pacer for Reset. Non-Taxable: 1984M
[1.842s][info][gc          ] GC(0) Concurrent reset 0.421ms
[1.842s][info][gc,start    ] GC(0) Pause Init Mark (unload classes)
[1.843s][info][gc,task     ] GC(0) Using 8 of 8 workers for init marking
[1.843s][info][gc,ergo     ] GC(0) Pacer for Mark. Expected Live: 198M, Free: 1746M, Non-Taxable: 174M, Alloc Tax Rate: 0.1x
[1.843s][info][gc          ] GC(0) Pause Init Mark (unload classes) 0.399ms
[1.843s][info][gc,start    ] GC(0) Concurrent marking roots
[1.843s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking roots
[1.844s][info][gc          ] GC(0) Concurrent marking roots 1.543ms
[1.844s][info][gc,start    ] GC(0) Concurrent marking (unload classes)
[1.844s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking
[1.888s][info][gc          ] GC(0) Concurrent marking (unload classes) 43.519ms
[1.888s][info][gc,start    ] GC(0) Pause Final Mark (unload classes)
[1.888s][info][gc,task     ] GC(0) Using 8 of 8 workers for final marking
[1.891s][info][gc,ergo     ] GC(0) Adaptive CSet Selection. Target Free: 281M, Actual Free: 1847M, Max CSet: 84672K, Min Garbage: 0B
[1.891s][info][gc,ergo     ] GC(0) Collectable Garbage: 73106K (98%), Immediate: 5359K (7%), CSet: 67747K (91%)
[1.891s][info][gc,ergo     ] GC(0) Pacer for Evacuation. Used CSet: 76288K, Free: 1748M, Non-Taxable: 174M, Alloc Tax Rate: 1.1x
[1.891s][info][gc          ] GC(0) Pause Final Mark (unload classes) 3.448ms
[1.892s][info][gc,start    ] GC(0) Concurrent thread roots
[1.892s][info][gc,task     ] GC(0) Using 2 of 8 workers for Concurrent thread roots
[1.896s][info][gc          ] GC(0) Concurrent thread roots 4.032ms
[1.896s][info][gc,start    ] GC(0) Concurrent weak references
[1.896s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak references
[1.896s][info][gc,ref      ] GC(0) Encountered references: Soft: 3954, Weak: 2100, Final: 4, Phantom: 820
[1.896s][info][gc,ref      ] GC(0) Discovered  references: Soft: 0, Weak: 1270, Final: 0, Phantom: 613
[1.896s][info][gc,ref      ] GC(0) Enqueued    references: Soft: 0, Weak: 498, Final: 0, Phantom: 230
[1.896s][info][gc          ] GC(0) Concurrent weak references 0.440ms
[1.896s][info][gc,start    ] GC(0) Concurrent weak roots
[1.896s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak root
[1.898s][info][gc          ] GC(0) Concurrent weak roots 1.442ms
[1.898s][info][gc,start    ] GC(0) Concurrent cleanup
[1.898s][info][gc          ] GC(0) Concurrent cleanup 141M->135M(144M) 0.122ms
[1.898s][info][gc,ergo     ] GC(0) Free: 1747M, Max: 512K regular, 1742M humongous, Frag: 1% external, 0% internal; Reserve: 100984K, Max: 512K
[1.898s][info][gc,start    ] GC(0) Concurrent class unloading
[1.898s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent class unloading
[1.905s][info][gc          ] GC(0) Concurrent class unloading 7.024ms
[1.905s][info][gc,start    ] GC(0) Concurrent strong roots
[1.905s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent strong root
[1.906s][info][gc          ] GC(0) Concurrent strong roots 1.233ms
[1.906s][info][gc,start    ] GC(0) Concurrent evacuation
[1.906s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent evacuation
[1.912s][info][gc          ] GC(0) Concurrent evacuation 5.509ms
[1.912s][info][gc,start    ] GC(0) Pause Init Update Refs
[1.912s][info][gc,ergo     ] GC(0) Pacer for Update Refs. Used: 145M, Free: 1747M, Non-Taxable: 174M, Alloc Tax Rate: 1.1x
[1.912s][info][gc          ] GC(0) Pause Init Update Refs 0.088ms
[1.912s][info][gc,start    ] GC(0) Concurrent update references
[1.912s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reference update
[1.928s][info][gc          ] GC(0) Concurrent update references 16.432ms
[1.928s][info][gc,start    ] GC(0) Concurrent update thread roots
[1.928s][info][gc          ] GC(0) Concurrent update thread roots 0.115ms
[1.929s][info][gc,start    ] GC(0) Pause Final Update Refs
[1.929s][info][gc,task     ] GC(0) Using 8 of 8 workers for final reference update
[1.929s][info][gc          ] GC(0) Pause Final Update Refs 0.102ms
[1.929s][info][gc,start    ] GC(0) Concurrent cleanup
[1.929s][info][gc          ] GC(0) Concurrent cleanup 146M->71M(153M) 0.098ms
[1.929s][info][gc,ergo     ] Free: 1810M, Max: 512K regular, 1732M humongous, Frag: 5% external, 0% internal; Reserve: 101888K, Max: 512K
[1.929s][info][gc,stats    ] 
[1.929s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[1.929s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[1.929s][info][gc,stats    ] 
[1.929s][info][gc,stats    ] Concurrent Reset                    449 us
[1.929s][info][gc,stats    ] Pause Init Mark (G)                 582 us
[1.929s][info][gc,stats    ] Pause Init Mark (N)                 412 us
[1.929s][info][gc,stats    ]   Update Region States               21 us
[1.929s][info][gc,stats    ] Concurrent Mark Roots              1565 us, parallelism: 1.79x
[1.929s][info][gc,stats    ]   CMR: <total>                     2808 us
[1.929s][info][gc,stats    ]   CMR: Thread Roots                1323 us, workers (us): 1048, 275, ---, ---, ---, ---, ---, ---, 
[1.929s][info][gc,stats    ]   CMR: VM Strong Roots              506 us, workers (us): 357, 148, ---, ---, ---, ---, ---, ---, 
[1.929s][info][gc,stats    ]   CMR: CLDG Roots                   980 us, workers (us): ---, 980, ---, ---, ---, ---, ---, ---, 
[1.929s][info][gc,stats    ] Concurrent Marking                43556 us
[1.929s][info][gc,stats    ] Pause Final Mark (G)               3605 us
[1.929s][info][gc,stats    ] Pause Final Mark (N)               3458 us
[1.929s][info][gc,stats    ]   Finish Mark                      3185 us
[1.929s][info][gc,stats    ]   Update Region States               38 us
[1.929s][info][gc,stats    ]   Choose Collection Set             133 us
[1.929s][info][gc,stats    ]   Rebuild Free Set                   26 us
[1.929s][info][gc,stats    ] Concurrent Thread Roots            4052 us, parallelism: 1.05x
[1.929s][info][gc,stats    ]   CTR: <total>                     4249 us
[1.929s][info][gc,stats    ]   CTR: Thread Roots                4249 us, workers (us): 281, 3968, ---, ---, ---, ---, ---, ---, 
[1.929s][info][gc,stats    ] Concurrent Weak References          471 us, parallelism: 0.81x
[1.929s][info][gc,stats    ]   CWRF: <total>                     380 us
[1.929s][info][gc,stats    ]   CWRF: Weak References             380 us, workers (us): 362,  17, ---, ---, ---, ---, ---, ---, 
[1.929s][info][gc,stats    ] Concurrent Weak Roots              1472 us
[1.929s][info][gc,stats    ]   Roots                            1328 us, parallelism: 1.93x
[1.929s][info][gc,stats    ]     CWR: <total>                   2559 us
[1.929s][info][gc,stats    ]     CWR: Code Cache Roots           656 us, workers (us): 328, 328, ---, ---, ---, ---, ---, ---, 
[1.929s][info][gc,stats    ]     CWR: VM Weak Roots             1890 us, workers (us): 946, 944, ---, ---, ---, ---, ---, ---, 
[1.929s][info][gc,stats    ]     CWR: CLDG Roots                  14 us, workers (us):  14, ---, ---, ---, ---, ---, ---, ---, 
[1.929s][info][gc,stats    ]   Rendezvous                         41 us
[1.929s][info][gc,stats    ] Concurrent Cleanup                  133 us
[1.929s][info][gc,stats    ] Concurrent Class Unloading         7043 us
[1.929s][info][gc,stats    ]   Unlink Stale                     1392 us
[1.929s][info][gc,stats    ]     System Dictionary                59 us
[1.929s][info][gc,stats    ]     Weak Class Links                  0 us
[1.929s][info][gc,stats    ]     Code Roots                     1332 us
[1.929s][info][gc,stats    ]   Rendezvous                         30 us
[1.929s][info][gc,stats    ]   Purge Unlinked                   5580 us
[1.929s][info][gc,stats    ]     Code Roots                     5556 us
[1.929s][info][gc,stats    ]     CLDG                             23 us
[1.929s][info][gc,stats    ]     Exception Caches                  0 us
[1.929s][info][gc,stats    ] Concurrent Strong Roots            1251 us, parallelism: 0.94x
[1.929s][info][gc,stats    ]   CSR: <total>                     1177 us
[1.929s][info][gc,stats    ]   CSR: VM Strong Roots               31 us, workers (us):  31,   0, ---, ---, ---, ---, ---, ---, 
[1.930s][info][gc,stats    ]   CSR: CLDG Roots                  1145 us, workers (us): 1145, ---, ---, ---, ---, ---, ---, ---, 
[1.930s][info][gc,stats    ] Concurrent Evacuation              5548 us
[1.930s][info][gc,stats    ] Pause Init Update Refs (G)          216 us
[1.930s][info][gc,stats    ] Pause Init Update Refs (N)           99 us
[1.930s][info][gc,stats    ]   Manage GCLABs                       6 us
[1.930s][info][gc,stats    ] Concurrent Update Refs            16466 us
[1.930s][info][gc,stats    ] Concurrent Update Thread Roots      125 us
[1.930s][info][gc,stats    ] Pause Final Update Refs (G)         218 us
[1.930s][info][gc,stats    ] Pause Final Update Refs (N)         117 us
[1.930s][info][gc,stats    ]   Update Region States               33 us
[1.930s][info][gc,stats    ]   Trash Collection Set                4 us
[1.930s][info][gc,stats    ]   Rebuild Free Set                   21 us
[1.930s][info][gc,stats    ] Concurrent Cleanup                  108 us
[1.930s][info][gc,stats    ] 
[1.930s][info][gc,stats    ] Allocation pacing accrued:
[1.930s][info][gc,stats    ]       0 of  1924 ms (  0.0%): <total>
[1.930s][info][gc,stats    ]       0 of  1924 ms (  0.0%): <average total>
[1.930s][info][gc,stats    ] 
[1.930s][info][gc,metaspace] Metaspace: 21220K(21632K)->21747K(22144K) NonClass: 18869K(19072K)->19325K(19520K) Class: 2350K(2560K)->2421K(2624K)
[1.930s][info][gc,ergo     ] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[6.237s][info][gc          ] Cancelling GC: Stopping VM
[6.237s][info][gc,heap,exit] Heap
[6.237s][info][gc,heap,exit] Shenandoah Heap
[6.237s][info][gc,heap,exit]  1984M max, 1984M soft max, 153M committed, 85969K used
[6.237s][info][gc,heap,exit]  3969 x 512K regions
[6.237s][info][gc,heap,exit] Status: cancelled
[6.237s][info][gc,heap,exit] Reserved region:
[6.237s][info][gc,heap,exit]  - [0x0000000083f80000, 0x0000000100000000) 
[6.237s][info][gc,heap,exit] Collection set:
[6.237s][info][gc,heap,exit]  - map (vanilla): 0x000000000001107f
[6.237s][info][gc,heap,exit]  - map (biased):  0x0000000000010000
[6.237s][info][gc,heap,exit] 
[6.237s][info][gc,heap,exit]  Metaspace       used 25074K, committed 25408K, reserved 1114112K
[6.237s][info][gc,heap,exit]   class space    used 2776K, committed 2880K, reserved 1048576K
[6.237s][info][gc,stats    ] 
[6.237s][info][gc,stats    ] GC STATISTICS:
[6.237s][info][gc,stats    ]   "(G)" (gross) pauses include VM time: time to notify and block threads, do the pre-
[6.237s][info][gc,stats    ]         and post-safepoint housekeeping. Use -Xlog:safepoint+stats to dissect.
[6.237s][info][gc,stats    ]   "(N)" (net) pauses are the times spent in the actual GC code.
[6.237s][info][gc,stats    ]   "a" is average time for each phase, look at levels to see if average makes sense.
[6.237s][info][gc,stats    ]   "lvls" are quantiles: 0% (minimum), 25%, 50% (median), 75%, 100% (maximum).
[6.237s][info][gc,stats    ] 
[6.237s][info][gc,stats    ]   All times are wall-clock times, except per-root-class counters, that are sum over
[6.237s][info][gc,stats    ]   all workers. Dividing the <total> over the root stage time estimates parallelism.
[6.237s][info][gc,stats    ] 
[6.237s][info][gc,stats    ]   Pacing delays are measured from entering the pacing code till exiting it. Therefore,
[6.237s][info][gc,stats    ]   observed pacing delays may be higher than the threshold when paced thread spent more
[6.237s][info][gc,stats    ]   time in the pacing code. It usually happens when thread is de-scheduled while paced,
[6.237s][info][gc,stats    ]   OS takes longer to unblock the thread, or JVM experiences an STW pause.
[6.237s][info][gc,stats    ] 
[6.237s][info][gc,stats    ]   Higher delay would prevent application outpacing the GC, but it will hide the GC latencies
[6.237s][info][gc,stats    ]   from the STW pause times. Pacing affects the individual threads, and so it would also be
[6.237s][info][gc,stats    ]   invisible to the usual profiling tools, but would add up to end-to-end application latency.
[6.237s][info][gc,stats    ]   Raise max pacing delay with care.
[6.237s][info][gc,stats    ] 
[6.237s][info][gc,stats    ] Concurrent Reset               =    0.000 s (a =      449 us) (n =     1) (lvls, us =      447,      447,      447,      447,      449)
[6.237s][info][gc,stats    ] Pause Init Mark (G)            =    0.001 s (a =      582 us) (n =     1) (lvls, us =      580,      580,      580,      580,      582)
[6.237s][info][gc,stats    ] Pause Init Mark (N)            =    0.000 s (a =      412 us) (n =     1) (lvls, us =      412,      412,      412,      412,      412)
[6.237s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       21 us) (n =     1) (lvls, us =       21,       21,       21,       21,       21)
[6.237s][info][gc,stats    ] Concurrent Mark Roots          =    0.002 s (a =     1565 us) (n =     1) (lvls, us =     1562,     1562,     1562,     1562,     1565)
[6.238s][info][gc,stats    ]   CMR: <total>                 =    0.003 s (a =     2808 us) (n =     1) (lvls, us =     2793,     2793,     2793,     2793,     2808)
[6.238s][info][gc,stats    ]   CMR: Thread Roots            =    0.001 s (a =     1323 us) (n =     1) (lvls, us =     1309,     1309,     1309,     1309,     1323)
[6.238s][info][gc,stats    ]   CMR: VM Strong Roots         =    0.001 s (a =      506 us) (n =     1) (lvls, us =      504,      504,      504,      504,      506)
[6.238s][info][gc,stats    ]   CMR: CLDG Roots              =    0.001 s (a =      980 us) (n =     1) (lvls, us =      979,      979,      979,      979,      980)
[6.238s][info][gc,stats    ] Concurrent Marking             =    0.044 s (a =    43556 us) (n =     1) (lvls, us =    43555,    43555,    43555,    43555,    43556)
[6.238s][info][gc,stats    ] Pause Final Mark (G)           =    0.004 s (a =     3605 us) (n =     1) (lvls, us =     3594,     3594,     3594,     3594,     3605)
[6.238s][info][gc,stats    ] Pause Final Mark (N)           =    0.003 s (a =     3458 us) (n =     1) (lvls, us =     3457,     3457,     3457,     3457,     3458)
[6.238s][info][gc,stats    ]   Finish Mark                  =    0.003 s (a =     3185 us) (n =     1) (lvls, us =     3184,     3184,     3184,     3184,     3185)
[6.238s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       38 us) (n =     1) (lvls, us =       38,       38,       38,       38,       38)
[6.238s][info][gc,stats    ]   Choose Collection Set        =    0.000 s (a =      133 us) (n =     1) (lvls, us =      131,      131,      131,      131,      133)
[6.238s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       26 us) (n =     1) (lvls, us =       26,       26,       26,       26,       26)
[6.238s][info][gc,stats    ] Concurrent Thread Roots        =    0.004 s (a =     4052 us) (n =     1) (lvls, us =     4043,     4043,     4043,     4043,     4052)
[6.238s][info][gc,stats    ]   CTR: <total>                 =    0.004 s (a =     4249 us) (n =     1) (lvls, us =     4238,     4238,     4238,     4238,     4249)
[6.238s][info][gc,stats    ]   CTR: Thread Roots            =    0.004 s (a =     4249 us) (n =     1) (lvls, us =     4238,     4238,     4238,     4238,     4249)
[6.238s][info][gc,stats    ] Concurrent Weak References     =    0.000 s (a =      471 us) (n =     1) (lvls, us =      471,      471,      471,      471,      471)
[6.238s][info][gc,stats    ]   CWRF: <total>                =    0.000 s (a =      380 us) (n =     1) (lvls, us =      379,      379,      379,      379,      380)
[6.238s][info][gc,stats    ]   CWRF: Weak References        =    0.000 s (a =      380 us) (n =     1) (lvls, us =      379,      379,      379,      379,      380)
[6.238s][info][gc,stats    ] Concurrent Weak Roots          =    0.001 s (a =     1472 us) (n =     1) (lvls, us =     1465,     1465,     1465,     1465,     1472)
[6.238s][info][gc,stats    ]   Roots                        =    0.001 s (a =     1328 us) (n =     1) (lvls, us =     1309,     1309,     1309,     1309,     1328)
[6.238s][info][gc,stats    ]     CWR: <total>               =    0.003 s (a =     2559 us) (n =     1) (lvls, us =     2559,     2559,     2559,     2559,     2559)
[6.238s][info][gc,stats    ]     CWR: Code Cache Roots      =    0.001 s (a =      656 us) (n =     1) (lvls, us =      654,      654,      654,      654,      656)
[6.238s][info][gc,stats    ]     CWR: VM Weak Roots         =    0.002 s (a =     1890 us) (n =     1) (lvls, us =     1875,     1875,     1875,     1875,     1890)
[6.238s][info][gc,stats    ]     CWR: CLDG Roots            =    0.000 s (a =       14 us) (n =     1) (lvls, us =       13,       13,       13,       13,       14)
[6.238s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =       41 us) (n =     1) (lvls, us =       41,       41,       41,       41,       41)
[6.238s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =      133 us) (n =     1) (lvls, us =      133,      133,      133,      133,      133)
[6.238s][info][gc,stats    ] Concurrent Class Unloading     =    0.007 s (a =     7043 us) (n =     1) (lvls, us =     7031,     7031,     7031,     7031,     7043)
[6.238s][info][gc,stats    ]   Unlink Stale                 =    0.001 s (a =     1392 us) (n =     1) (lvls, us =     1387,     1387,     1387,     1387,     1392)
[6.238s][info][gc,stats    ]     System Dictionary          =    0.000 s (a =       59 us) (n =     1) (lvls, us =       59,       59,       59,       59,       59)
[6.238s][info][gc,stats    ]     Weak Class Links           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[6.238s][info][gc,stats    ]     Code Roots                 =    0.001 s (a =     1332 us) (n =     1) (lvls, us =     1328,     1328,     1328,     1328,     1332)
[6.238s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =       30 us) (n =     1) (lvls, us =       30,       30,       30,       30,       30)
[6.238s][info][gc,stats    ]   Purge Unlinked               =    0.006 s (a =     5580 us) (n =     1) (lvls, us =     5566,     5566,     5566,     5566,     5580)
[6.238s][info][gc,stats    ]     Code Roots                 =    0.006 s (a =     5556 us) (n =     1) (lvls, us =     5547,     5547,     5547,     5547,     5556)
[6.238s][info][gc,stats    ]     CLDG                       =    0.000 s (a =       23 us) (n =     1) (lvls, us =       23,       23,       23,       23,       23)
[6.238s][info][gc,stats    ]     Exception Caches           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[6.238s][info][gc,stats    ] Concurrent Strong Roots        =    0.001 s (a =     1251 us) (n =     1) (lvls, us =     1250,     1250,     1250,     1250,     1251)
[6.238s][info][gc,stats    ]   CSR: <total>                 =    0.001 s (a =     1177 us) (n =     1) (lvls, us =     1172,     1172,     1172,     1172,     1177)
[6.238s][info][gc,stats    ]   CSR: VM Strong Roots         =    0.000 s (a =       31 us) (n =     1) (lvls, us =       31,       31,       31,       31,       31)
[6.238s][info][gc,stats    ]   CSR: CLDG Roots              =    0.001 s (a =     1145 us) (n =     1) (lvls, us =     1133,     1133,     1133,     1133,     1145)
[6.238s][info][gc,stats    ] Concurrent Evacuation          =    0.006 s (a =     5548 us) (n =     1) (lvls, us =     5547,     5547,     5547,     5547,     5548)
[6.238s][info][gc,stats    ] Pause Init Update Refs (G)     =    0.000 s (a =      216 us) (n =     1) (lvls, us =      215,      215,      215,      215,      216)
[6.238s][info][gc,stats    ] Pause Init Update Refs (N)     =    0.000 s (a =       99 us) (n =     1) (lvls, us =       99,       99,       99,       99,       99)
[6.238s][info][gc,stats    ]   Manage GCLABs                =    0.000 s (a =        6 us) (n =     1) (lvls, us =        6,        6,        6,        6,        6)
[6.238s][info][gc,stats    ] Concurrent Update Refs         =    0.016 s (a =    16466 us) (n =     1) (lvls, us =    16406,    16406,    16406,    16406,    16466)
[6.238s][info][gc,stats    ] Concurrent Update Thread Roots =    0.000 s (a =      125 us) (n =     1) (lvls, us =      123,      123,      123,      123,      125)
[6.238s][info][gc,stats    ] Pause Final Update Refs (G)    =    0.000 s (a =      218 us) (n =     1) (lvls, us =      217,      217,      217,      217,      218)
[6.238s][info][gc,stats    ] Pause Final Update Refs (N)    =    0.000 s (a =      117 us) (n =     1) (lvls, us =      115,      115,      115,      115,      117)
[6.238s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       33 us) (n =     1) (lvls, us =       33,       33,       33,       33,       33)
[6.238s][info][gc,stats    ]   Trash Collection Set         =    0.000 s (a =        4 us) (n =     1) (lvls, us =        4,        4,        4,        4,        4)
[6.238s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       21 us) (n =     1) (lvls, us =       21,       21,       21,       21,       21)
[6.238s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =      108 us) (n =     1) (lvls, us =      107,      107,      107,      107,      108)
[6.238s][info][gc,stats    ] 
[6.238s][info][gc,stats    ] 
[6.238s][info][gc,stats    ] Under allocation pressure, concurrent cycles may cancel, and either continue cycle
[6.238s][info][gc,stats    ] under stop-the-world pause or result in stop-the-world Full GC. Increase heap size,
[6.238s][info][gc,stats    ] tune GC heuristics, set more aggressive pacing delay, or lower allocation rate
[6.238s][info][gc,stats    ] to avoid Degenerated and Full GC cycles.
[6.238s][info][gc,stats    ] 
[6.238s][info][gc,stats    ]     1 successful concurrent GCs
[6.238s][info][gc,stats    ]       0 invoked explicitly
[6.238s][info][gc,stats    ]       0 invoked implicitly
[6.238s][info][gc,stats    ] 
[6.238s][info][gc,stats    ]     0 Degenerated GCs
[6.238s][info][gc,stats    ]       0 caused by allocation failure
[6.238s][info][gc,stats    ]       0 upgraded to Full GC
[6.238s][info][gc,stats    ] 
[6.238s][info][gc,stats    ]     0 Full GCs
[6.238s][info][gc,stats    ]       0 invoked explicitly
[6.238s][info][gc,stats    ]       0 invoked implicitly
[6.238s][info][gc,stats    ]       0 caused by allocation failure
[6.238s][info][gc,stats    ]       0 upgraded from Degenerated GC
[6.238s][info][gc,stats    ] 
[6.238s][info][gc,stats    ] 
