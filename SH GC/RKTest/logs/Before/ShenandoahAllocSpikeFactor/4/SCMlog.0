[0.007s][info][gc] Heuristics ergonomically sets -XX:+ExplicitGCInvokesConcurrent
[0.007s][info][gc] Heuristics ergonomically sets -XX:+ShenandoahImplicitGCInvokesConcurrent
[0.007s][info][gc] Using Shenandoah
[0.009s][info][gc,ergo] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[0.009s][info][gc,init] Version: 21.0.7+6-Ubuntu-0ubuntu122.04 (release)
[0.009s][info][gc,init] CPUs: 4 total, 4 available
[0.009s][info][gc,init] Memory: 7937M
[0.009s][info][gc,init] Large Page Support: Disabled
[0.009s][info][gc,init] NUMA Support: Disabled
[0.009s][info][gc,init] Compressed Oops: Enabled (32-bit)
[0.009s][info][gc,init] Heap Min Capacity: 6656K
[0.009s][info][gc,init] Heap Initial Capacity: 127488K
[0.009s][info][gc,init] Heap Max Capacity: 2032128K
[0.009s][info][gc,init] Pre-touch: Disabled
[0.009s][info][gc,init] Mode: Snapshot-At-The-Beginning (SATB)
[0.009s][info][gc,init] Heuristics: Adaptive
[0.009s][info][gc,init] Heap Region Count: 3969
[0.009s][info][gc,init] Heap Region Size: 512K
[0.009s][info][gc,init] TLAB Size Max: 512K
[0.009s][info][gc,init] Humongous Object Threshold: 512K
[0.009s][info][gc,init] Parallel Workers: 8
[0.009s][info][gc,init] Concurrent Workers: 2
[0.019s][info][gc,metaspace] CDS archive(s) mapped at: [0x00007f8987000000-0x00007f8987c97000-0x00007f8987c97000), size 13201408, SharedBaseAddress: 0x00007f8987000000, ArchiveRelocationMode: 1.
[0.019s][info][gc,metaspace] Compressed class space mapped at: 0x00007f8988000000-0x00007f89c8000000, reserved size: 1073741824
[0.019s][info][gc,metaspace] Narrow klass base: 0x00007f8987000000, Narrow klass shift: 0, Narrow klass range: 0x100000000
[1.375s][info][gc          ] Trigger: Metadata GC Threshold
[1.375s][info][gc,ergo     ] Free: 1789M, Max: 512K regular, 1789M humongous, Frag: 0% external, 0% internal; Reserve: 101888K, Max: 512K
[1.375s][info][gc,start    ] GC(0) Concurrent reset
[1.376s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reset
[1.376s][info][gc,ergo     ] GC(0) Pacer for Reset. Non-Taxable: 1984M
[1.376s][info][gc          ] GC(0) Concurrent reset 0.393ms
[1.376s][info][gc,start    ] GC(0) Pause Init Mark (unload classes)
[1.377s][info][gc,task     ] GC(0) Using 8 of 8 workers for init marking
[1.377s][info][gc,ergo     ] GC(0) Pacer for Mark. Expected Live: 198M, Free: 1789M, Non-Taxable: 178M, Alloc Tax Rate: 0.1x
[1.377s][info][gc          ] GC(0) Pause Init Mark (unload classes) 0.622ms
[1.378s][info][gc,start    ] GC(0) Concurrent marking roots
[1.378s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking roots
[1.380s][info][gc          ] GC(0) Concurrent marking roots 2.293ms
[1.381s][info][gc,start    ] GC(0) Concurrent marking (unload classes)
[1.381s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking
[1.391s][info][gc          ] GC(0) Concurrent marking (unload classes) 10.057ms
[1.391s][info][gc,start    ] GC(0) Pause Final Mark (unload classes)
[1.391s][info][gc,task     ] GC(0) Using 8 of 8 workers for final marking
[1.392s][info][gc,ergo     ] GC(0) Adaptive CSet Selection. Target Free: 281M, Actual Free: 1893M, Max CSet: 84672K, Min Garbage: 0B
[1.392s][info][gc,ergo     ] GC(0) Collectable Garbage: 82597K (99%), Immediate: 5855K (7%), CSet: 76742K (92%)
[1.392s][info][gc,ergo     ] GC(0) Pacer for Evacuation. Used CSet: 84480K, Free: 1794M, Non-Taxable: 179M, Alloc Tax Rate: 1.1x
[1.392s][info][gc          ] GC(0) Pause Final Mark (unload classes) 1.780ms
[1.392s][info][gc,start    ] GC(0) Concurrent thread roots
[1.393s][info][gc,task     ] GC(0) Using 2 of 8 workers for Concurrent thread roots
[1.399s][info][gc          ] GC(0) Concurrent thread roots 6.307ms
[1.399s][info][gc,start    ] GC(0) Concurrent weak references
[1.399s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak references
[1.399s][info][gc,ref      ] GC(0) Encountered references: Soft: 3956, Weak: 2135, Final: 20, Phantom: 796
[1.399s][info][gc,ref      ] GC(0) Discovered  references: Soft: 0, Weak: 1277, Final: 20, Phantom: 485
[1.399s][info][gc,ref      ] GC(0) Enqueued    references: Soft: 0, Weak: 483, Final: 0, Phantom: 317
[1.399s][info][gc          ] GC(0) Concurrent weak references 0.452ms
[1.399s][info][gc,start    ] GC(0) Concurrent weak roots
[1.399s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak root
[1.402s][info][gc          ] GC(0) Concurrent weak roots 2.651ms
[1.404s][info][gc,start    ] GC(0) Concurrent cleanup
[1.404s][info][gc          ] GC(0) Concurrent cleanup 98M->93M(126M) 0.069ms
[1.404s][info][gc,ergo     ] GC(0) Free: 1793M, Max: 512K regular, 1787M humongous, Frag: 1% external, 0% internal; Reserve: 100352K, Max: 512K
[1.404s][info][gc,start    ] GC(0) Concurrent class unloading
[1.404s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent class unloading
[1.413s][info][gc          ] GC(0) Concurrent class unloading 8.602ms
[1.413s][info][gc,start    ] GC(0) Concurrent strong roots
[1.413s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent strong root
[1.414s][info][gc          ] GC(0) Concurrent strong roots 1.628ms
[1.414s][info][gc,start    ] GC(0) Concurrent evacuation
[1.415s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent evacuation
[1.421s][info][gc          ] GC(0) Concurrent evacuation 6.101ms
[1.421s][info][gc,start    ] GC(0) Pause Init Update Refs
[1.421s][info][gc,ergo     ] GC(0) Pacer for Update Refs. Used: 101M, Free: 1792M, Non-Taxable: 179M, Alloc Tax Rate: 1.1x
[1.421s][info][gc          ] GC(0) Pause Init Update Refs 0.054ms
[1.421s][info][gc,start    ] GC(0) Concurrent update references
[1.421s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reference update
[1.427s][info][gc          ] GC(0) Concurrent update references 5.845ms
[1.427s][info][gc,start    ] GC(0) Concurrent update thread roots
[1.428s][info][gc          ] GC(0) Concurrent update thread roots 0.332ms
[1.428s][info][gc,start    ] GC(0) Pause Final Update Refs
[1.428s][info][gc,task     ] GC(0) Using 8 of 8 workers for final reference update
[1.428s][info][gc          ] GC(0) Pause Final Update Refs 0.107ms
[1.428s][info][gc,start    ] GC(0) Concurrent cleanup
[1.428s][info][gc          ] GC(0) Concurrent cleanup 101M->18M(133M) 0.104ms
[1.428s][info][gc,ergo     ] Free: 1866M, Max: 512K regular, 1778M humongous, Frag: 5% external, 0% internal; Reserve: 101888K, Max: 512K
[1.428s][info][gc,stats    ] 
[1.428s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[1.428s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[1.428s][info][gc,stats    ] 
[1.428s][info][gc,stats    ] Concurrent Reset                    438 us
[1.428s][info][gc,stats    ] Pause Init Mark (G)                2269 us
[1.428s][info][gc,stats    ] Pause Init Mark (N)                 644 us
[1.428s][info][gc,stats    ]   Update Region States               26 us
[1.428s][info][gc,stats    ] Concurrent Mark Roots              2320 us, parallelism: 1.45x
[1.428s][info][gc,stats    ]   CMR: <total>                     3369 us
[1.428s][info][gc,stats    ]   CMR: Thread Roots                1177 us, workers (us): 1090,  86, ---, ---, ---, ---, ---, ---, 
[1.428s][info][gc,stats    ]   CMR: VM Strong Roots              799 us, workers (us): 598, 201, ---, ---, ---, ---, ---, ---, 
[1.428s][info][gc,stats    ]   CMR: CLDG Roots                  1394 us, workers (us): ---, 1394, ---, ---, ---, ---, ---, ---, 
[1.428s][info][gc,stats    ] Concurrent Marking                10080 us
[1.428s][info][gc,stats    ] Pause Final Mark (G)               1903 us
[1.428s][info][gc,stats    ] Pause Final Mark (N)               1793 us
[1.428s][info][gc,stats    ]   Finish Mark                      1550 us
[1.428s][info][gc,stats    ]   Update Region States               19 us
[1.428s][info][gc,stats    ]   Choose Collection Set             116 us
[1.428s][info][gc,stats    ]   Rebuild Free Set                   24 us
[1.428s][info][gc,stats    ] Concurrent Thread Roots            6340 us, parallelism: 0.05x
[1.428s][info][gc,stats    ]   CTR: <total>                      293 us
[1.428s][info][gc,stats    ]   CTR: Thread Roots                 293 us, workers (us): 142, 151, ---, ---, ---, ---, ---, ---, 
[1.428s][info][gc,stats    ] Concurrent Weak References          462 us, parallelism: 0.59x
[1.428s][info][gc,stats    ]   CWRF: <total>                     273 us
[1.428s][info][gc,stats    ]   CWRF: Weak References             273 us, workers (us): 272,   1, ---, ---, ---, ---, ---, ---, 
[1.428s][info][gc,stats    ] Concurrent Weak Roots              4633 us
[1.428s][info][gc,stats    ]   Roots                            2433 us, parallelism: 1.47x
[1.428s][info][gc,stats    ]     CWR: <total>                   3570 us
[1.428s][info][gc,stats    ]     CWR: Code Cache Roots           868 us, workers (us): 345, 523, ---, ---, ---, ---, ---, ---, 
[1.428s][info][gc,stats    ]     CWR: VM Weak Roots             2691 us, workers (us): 1665, 1026, ---, ---, ---, ---, ---, ---, 
[1.428s][info][gc,stats    ]     CWR: CLDG Roots                  11 us, workers (us):  11, ---, ---, ---, ---, ---, ---, ---, 
[1.428s][info][gc,stats    ]   Rendezvous                        176 us
[1.428s][info][gc,stats    ] Concurrent Cleanup                   85 us
[1.428s][info][gc,stats    ] Concurrent Class Unloading         8636 us
[1.428s][info][gc,stats    ]   Unlink Stale                     1818 us
[1.429s][info][gc,stats    ]     System Dictionary                47 us
[1.429s][info][gc,stats    ]     Weak Class Links                  0 us
[1.429s][info][gc,stats    ]     Code Roots                     1770 us
[1.429s][info][gc,stats    ]   Rendezvous                        252 us
[1.429s][info][gc,stats    ]   Purge Unlinked                   6510 us
[1.429s][info][gc,stats    ]     Code Roots                     6492 us
[1.429s][info][gc,stats    ]     CLDG                             17 us
[1.429s][info][gc,stats    ]     Exception Caches                  0 us
[1.429s][info][gc,stats    ] Concurrent Strong Roots            1784 us, parallelism: 0.82x
[1.429s][info][gc,stats    ]   CSR: <total>                     1458 us
[1.429s][info][gc,stats    ]   CSR: VM Strong Roots               23 us, workers (us):  22,   1, ---, ---, ---, ---, ---, ---, 
[1.429s][info][gc,stats    ]   CSR: CLDG Roots                  1435 us, workers (us): 1435, ---, ---, ---, ---, ---, ---, ---, 
[1.429s][info][gc,stats    ] Concurrent Evacuation              6137 us
[1.429s][info][gc,stats    ] Pause Init Update Refs (G)          702 us
[1.429s][info][gc,stats    ] Pause Init Update Refs (N)           66 us
[1.429s][info][gc,stats    ]   Manage GCLABs                       5 us
[1.429s][info][gc,stats    ] Concurrent Update Refs             5879 us
[1.429s][info][gc,stats    ] Concurrent Update Thread Roots      358 us
[1.429s][info][gc,stats    ] Pause Final Update Refs (G)         241 us
[1.429s][info][gc,stats    ] Pause Final Update Refs (N)         128 us
[1.429s][info][gc,stats    ]   Update Region States               21 us
[1.429s][info][gc,stats    ]   Trash Collection Set               12 us
[1.429s][info][gc,stats    ]   Rebuild Free Set                   23 us
[1.429s][info][gc,stats    ] Concurrent Cleanup                  120 us
[1.429s][info][gc,stats    ] 
[1.429s][info][gc,stats    ] Allocation pacing accrued:
[1.429s][info][gc,stats    ]       0 of  1420 ms (  0.0%): <total>
[1.429s][info][gc,stats    ]       0 of  1420 ms (  0.0%): <average total>
[1.429s][info][gc,stats    ] 
[1.429s][info][gc,metaspace] Metaspace: 21199K(21568K)->21464K(21824K) NonClass: 18860K(19072K)->19084K(19264K) Class: 2338K(2496K)->2379K(2560K)
[1.429s][info][gc,ergo     ] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[7.840s][info][gc          ] Cancelling GC: Stopping VM
[7.840s][info][gc,heap,exit] Heap
[7.840s][info][gc,heap,exit] Shenandoah Heap
[7.840s][info][gc,heap,exit]  1984M max, 1984M soft max, 133M committed, 37930K used
[7.840s][info][gc,heap,exit]  3969 x 512K regions
[7.840s][info][gc,heap,exit] Status: cancelled
[7.840s][info][gc,heap,exit] Reserved region:
[7.840s][info][gc,heap,exit]  - [0x0000000083f80000, 0x0000000100000000) 
[7.840s][info][gc,heap,exit] Collection set:
[7.840s][info][gc,heap,exit]  - map (vanilla): 0x000000000001107f
[7.840s][info][gc,heap,exit]  - map (biased):  0x0000000000010000
[7.840s][info][gc,heap,exit] 
[7.840s][info][gc,heap,exit]  Metaspace       used 25406K, committed 25728K, reserved 1114112K
[7.840s][info][gc,heap,exit]   class space    used 2924K, committed 3072K, reserved 1048576K
[7.840s][info][gc,stats    ] 
[7.841s][info][gc,stats    ] GC STATISTICS:
[7.841s][info][gc,stats    ]   "(G)" (gross) pauses include VM time: time to notify and block threads, do the pre-
[7.841s][info][gc,stats    ]         and post-safepoint housekeeping. Use -Xlog:safepoint+stats to dissect.
[7.841s][info][gc,stats    ]   "(N)" (net) pauses are the times spent in the actual GC code.
[7.841s][info][gc,stats    ]   "a" is average time for each phase, look at levels to see if average makes sense.
[7.841s][info][gc,stats    ]   "lvls" are quantiles: 0% (minimum), 25%, 50% (median), 75%, 100% (maximum).
[7.841s][info][gc,stats    ] 
[7.841s][info][gc,stats    ]   All times are wall-clock times, except per-root-class counters, that are sum over
[7.841s][info][gc,stats    ]   all workers. Dividing the <total> over the root stage time estimates parallelism.
[7.841s][info][gc,stats    ] 
[7.841s][info][gc,stats    ]   Pacing delays are measured from entering the pacing code till exiting it. Therefore,
[7.841s][info][gc,stats    ]   observed pacing delays may be higher than the threshold when paced thread spent more
[7.841s][info][gc,stats    ]   time in the pacing code. It usually happens when thread is de-scheduled while paced,
[7.841s][info][gc,stats    ]   OS takes longer to unblock the thread, or JVM experiences an STW pause.
[7.841s][info][gc,stats    ] 
[7.841s][info][gc,stats    ]   Higher delay would prevent application outpacing the GC, but it will hide the GC latencies
[7.841s][info][gc,stats    ]   from the STW pause times. Pacing affects the individual threads, and so it would also be
[7.841s][info][gc,stats    ]   invisible to the usual profiling tools, but would add up to end-to-end application latency.
[7.841s][info][gc,stats    ]   Raise max pacing delay with care.
[7.841s][info][gc,stats    ] 
[7.841s][info][gc,stats    ] Concurrent Reset               =    0.000 s (a =      438 us) (n =     1) (lvls, us =      438,      438,      438,      438,      438)
[7.841s][info][gc,stats    ] Pause Init Mark (G)            =    0.002 s (a =     2269 us) (n =     1) (lvls, us =     2266,     2266,     2266,     2266,     2269)
[7.841s][info][gc,stats    ] Pause Init Mark (N)            =    0.001 s (a =      644 us) (n =     1) (lvls, us =      643,      643,      643,      643,      644)
[7.841s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       26 us) (n =     1) (lvls, us =       26,       26,       26,       26,       26)
[7.841s][info][gc,stats    ] Concurrent Mark Roots          =    0.002 s (a =     2320 us) (n =     1) (lvls, us =     2305,     2305,     2305,     2305,     2320)
[7.841s][info][gc,stats    ]   CMR: <total>                 =    0.003 s (a =     3369 us) (n =     1) (lvls, us =     3359,     3359,     3359,     3359,     3369)
[7.841s][info][gc,stats    ]   CMR: Thread Roots            =    0.001 s (a =     1177 us) (n =     1) (lvls, us =     1172,     1172,     1172,     1172,     1177)
[7.841s][info][gc,stats    ]   CMR: VM Strong Roots         =    0.001 s (a =      799 us) (n =     1) (lvls, us =      799,      799,      799,      799,      799)
[7.841s][info][gc,stats    ]   CMR: CLDG Roots              =    0.001 s (a =     1394 us) (n =     1) (lvls, us =     1387,     1387,     1387,     1387,     1394)
[7.841s][info][gc,stats    ] Concurrent Marking             =    0.010 s (a =    10080 us) (n =     1) (lvls, us =     9961,     9961,     9961,     9961,    10080)
[7.841s][info][gc,stats    ] Pause Final Mark (G)           =    0.002 s (a =     1903 us) (n =     1) (lvls, us =     1895,     1895,     1895,     1895,     1903)
[7.841s][info][gc,stats    ] Pause Final Mark (N)           =    0.002 s (a =     1793 us) (n =     1) (lvls, us =     1777,     1777,     1777,     1777,     1793)
[7.841s][info][gc,stats    ]   Finish Mark                  =    0.002 s (a =     1550 us) (n =     1) (lvls, us =     1543,     1543,     1543,     1543,     1550)
[7.841s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       19 us) (n =     1) (lvls, us =       19,       19,       19,       19,       19)
[7.841s][info][gc,stats    ]   Choose Collection Set        =    0.000 s (a =      116 us) (n =     1) (lvls, us =      115,      115,      115,      115,      116)
[7.841s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       24 us) (n =     1) (lvls, us =       24,       24,       24,       24,       24)
[7.841s][info][gc,stats    ] Concurrent Thread Roots        =    0.006 s (a =     6340 us) (n =     1) (lvls, us =     6328,     6328,     6328,     6328,     6340)
[7.841s][info][gc,stats    ]   CTR: <total>                 =    0.000 s (a =      293 us) (n =     1) (lvls, us =      291,      291,      291,      291,      293)
[7.842s][info][gc,stats    ]   CTR: Thread Roots            =    0.000 s (a =      293 us) (n =     1) (lvls, us =      291,      291,      291,      291,      293)
[7.842s][info][gc,stats    ] Concurrent Weak References     =    0.000 s (a =      462 us) (n =     1) (lvls, us =      461,      461,      461,      461,      462)
[7.842s][info][gc,stats    ]   CWRF: <total>                =    0.000 s (a =      273 us) (n =     1) (lvls, us =      271,      271,      271,      271,      273)
[7.842s][info][gc,stats    ]   CWRF: Weak References        =    0.000 s (a =      273 us) (n =     1) (lvls, us =      271,      271,      271,      271,      273)
[7.842s][info][gc,stats    ] Concurrent Weak Roots          =    0.005 s (a =     4633 us) (n =     1) (lvls, us =     4629,     4629,     4629,     4629,     4633)
[7.842s][info][gc,stats    ]   Roots                        =    0.002 s (a =     2433 us) (n =     1) (lvls, us =     2422,     2422,     2422,     2422,     2433)
[7.842s][info][gc,stats    ]     CWR: <total>               =    0.004 s (a =     3570 us) (n =     1) (lvls, us =     3555,     3555,     3555,     3555,     3570)
[7.842s][info][gc,stats    ]     CWR: Code Cache Roots      =    0.001 s (a =      868 us) (n =     1) (lvls, us =      867,      867,      867,      867,      868)
[7.842s][info][gc,stats    ]     CWR: VM Weak Roots         =    0.003 s (a =     2691 us) (n =     1) (lvls, us =     2676,     2676,     2676,     2676,     2691)
[7.842s][info][gc,stats    ]     CWR: CLDG Roots            =    0.000 s (a =       11 us) (n =     1) (lvls, us =       11,       11,       11,       11,       11)
[7.842s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =      176 us) (n =     1) (lvls, us =      174,      174,      174,      174,      176)
[7.842s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =       85 us) (n =     1) (lvls, us =       85,       85,       85,       85,       85)
[7.842s][info][gc,stats    ] Concurrent Class Unloading     =    0.009 s (a =     8636 us) (n =     1) (lvls, us =     8633,     8633,     8633,     8633,     8636)
[7.842s][info][gc,stats    ]   Unlink Stale                 =    0.002 s (a =     1818 us) (n =     1) (lvls, us =     1816,     1816,     1816,     1816,     1818)
[7.842s][info][gc,stats    ]     System Dictionary          =    0.000 s (a =       47 us) (n =     1) (lvls, us =       46,       46,       46,       46,       47)
[7.842s][info][gc,stats    ]     Weak Class Links           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[7.842s][info][gc,stats    ]     Code Roots                 =    0.002 s (a =     1770 us) (n =     1) (lvls, us =     1758,     1758,     1758,     1758,     1770)
[7.842s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =      252 us) (n =     1) (lvls, us =      250,      250,      250,      250,      252)
[7.842s][info][gc,stats    ]   Purge Unlinked               =    0.007 s (a =     6510 us) (n =     1) (lvls, us =     6504,     6504,     6504,     6504,     6510)
[7.842s][info][gc,stats    ]     Code Roots                 =    0.006 s (a =     6492 us) (n =     1) (lvls, us =     6484,     6484,     6484,     6484,     6492)
[7.842s][info][gc,stats    ]     CLDG                       =    0.000 s (a =       17 us) (n =     1) (lvls, us =       17,       17,       17,       17,       17)
[7.842s][info][gc,stats    ]     Exception Caches           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[7.842s][info][gc,stats    ] Concurrent Strong Roots        =    0.002 s (a =     1784 us) (n =     1) (lvls, us =     1777,     1777,     1777,     1777,     1784)
[7.842s][info][gc,stats    ]   CSR: <total>                 =    0.001 s (a =     1458 us) (n =     1) (lvls, us =     1445,     1445,     1445,     1445,     1458)
[7.842s][info][gc,stats    ]   CSR: VM Strong Roots         =    0.000 s (a =       23 us) (n =     1) (lvls, us =       23,       23,       23,       23,       23)
[7.842s][info][gc,stats    ]   CSR: CLDG Roots              =    0.001 s (a =     1435 us) (n =     1) (lvls, us =     1426,     1426,     1426,     1426,     1435)
[7.842s][info][gc,stats    ] Concurrent Evacuation          =    0.006 s (a =     6137 us) (n =     1) (lvls, us =     6133,     6133,     6133,     6133,     6137)
[7.842s][info][gc,stats    ] Pause Init Update Refs (G)     =    0.001 s (a =      702 us) (n =     1) (lvls, us =      701,      701,      701,      701,      702)
[7.842s][info][gc,stats    ] Pause Init Update Refs (N)     =    0.000 s (a =       66 us) (n =     1) (lvls, us =       66,       66,       66,       66,       66)
[7.842s][info][gc,stats    ]   Manage GCLABs                =    0.000 s (a =        5 us) (n =     1) (lvls, us =        5,        5,        5,        5,        5)
[7.842s][info][gc,stats    ] Concurrent Update Refs         =    0.006 s (a =     5879 us) (n =     1) (lvls, us =     5859,     5859,     5859,     5859,     5879)
[7.842s][info][gc,stats    ] Concurrent Update Thread Roots =    0.000 s (a =      358 us) (n =     1) (lvls, us =      357,      357,      357,      357,      358)
[7.842s][info][gc,stats    ] Pause Final Update Refs (G)    =    0.000 s (a =      241 us) (n =     1) (lvls, us =      240,      240,      240,      240,      241)
[7.842s][info][gc,stats    ] Pause Final Update Refs (N)    =    0.000 s (a =      128 us) (n =     1) (lvls, us =      127,      127,      127,      127,      128)
[7.842s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       21 us) (n =     1) (lvls, us =       21,       21,       21,       21,       21)
[7.842s][info][gc,stats    ]   Trash Collection Set         =    0.000 s (a =       12 us) (n =     1) (lvls, us =       12,       12,       12,       12,       12)
[7.842s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       23 us) (n =     1) (lvls, us =       22,       22,       22,       22,       23)
[7.842s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =      120 us) (n =     1) (lvls, us =      119,      119,      119,      119,      120)
[7.842s][info][gc,stats    ] 
[7.843s][info][gc,stats    ] 
[7.843s][info][gc,stats    ] Under allocation pressure, concurrent cycles may cancel, and either continue cycle
[7.843s][info][gc,stats    ] under stop-the-world pause or result in stop-the-world Full GC. Increase heap size,
[7.843s][info][gc,stats    ] tune GC heuristics, set more aggressive pacing delay, or lower allocation rate
[7.843s][info][gc,stats    ] to avoid Degenerated and Full GC cycles.
[7.843s][info][gc,stats    ] 
[7.843s][info][gc,stats    ]     1 successful concurrent GCs
[7.843s][info][gc,stats    ]       0 invoked explicitly
[7.843s][info][gc,stats    ]       0 invoked implicitly
[7.843s][info][gc,stats    ] 
[7.843s][info][gc,stats    ]     0 Degenerated GCs
[7.843s][info][gc,stats    ]       0 caused by allocation failure
[7.843s][info][gc,stats    ]       0 upgraded to Full GC
[7.843s][info][gc,stats    ] 
[7.843s][info][gc,stats    ]     0 Full GCs
[7.843s][info][gc,stats    ]       0 invoked explicitly
[7.843s][info][gc,stats    ]       0 invoked implicitly
[7.843s][info][gc,stats    ]       0 caused by allocation failure
[7.843s][info][gc,stats    ]       0 upgraded from Degenerated GC
[7.843s][info][gc,stats    ] 
[7.843s][info][gc,stats    ] 
