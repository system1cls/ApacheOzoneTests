[0.004s][info][gc] Heuristics ergonomically sets -XX:+ExplicitGCInvokesConcurrent
[0.004s][info][gc] Heuristics ergonomically sets -XX:+ShenandoahImplicitGCInvokesConcurrent
[0.008s][info][gc] Using Shenandoah
[0.009s][info][gc,ergo] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[0.009s][info][gc,init] Version: 21.0.7+6-Ubuntu-0ubuntu122.04 (release)
[0.009s][info][gc,init] CPUs: 4 total, 4 available
[0.009s][info][gc,init] Memory: 7937M
[0.009s][info][gc,init] Large Page Support: Disabled
[0.009s][info][gc,init] NUMA Support: Disabled
[0.009s][info][gc,init] Compressed Oops: Enabled (32-bit)
[0.009s][info][gc,init] Heap Min Capacity: 6656K
[0.009s][info][gc,init] Heap Initial Capacity: 127488K
[0.009s][info][gc,init] Heap Max Capacity: 2032128K
[0.009s][info][gc,init] Pre-touch: Disabled
[0.009s][info][gc,init] Mode: Snapshot-At-The-Beginning (SATB)
[0.009s][info][gc,init] Heuristics: Adaptive
[0.009s][info][gc,init] Heap Region Count: 3969
[0.009s][info][gc,init] Heap Region Size: 512K
[0.009s][info][gc,init] TLAB Size Max: 512K
[0.009s][info][gc,init] Humongous Object Threshold: 512K
[0.009s][info][gc,init] Parallel Workers: 8
[0.009s][info][gc,init] Concurrent Workers: 2
[0.016s][info][gc,metaspace] CDS archive(s) mapped at: [0x00007f829b000000-0x00007f829bc97000-0x00007f829bc97000), size 13201408, SharedBaseAddress: 0x00007f829b000000, ArchiveRelocationMode: 1.
[0.017s][info][gc,metaspace] Compressed class space mapped at: 0x00007f829c000000-0x00007f82dc000000, reserved size: 1073741824
[0.017s][info][gc,metaspace] Narrow klass base: 0x00007f829b000000, Narrow klass shift: 0, Narrow klass range: 0x100000000
[1.765s][info][gc          ] Trigger: Metadata GC Threshold
[1.765s][info][gc,ergo     ] Free: 1745M, Max: 512K regular, 1745M humongous, Frag: 0% external, 0% internal; Reserve: 101888K, Max: 512K
[1.765s][info][gc,start    ] GC(0) Concurrent reset
[1.774s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reset
[1.774s][info][gc,ergo     ] GC(0) Pacer for Reset. Non-Taxable: 1984M
[1.774s][info][gc          ] GC(0) Concurrent reset 8.400ms
[1.774s][info][gc,start    ] GC(0) Pause Init Mark (unload classes)
[1.775s][info][gc,task     ] GC(0) Using 8 of 8 workers for init marking
[1.775s][info][gc,ergo     ] GC(0) Pacer for Mark. Expected Live: 198M, Free: 1744M, Non-Taxable: 174M, Alloc Tax Rate: 0.1x
[1.775s][info][gc          ] GC(0) Pause Init Mark (unload classes) 0.477ms
[1.775s][info][gc,start    ] GC(0) Concurrent marking roots
[1.775s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking roots
[1.784s][info][gc          ] GC(0) Concurrent marking roots 9.036ms
[1.784s][info][gc,start    ] GC(0) Concurrent marking (unload classes)
[1.784s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking
[1.848s][info][gc          ] GC(0) Concurrent marking (unload classes) 64.085ms
[1.848s][info][gc,start    ] GC(0) Pause Final Mark (unload classes)
[1.848s][info][gc,task     ] GC(0) Using 8 of 8 workers for final marking
[1.855s][info][gc,ergo     ] GC(0) Adaptive CSet Selection. Target Free: 281M, Actual Free: 1845M, Max CSet: 84672K, Min Garbage: 0B
[1.855s][info][gc,ergo     ] GC(0) Collectable Garbage: 74571K (98%), Immediate: 4847K (6%), CSet: 69724K (92%)
[1.855s][info][gc,ergo     ] GC(0) Pacer for Evacuation. Used CSet: 77824K, Free: 1746M, Non-Taxable: 174M, Alloc Tax Rate: 1.1x
[1.855s][info][gc          ] GC(0) Pause Final Mark (unload classes) 7.621ms
[1.855s][info][gc,start    ] GC(0) Concurrent thread roots
[1.856s][info][gc,task     ] GC(0) Using 2 of 8 workers for Concurrent thread roots
[1.856s][info][gc          ] GC(0) Concurrent thread roots 0.326ms
[1.856s][info][gc,start    ] GC(0) Concurrent weak references
[1.856s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak references
[1.856s][info][gc,ref      ] GC(0) Encountered references: Soft: 3960, Weak: 2102, Final: 4, Phantom: 821
[1.856s][info][gc,ref      ] GC(0) Discovered  references: Soft: 0, Weak: 1260, Final: 0, Phantom: 612
[1.856s][info][gc,ref      ] GC(0) Enqueued    references: Soft: 0, Weak: 502, Final: 0, Phantom: 231
[1.856s][info][gc          ] GC(0) Concurrent weak references 0.512ms
[1.856s][info][gc,start    ] GC(0) Concurrent weak roots
[1.857s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak root
[1.859s][info][gc          ] GC(0) Concurrent weak roots 2.365ms
[1.859s][info][gc,start    ] GC(0) Concurrent cleanup
[1.859s][info][gc          ] GC(0) Concurrent cleanup 142M->137M(145M) 0.123ms
[1.859s][info][gc,ergo     ] GC(0) Free: 1745M, Max: 512K regular, 1740M humongous, Frag: 1% external, 0% internal; Reserve: 101247K, Max: 512K
[1.859s][info][gc,start    ] GC(0) Concurrent class unloading
[1.859s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent class unloading
[1.872s][info][gc          ] GC(0) Concurrent class unloading 13.350ms
[1.872s][info][gc,start    ] GC(0) Concurrent strong roots
[1.872s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent strong root
[1.874s][info][gc          ] GC(0) Concurrent strong roots 1.341ms
[1.874s][info][gc,start    ] GC(0) Concurrent evacuation
[1.874s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent evacuation
[1.884s][info][gc          ] GC(0) Concurrent evacuation 9.913ms
[1.884s][info][gc,start    ] GC(0) Pause Init Update Refs
[1.884s][info][gc,ergo     ] GC(0) Pacer for Update Refs. Used: 146M, Free: 1744M, Non-Taxable: 174M, Alloc Tax Rate: 1.1x
[1.884s][info][gc          ] GC(0) Pause Init Update Refs 0.038ms
[1.884s][info][gc,start    ] GC(0) Concurrent update references
[1.884s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reference update
[1.910s][info][gc          ] GC(0) Concurrent update references 25.673ms
[1.910s][info][gc,start    ] GC(0) Concurrent update thread roots
[1.910s][info][gc          ] GC(0) Concurrent update thread roots 0.597ms
[1.910s][info][gc,start    ] GC(0) Pause Final Update Refs
[1.910s][info][gc,task     ] GC(0) Using 8 of 8 workers for final reference update
[1.910s][info][gc          ] GC(0) Pause Final Update Refs 0.105ms
[1.911s][info][gc,start    ] GC(0) Concurrent cleanup
[1.911s][info][gc          ] GC(0) Concurrent cleanup 147M->71M(153M) 0.064ms
[1.911s][info][gc,ergo     ] Free: 1811M, Max: 512K regular, 1731M humongous, Frag: 5% external, 0% internal; Reserve: 101888K, Max: 512K
[1.911s][info][gc,stats    ] 
[1.911s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[1.911s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[1.911s][info][gc,stats    ] 
[1.911s][info][gc,stats    ] Concurrent Reset                   8438 us
[1.911s][info][gc,stats    ] Pause Init Mark (G)                 727 us
[1.911s][info][gc,stats    ] Pause Init Mark (N)                 499 us
[1.911s][info][gc,stats    ]   Update Region States               27 us
[1.911s][info][gc,stats    ] Concurrent Mark Roots              9069 us, parallelism: 1.88x
[1.911s][info][gc,stats    ]   CMR: <total>                    17072 us
[1.911s][info][gc,stats    ]   CMR: Thread Roots               13505 us, workers (us): 7083, 6422, ---, ---, ---, ---, ---, ---, 
[1.911s][info][gc,stats    ]   CMR: VM Strong Roots             1914 us, workers (us): 1053, 861, ---, ---, ---, ---, ---, ---, 
[1.911s][info][gc,stats    ]   CMR: CLDG Roots                  1653 us, workers (us): ---, 1653, ---, ---, ---, ---, ---, ---, 
[1.911s][info][gc,stats    ] Concurrent Marking                64127 us
[1.911s][info][gc,stats    ] Pause Final Mark (G)               7673 us
[1.911s][info][gc,stats    ] Pause Final Mark (N)               7634 us
[1.911s][info][gc,stats    ]   Finish Mark                      7407 us
[1.911s][info][gc,stats    ]   Update Region States               41 us
[1.911s][info][gc,stats    ]   Choose Collection Set             108 us
[1.911s][info][gc,stats    ]   Rebuild Free Set                   19 us
[1.911s][info][gc,stats    ] Concurrent Thread Roots             354 us, parallelism: 0.78x
[1.911s][info][gc,stats    ]   CTR: <total>                      277 us
[1.911s][info][gc,stats    ]   CTR: Thread Roots                 277 us, workers (us): 277,   0, ---, ---, ---, ---, ---, ---, 
[1.911s][info][gc,stats    ] Concurrent Weak References          645 us, parallelism: 0.68x
[1.911s][info][gc,stats    ]   CWRF: <total>                     442 us
[1.911s][info][gc,stats    ]   CWRF: Weak References             442 us, workers (us):  33, 409, ---, ---, ---, ---, ---, ---, 
[1.911s][info][gc,stats    ] Concurrent Weak Roots              2389 us
[1.911s][info][gc,stats    ]   Roots                            1848 us, parallelism: 1.54x
[1.911s][info][gc,stats    ]     CWR: <total>                   2854 us
[1.911s][info][gc,stats    ]     CWR: Code Cache Roots           750 us, workers (us): 394, 356, ---, ---, ---, ---, ---, ---, 
[1.911s][info][gc,stats    ]     CWR: VM Weak Roots             2086 us, workers (us): 1352, 735, ---, ---, ---, ---, ---, ---, 
[1.911s][info][gc,stats    ]     CWR: CLDG Roots                  18 us, workers (us): ---,  18, ---, ---, ---, ---, ---, ---, 
[1.911s][info][gc,stats    ]   Rendezvous                        102 us
[1.911s][info][gc,stats    ] Concurrent Cleanup                  137 us
[1.911s][info][gc,stats    ] Concurrent Class Unloading        13402 us
[1.911s][info][gc,stats    ]   Unlink Stale                     8289 us
[1.911s][info][gc,stats    ]     System Dictionary                49 us
[1.911s][info][gc,stats    ]     Weak Class Links                  0 us
[1.911s][info][gc,stats    ]     Code Roots                     8239 us
[1.911s][info][gc,stats    ]   Rendezvous                        642 us
[1.911s][info][gc,stats    ]   Purge Unlinked                   4397 us
[1.911s][info][gc,stats    ]     Code Roots                     4384 us
[1.911s][info][gc,stats    ]     CLDG                             12 us
[1.911s][info][gc,stats    ]     Exception Caches                  0 us
[1.911s][info][gc,stats    ] Concurrent Strong Roots            1356 us, parallelism: 0.96x
[1.911s][info][gc,stats    ]   CSR: <total>                     1306 us
[1.911s][info][gc,stats    ]   CSR: VM Strong Roots               38 us, workers (us):  11,  26, ---, ---, ---, ---, ---, ---, 
[1.911s][info][gc,stats    ]   CSR: CLDG Roots                  1269 us, workers (us): 1269, ---, ---, ---, ---, ---, ---, ---, 
[1.911s][info][gc,stats    ] Concurrent Evacuation              9948 us
[1.911s][info][gc,stats    ] Pause Init Update Refs (G)          145 us
[1.911s][info][gc,stats    ] Pause Init Update Refs (N)           47 us
[1.911s][info][gc,stats    ]   Manage GCLABs                       4 us
[1.911s][info][gc,stats    ] Concurrent Update Refs            25736 us
[1.911s][info][gc,stats    ] Concurrent Update Thread Roots      625 us
[1.911s][info][gc,stats    ] Pause Final Update Refs (G)         234 us
[1.911s][info][gc,stats    ] Pause Final Update Refs (N)         131 us
[1.911s][info][gc,stats    ]   Update Region States               48 us
[1.911s][info][gc,stats    ]   Trash Collection Set                5 us
[1.911s][info][gc,stats    ]   Rebuild Free Set                   20 us
[1.911s][info][gc,stats    ] Concurrent Cleanup                   76 us
[1.911s][info][gc,stats    ] 
[1.911s][info][gc,stats    ] Allocation pacing accrued:
[1.911s][info][gc,stats    ]       0 of  1903 ms (  0.0%): <total>
[1.911s][info][gc,stats    ]       0 of  1903 ms (  0.0%): <average total>
[1.911s][info][gc,stats    ] 
[1.911s][info][gc,metaspace] Metaspace: 21198K(21632K)->21967K(22336K) NonClass: 18847K(19072K)->19516K(19712K) Class: 2351K(2560K)->2450K(2624K)
[1.911s][info][gc,ergo     ] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[8.222s][info][gc          ] Cancelling GC: Stopping VM
[8.223s][info][gc,heap,exit] Heap
[8.223s][info][gc,heap,exit] Shenandoah Heap
[8.223s][info][gc,heap,exit]  1984M max, 1984M soft max, 153M committed, 84921K used
[8.223s][info][gc,heap,exit]  3969 x 512K regions
[8.223s][info][gc,heap,exit] Status: cancelled
[8.223s][info][gc,heap,exit] Reserved region:
[8.223s][info][gc,heap,exit]  - [0x0000000083f80000, 0x0000000100000000) 
[8.223s][info][gc,heap,exit] Collection set:
[8.223s][info][gc,heap,exit]  - map (vanilla): 0x000000000001107f
[8.223s][info][gc,heap,exit]  - map (biased):  0x0000000000010000
[8.223s][info][gc,heap,exit] 
[8.223s][info][gc,heap,exit]  Metaspace       used 25043K, committed 25344K, reserved 1114112K
[8.223s][info][gc,heap,exit]   class space    used 2775K, committed 2880K, reserved 1048576K
[8.223s][info][gc,stats    ] 
[8.223s][info][gc,stats    ] GC STATISTICS:
[8.223s][info][gc,stats    ]   "(G)" (gross) pauses include VM time: time to notify and block threads, do the pre-
[8.223s][info][gc,stats    ]         and post-safepoint housekeeping. Use -Xlog:safepoint+stats to dissect.
[8.223s][info][gc,stats    ]   "(N)" (net) pauses are the times spent in the actual GC code.
[8.223s][info][gc,stats    ]   "a" is average time for each phase, look at levels to see if average makes sense.
[8.223s][info][gc,stats    ]   "lvls" are quantiles: 0% (minimum), 25%, 50% (median), 75%, 100% (maximum).
[8.223s][info][gc,stats    ] 
[8.223s][info][gc,stats    ]   All times are wall-clock times, except per-root-class counters, that are sum over
[8.223s][info][gc,stats    ]   all workers. Dividing the <total> over the root stage time estimates parallelism.
[8.223s][info][gc,stats    ] 
[8.223s][info][gc,stats    ]   Pacing delays are measured from entering the pacing code till exiting it. Therefore,
[8.223s][info][gc,stats    ]   observed pacing delays may be higher than the threshold when paced thread spent more
[8.223s][info][gc,stats    ]   time in the pacing code. It usually happens when thread is de-scheduled while paced,
[8.223s][info][gc,stats    ]   OS takes longer to unblock the thread, or JVM experiences an STW pause.
[8.223s][info][gc,stats    ] 
[8.223s][info][gc,stats    ]   Higher delay would prevent application outpacing the GC, but it will hide the GC latencies
[8.223s][info][gc,stats    ]   from the STW pause times. Pacing affects the individual threads, and so it would also be
[8.223s][info][gc,stats    ]   invisible to the usual profiling tools, but would add up to end-to-end application latency.
[8.223s][info][gc,stats    ]   Raise max pacing delay with care.
[8.223s][info][gc,stats    ] 
[8.223s][info][gc,stats    ] Concurrent Reset               =    0.008 s (a =     8438 us) (n =     1) (lvls, us =     8438,     8438,     8438,     8438,     8438)
[8.223s][info][gc,stats    ] Pause Init Mark (G)            =    0.001 s (a =      727 us) (n =     1) (lvls, us =      727,      727,      727,      727,      727)
[8.223s][info][gc,stats    ] Pause Init Mark (N)            =    0.000 s (a =      499 us) (n =     1) (lvls, us =      498,      498,      498,      498,      499)
[8.223s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       27 us) (n =     1) (lvls, us =       27,       27,       27,       27,       27)
[8.223s][info][gc,stats    ] Concurrent Mark Roots          =    0.009 s (a =     9069 us) (n =     1) (lvls, us =     9062,     9062,     9062,     9062,     9069)
[8.223s][info][gc,stats    ]   CMR: <total>                 =    0.017 s (a =    17072 us) (n =     1) (lvls, us =    16992,    16992,    16992,    16992,    17072)
[8.223s][info][gc,stats    ]   CMR: Thread Roots            =    0.014 s (a =    13505 us) (n =     1) (lvls, us =    13477,    13477,    13477,    13477,    13505)
[8.223s][info][gc,stats    ]   CMR: VM Strong Roots         =    0.002 s (a =     1914 us) (n =     1) (lvls, us =     1895,     1895,     1895,     1895,     1914)
[8.223s][info][gc,stats    ]   CMR: CLDG Roots              =    0.002 s (a =     1653 us) (n =     1) (lvls, us =     1641,     1641,     1641,     1641,     1653)
[8.223s][info][gc,stats    ] Concurrent Marking             =    0.064 s (a =    64127 us) (n =     1) (lvls, us =    64063,    64063,    64063,    64063,    64127)
[8.223s][info][gc,stats    ] Pause Final Mark (G)           =    0.008 s (a =     7673 us) (n =     1) (lvls, us =     7656,     7656,     7656,     7656,     7673)
[8.223s][info][gc,stats    ] Pause Final Mark (N)           =    0.008 s (a =     7634 us) (n =     1) (lvls, us =     7617,     7617,     7617,     7617,     7634)
[8.223s][info][gc,stats    ]   Finish Mark                  =    0.007 s (a =     7407 us) (n =     1) (lvls, us =     7402,     7402,     7402,     7402,     7407)
[8.224s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       41 us) (n =     1) (lvls, us =       41,       41,       41,       41,       41)
[8.224s][info][gc,stats    ]   Choose Collection Set        =    0.000 s (a =      108 us) (n =     1) (lvls, us =      107,      107,      107,      107,      108)
[8.224s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       19 us) (n =     1) (lvls, us =       19,       19,       19,       19,       19)
[8.224s][info][gc,stats    ] Concurrent Thread Roots        =    0.000 s (a =      354 us) (n =     1) (lvls, us =      354,      354,      354,      354,      354)
[8.224s][info][gc,stats    ]   CTR: <total>                 =    0.000 s (a =      277 us) (n =     1) (lvls, us =      275,      275,      275,      275,      277)
[8.224s][info][gc,stats    ]   CTR: Thread Roots            =    0.000 s (a =      277 us) (n =     1) (lvls, us =      275,      275,      275,      275,      277)
[8.224s][info][gc,stats    ] Concurrent Weak References     =    0.001 s (a =      645 us) (n =     1) (lvls, us =      645,      645,      645,      645,      645)
[8.224s][info][gc,stats    ]   CWRF: <total>                =    0.000 s (a =      442 us) (n =     1) (lvls, us =      441,      441,      441,      441,      442)
[8.224s][info][gc,stats    ]   CWRF: Weak References        =    0.000 s (a =      442 us) (n =     1) (lvls, us =      441,      441,      441,      441,      442)
[8.224s][info][gc,stats    ] Concurrent Weak Roots          =    0.002 s (a =     2389 us) (n =     1) (lvls, us =     2383,     2383,     2383,     2383,     2389)
[8.224s][info][gc,stats    ]   Roots                        =    0.002 s (a =     1848 us) (n =     1) (lvls, us =     1836,     1836,     1836,     1836,     1848)
[8.224s][info][gc,stats    ]     CWR: <total>               =    0.003 s (a =     2854 us) (n =     1) (lvls, us =     2852,     2852,     2852,     2852,     2854)
[8.224s][info][gc,stats    ]     CWR: Code Cache Roots      =    0.001 s (a =      750 us) (n =     1) (lvls, us =      750,      750,      750,      750,      750)
[8.224s][info][gc,stats    ]     CWR: VM Weak Roots         =    0.002 s (a =     2086 us) (n =     1) (lvls, us =     2070,     2070,     2070,     2070,     2086)
[8.224s][info][gc,stats    ]     CWR: CLDG Roots            =    0.000 s (a =       18 us) (n =     1) (lvls, us =       18,       18,       18,       18,       18)
[8.224s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =      102 us) (n =     1) (lvls, us =      102,      102,      102,      102,      102)
[8.224s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =      137 us) (n =     1) (lvls, us =      137,      137,      137,      137,      137)
[8.224s][info][gc,stats    ] Concurrent Class Unloading     =    0.013 s (a =    13402 us) (n =     1) (lvls, us =    13281,    13281,    13281,    13281,    13402)
[8.224s][info][gc,stats    ]   Unlink Stale                 =    0.008 s (a =     8289 us) (n =     1) (lvls, us =     8281,     8281,     8281,     8281,     8289)
[8.224s][info][gc,stats    ]     System Dictionary          =    0.000 s (a =       49 us) (n =     1) (lvls, us =       49,       49,       49,       49,       49)
[8.224s][info][gc,stats    ]     Weak Class Links           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[8.224s][info][gc,stats    ]     Code Roots                 =    0.008 s (a =     8239 us) (n =     1) (lvls, us =     8223,     8223,     8223,     8223,     8239)
[8.224s][info][gc,stats    ]   Rendezvous                   =    0.001 s (a =      642 us) (n =     1) (lvls, us =      641,      641,      641,      641,      642)
[8.224s][info][gc,stats    ]   Purge Unlinked               =    0.004 s (a =     4397 us) (n =     1) (lvls, us =     4395,     4395,     4395,     4395,     4397)
[8.224s][info][gc,stats    ]     Code Roots                 =    0.004 s (a =     4384 us) (n =     1) (lvls, us =     4375,     4375,     4375,     4375,     4384)
[8.224s][info][gc,stats    ]     CLDG                       =    0.000 s (a =       12 us) (n =     1) (lvls, us =       12,       12,       12,       12,       12)
[8.224s][info][gc,stats    ]     Exception Caches           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[8.224s][info][gc,stats    ] Concurrent Strong Roots        =    0.001 s (a =     1356 us) (n =     1) (lvls, us =     1348,     1348,     1348,     1348,     1356)
[8.224s][info][gc,stats    ]   CSR: <total>                 =    0.001 s (a =     1306 us) (n =     1) (lvls, us =     1289,     1289,     1289,     1289,     1306)
[8.224s][info][gc,stats    ]   CSR: VM Strong Roots         =    0.000 s (a =       38 us) (n =     1) (lvls, us =       38,       38,       38,       38,       38)
[8.224s][info][gc,stats    ]   CSR: CLDG Roots              =    0.001 s (a =     1269 us) (n =     1) (lvls, us =     1250,     1250,     1250,     1250,     1269)
[8.224s][info][gc,stats    ] Concurrent Evacuation          =    0.010 s (a =     9948 us) (n =     1) (lvls, us =     9941,     9941,     9941,     9941,     9948)
[8.224s][info][gc,stats    ] Pause Init Update Refs (G)     =    0.000 s (a =      145 us) (n =     1) (lvls, us =      145,      145,      145,      145,      145)
[8.224s][info][gc,stats    ] Pause Init Update Refs (N)     =    0.000 s (a =       47 us) (n =     1) (lvls, us =       47,       47,       47,       47,       47)
[8.224s][info][gc,stats    ]   Manage GCLABs                =    0.000 s (a =        4 us) (n =     1) (lvls, us =        4,        4,        4,        4,        4)
[8.224s][info][gc,stats    ] Concurrent Update Refs         =    0.026 s (a =    25736 us) (n =     1) (lvls, us =    25586,    25586,    25586,    25586,    25736)
[8.224s][info][gc,stats    ] Concurrent Update Thread Roots =    0.001 s (a =      625 us) (n =     1) (lvls, us =      623,      623,      623,      623,      625)
[8.224s][info][gc,stats    ] Pause Final Update Refs (G)    =    0.000 s (a =      234 us) (n =     1) (lvls, us =      232,      232,      232,      232,      234)
[8.224s][info][gc,stats    ] Pause Final Update Refs (N)    =    0.000 s (a =      131 us) (n =     1) (lvls, us =      129,      129,      129,      129,      131)
[8.224s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       48 us) (n =     1) (lvls, us =       48,       48,       48,       48,       48)
[8.224s][info][gc,stats    ]   Trash Collection Set         =    0.000 s (a =        5 us) (n =     1) (lvls, us =        5,        5,        5,        5,        5)
[8.224s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       20 us) (n =     1) (lvls, us =       20,       20,       20,       20,       20)
[8.224s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =       76 us) (n =     1) (lvls, us =       76,       76,       76,       76,       76)
[8.224s][info][gc,stats    ] 
[8.224s][info][gc,stats    ] 
[8.224s][info][gc,stats    ] Under allocation pressure, concurrent cycles may cancel, and either continue cycle
[8.224s][info][gc,stats    ] under stop-the-world pause or result in stop-the-world Full GC. Increase heap size,
[8.224s][info][gc,stats    ] tune GC heuristics, set more aggressive pacing delay, or lower allocation rate
[8.224s][info][gc,stats    ] to avoid Degenerated and Full GC cycles.
[8.224s][info][gc,stats    ] 
[8.224s][info][gc,stats    ]     1 successful concurrent GCs
[8.224s][info][gc,stats    ]       0 invoked explicitly
[8.224s][info][gc,stats    ]       0 invoked implicitly
[8.224s][info][gc,stats    ] 
[8.224s][info][gc,stats    ]     0 Degenerated GCs
[8.224s][info][gc,stats    ]       0 caused by allocation failure
[8.224s][info][gc,stats    ]       0 upgraded to Full GC
[8.224s][info][gc,stats    ] 
[8.224s][info][gc,stats    ]     0 Full GCs
[8.224s][info][gc,stats    ]       0 invoked explicitly
[8.224s][info][gc,stats    ]       0 invoked implicitly
[8.224s][info][gc,stats    ]       0 caused by allocation failure
[8.224s][info][gc,stats    ]       0 upgraded from Degenerated GC
[8.224s][info][gc,stats    ] 
[8.224s][info][gc,stats    ] 
