[0.007s][info][gc] Heuristics ergonomically sets -XX:+ExplicitGCInvokesConcurrent
[0.008s][info][gc] Heuristics ergonomically sets -XX:+ShenandoahImplicitGCInvokesConcurrent
[0.008s][info][gc] Using Shenandoah
[0.009s][info][gc,ergo] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[0.010s][info][gc,init] Version: 21.0.7+6-Ubuntu-0ubuntu122.04 (release)
[0.010s][info][gc,init] CPUs: 4 total, 4 available
[0.010s][info][gc,init] Memory: 7937M
[0.010s][info][gc,init] Large Page Support: Disabled
[0.010s][info][gc,init] NUMA Support: Disabled
[0.010s][info][gc,init] Compressed Oops: Enabled (32-bit)
[0.010s][info][gc,init] Heap Min Capacity: 6656K
[0.010s][info][gc,init] Heap Initial Capacity: 127488K
[0.010s][info][gc,init] Heap Max Capacity: 2032128K
[0.010s][info][gc,init] Pre-touch: Disabled
[0.010s][info][gc,init] Mode: Snapshot-At-The-Beginning (SATB)
[0.010s][info][gc,init] Heuristics: Adaptive
[0.010s][info][gc,init] Heap Region Count: 3969
[0.010s][info][gc,init] Heap Region Size: 512K
[0.010s][info][gc,init] TLAB Size Max: 512K
[0.010s][info][gc,init] Humongous Object Threshold: 512K
[0.010s][info][gc,init] Parallel Workers: 8
[0.010s][info][gc,init] Concurrent Workers: 2
[0.020s][info][gc,metaspace] CDS archive(s) mapped at: [0x00007fa307000000-0x00007fa307c97000-0x00007fa307c97000), size 13201408, SharedBaseAddress: 0x00007fa307000000, ArchiveRelocationMode: 1.
[0.020s][info][gc,metaspace] Compressed class space mapped at: 0x00007fa308000000-0x00007fa348000000, reserved size: 1073741824
[0.020s][info][gc,metaspace] Narrow klass base: 0x00007fa307000000, Narrow klass shift: 0, Narrow klass range: 0x100000000
[1.280s][info][gc          ] Trigger: Metadata GC Threshold
[1.280s][info][gc,ergo     ] Free: 1790M, Max: 512K regular, 1790M humongous, Frag: 0% external, 0% internal; Reserve: 101888K, Max: 512K
[1.280s][info][gc,start    ] GC(0) Concurrent reset
[1.280s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reset
[1.280s][info][gc,ergo     ] GC(0) Pacer for Reset. Non-Taxable: 1984M
[1.281s][info][gc          ] GC(0) Concurrent reset 0.342ms
[1.281s][info][gc,start    ] GC(0) Pause Init Mark (unload classes)
[1.281s][info][gc,task     ] GC(0) Using 8 of 8 workers for init marking
[1.281s][info][gc,ergo     ] GC(0) Pacer for Mark. Expected Live: 198M, Free: 1789M, Non-Taxable: 178M, Alloc Tax Rate: 0.1x
[1.282s][info][gc          ] GC(0) Pause Init Mark (unload classes) 0.680ms
[1.282s][info][gc,start    ] GC(0) Concurrent marking roots
[1.282s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking roots
[1.285s][info][gc          ] GC(0) Concurrent marking roots 3.460ms
[1.285s][info][gc,start    ] GC(0) Concurrent marking (unload classes)
[1.285s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking
[1.296s][info][gc          ] GC(0) Concurrent marking (unload classes) 11.090ms
[1.296s][info][gc,start    ] GC(0) Pause Final Mark (unload classes)
[1.296s][info][gc,task     ] GC(0) Using 8 of 8 workers for final marking
[1.298s][info][gc,ergo     ] GC(0) Adaptive CSet Selection. Target Free: 281M, Actual Free: 1893M, Max CSet: 84672K, Min Garbage: 0B
[1.298s][info][gc,ergo     ] GC(0) Collectable Garbage: 82604K (99%), Immediate: 5855K (7%), CSet: 76748K (92%)
[1.298s][info][gc,ergo     ] GC(0) Pacer for Evacuation. Used CSet: 84480K, Free: 1794M, Non-Taxable: 179M, Alloc Tax Rate: 1.1x
[1.298s][info][gc          ] GC(0) Pause Final Mark (unload classes) 1.446ms
[1.298s][info][gc,start    ] GC(0) Concurrent thread roots
[1.298s][info][gc,task     ] GC(0) Using 2 of 8 workers for Concurrent thread roots
[1.298s][info][gc          ] GC(0) Concurrent thread roots 0.186ms
[1.298s][info][gc,start    ] GC(0) Concurrent weak references
[1.298s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak references
[1.298s][info][gc,ref      ] GC(0) Encountered references: Soft: 3955, Weak: 2134, Final: 20, Phantom: 795
[1.298s][info][gc,ref      ] GC(0) Discovered  references: Soft: 0, Weak: 855, Final: 0, Phantom: 484
[1.298s][info][gc,ref      ] GC(0) Enqueued    references: Soft: 0, Weak: 481, Final: 0, Phantom: 316
[1.298s][info][gc          ] GC(0) Concurrent weak references 0.328ms
[1.298s][info][gc,start    ] GC(0) Concurrent weak roots
[1.298s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak root
[1.301s][info][gc          ] GC(0) Concurrent weak roots 2.505ms
[1.301s][info][gc,start    ] GC(0) Concurrent cleanup
[1.301s][info][gc          ] GC(0) Concurrent cleanup 98M->92M(125M) 0.067ms
[1.301s][info][gc,ergo     ] GC(0) Free: 1793M, Max: 512K regular, 1787M humongous, Frag: 1% external, 0% internal; Reserve: 101118K, Max: 512K
[1.301s][info][gc,start    ] GC(0) Concurrent class unloading
[1.301s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent class unloading
[1.306s][info][gc          ] GC(0) Concurrent class unloading 4.945ms
[1.306s][info][gc,start    ] GC(0) Concurrent strong roots
[1.306s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent strong root
[1.308s][info][gc          ] GC(0) Concurrent strong roots 1.643ms
[1.308s][info][gc,start    ] GC(0) Concurrent evacuation
[1.308s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent evacuation
[1.313s][info][gc          ] GC(0) Concurrent evacuation 5.711ms
[1.314s][info][gc,start    ] GC(0) Pause Init Update Refs
[1.314s][info][gc,ergo     ] GC(0) Pacer for Update Refs. Used: 100M, Free: 1793M, Non-Taxable: 179M, Alloc Tax Rate: 1.1x
[1.314s][info][gc          ] GC(0) Pause Init Update Refs 0.095ms
[1.314s][info][gc,start    ] GC(0) Concurrent update references
[1.314s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reference update
[1.318s][info][gc          ] GC(0) Concurrent update references 4.460ms
[1.318s][info][gc,start    ] GC(0) Concurrent update thread roots
[1.318s][info][gc          ] GC(0) Concurrent update thread roots 0.212ms
[1.318s][info][gc,start    ] GC(0) Pause Final Update Refs
[1.319s][info][gc,task     ] GC(0) Using 8 of 8 workers for final reference update
[1.319s][info][gc          ] GC(0) Pause Final Update Refs 0.126ms
[1.319s][info][gc,start    ] GC(0) Concurrent cleanup
[1.319s][info][gc          ] GC(0) Concurrent cleanup 100M->17M(133M) 0.087ms
[1.319s][info][gc,ergo     ] Free: 1866M, Max: 512K regular, 1778M humongous, Frag: 5% external, 0% internal; Reserve: 101888K, Max: 512K
[1.319s][info][gc,stats    ] 
[1.319s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[1.319s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[1.319s][info][gc,stats    ] 
[1.319s][info][gc,stats    ] Concurrent Reset                    368 us
[1.319s][info][gc,stats    ] Pause Init Mark (G)                 989 us
[1.319s][info][gc,stats    ] Pause Init Mark (N)                 737 us
[1.319s][info][gc,stats    ]   Update Region States               24 us
[1.319s][info][gc,stats    ] Concurrent Mark Roots              3503 us, parallelism: 0.89x
[1.319s][info][gc,stats    ]   CMR: <total>                     3111 us
[1.319s][info][gc,stats    ]   CMR: Thread Roots                 962 us, workers (us): 740, 222, ---, ---, ---, ---, ---, ---, 
[1.319s][info][gc,stats    ]   CMR: VM Strong Roots              683 us, workers (us): 683,   0, ---, ---, ---, ---, ---, ---, 
[1.319s][info][gc,stats    ]   CMR: CLDG Roots                  1466 us, workers (us): 1466, ---, ---, ---, ---, ---, ---, ---, 
[1.319s][info][gc,stats    ] Concurrent Marking                11114 us
[1.319s][info][gc,stats    ] Pause Final Mark (G)               1588 us
[1.319s][info][gc,stats    ] Pause Final Mark (N)               1471 us
[1.319s][info][gc,stats    ]   Finish Mark                      1148 us
[1.319s][info][gc,stats    ]   Update Region States               23 us
[1.319s][info][gc,stats    ]   Choose Collection Set             132 us
[1.319s][info][gc,stats    ]   Rebuild Free Set                   21 us
[1.319s][info][gc,stats    ] Concurrent Thread Roots             199 us, parallelism: 1.35x
[1.319s][info][gc,stats    ]   CTR: <total>                      269 us
[1.319s][info][gc,stats    ]   CTR: Thread Roots                 269 us, workers (us): 136, 133, ---, ---, ---, ---, ---, ---, 
[1.319s][info][gc,stats    ] Concurrent Weak References          338 us, parallelism: 0.77x
[1.319s][info][gc,stats    ]   CWRF: <total>                     260 us
[1.319s][info][gc,stats    ]   CWRF: Weak References             260 us, workers (us): 260,   0, ---, ---, ---, ---, ---, ---, 
[1.319s][info][gc,stats    ] Concurrent Weak Roots              2529 us
[1.319s][info][gc,stats    ]   Roots                            2442 us, parallelism: 1.76x
[1.319s][info][gc,stats    ]     CWR: <total>                   4309 us
[1.319s][info][gc,stats    ]     CWR: Code Cache Roots           771 us, workers (us): 380, 391, ---, ---, ---, ---, ---, ---, 
[1.319s][info][gc,stats    ]     CWR: VM Weak Roots             3522 us, workers (us): 2001, 1521, ---, ---, ---, ---, ---, ---, 
[1.319s][info][gc,stats    ]     CWR: CLDG Roots                  16 us, workers (us): ---,  16, ---, ---, ---, ---, ---, ---, 
[1.319s][info][gc,stats    ]   Rendezvous                         38 us
[1.319s][info][gc,stats    ] Concurrent Cleanup                   76 us
[1.319s][info][gc,stats    ] Concurrent Class Unloading         4967 us
[1.319s][info][gc,stats    ]   Unlink Stale                     2427 us
[1.319s][info][gc,stats    ]     System Dictionary                45 us
[1.319s][info][gc,stats    ]     Weak Class Links                  0 us
[1.319s][info][gc,stats    ]     Code Roots                     2381 us
[1.319s][info][gc,stats    ]   Rendezvous                        113 us
[1.319s][info][gc,stats    ]   Purge Unlinked                   2387 us
[1.319s][info][gc,stats    ]     Code Roots                     2377 us
[1.319s][info][gc,stats    ]     CLDG                             10 us
[1.319s][info][gc,stats    ]     Exception Caches                  0 us
[1.319s][info][gc,stats    ] Concurrent Strong Roots            1665 us, parallelism: 0.95x
[1.319s][info][gc,stats    ]   CSR: <total>                     1584 us
[1.319s][info][gc,stats    ]   CSR: VM Strong Roots               21 us, workers (us):  20,   0, ---, ---, ---, ---, ---, ---, 
[1.319s][info][gc,stats    ]   CSR: CLDG Roots                  1564 us, workers (us): 1564, ---, ---, ---, ---, ---, ---, ---, 
[1.319s][info][gc,stats    ] Concurrent Evacuation              5733 us
[1.319s][info][gc,stats    ] Pause Init Update Refs (G)          248 us
[1.319s][info][gc,stats    ] Pause Init Update Refs (N)          125 us
[1.319s][info][gc,stats    ]   Manage GCLABs                       5 us
[1.319s][info][gc,stats    ] Concurrent Update Refs             4486 us
[1.319s][info][gc,stats    ] Concurrent Update Thread Roots      223 us
[1.319s][info][gc,stats    ] Pause Final Update Refs (G)         301 us
[1.319s][info][gc,stats    ] Pause Final Update Refs (N)         156 us
[1.319s][info][gc,stats    ]   Update Region States               18 us
[1.319s][info][gc,stats    ]   Trash Collection Set               10 us
[1.319s][info][gc,stats    ]   Rebuild Free Set                   17 us
[1.319s][info][gc,stats    ] Concurrent Cleanup                  102 us
[1.319s][info][gc,stats    ] 
[1.319s][info][gc,stats    ] Allocation pacing accrued:
[1.319s][info][gc,stats    ]       0 of  1310 ms (  0.0%): <total>
[1.319s][info][gc,stats    ]       0 of  1310 ms (  0.0%): <average total>
[1.319s][info][gc,stats    ] 
[1.319s][info][gc,metaspace] Metaspace: 21218K(21568K)->21431K(21824K) NonClass: 18880K(19072K)->19062K(19264K) Class: 2338K(2496K)->2369K(2560K)
[1.319s][info][gc,ergo     ] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[7.735s][info][gc          ] Cancelling GC: Stopping VM
[7.736s][info][gc,heap,exit] Heap
[7.736s][info][gc,heap,exit] Shenandoah Heap
[7.736s][info][gc,heap,exit]  1984M max, 1984M soft max, 133M committed, 38376K used
[7.736s][info][gc,heap,exit]  3969 x 512K regions
[7.736s][info][gc,heap,exit] Status: cancelled
[7.736s][info][gc,heap,exit] Reserved region:
[7.736s][info][gc,heap,exit]  - [0x0000000083f80000, 0x0000000100000000) 
[7.736s][info][gc,heap,exit] Collection set:
[7.736s][info][gc,heap,exit]  - map (vanilla): 0x000000000001107f
[7.736s][info][gc,heap,exit]  - map (biased):  0x0000000000010000
[7.736s][info][gc,heap,exit] 
[7.736s][info][gc,heap,exit]  Metaspace       used 25405K, committed 25792K, reserved 1114112K
[7.736s][info][gc,heap,exit]   class space    used 2925K, committed 3136K, reserved 1048576K
[7.736s][info][gc,stats    ] 
[7.736s][info][gc,stats    ] GC STATISTICS:
[7.736s][info][gc,stats    ]   "(G)" (gross) pauses include VM time: time to notify and block threads, do the pre-
[7.736s][info][gc,stats    ]         and post-safepoint housekeeping. Use -Xlog:safepoint+stats to dissect.
[7.736s][info][gc,stats    ]   "(N)" (net) pauses are the times spent in the actual GC code.
[7.736s][info][gc,stats    ]   "a" is average time for each phase, look at levels to see if average makes sense.
[7.736s][info][gc,stats    ]   "lvls" are quantiles: 0% (minimum), 25%, 50% (median), 75%, 100% (maximum).
[7.736s][info][gc,stats    ] 
[7.736s][info][gc,stats    ]   All times are wall-clock times, except per-root-class counters, that are sum over
[7.736s][info][gc,stats    ]   all workers. Dividing the <total> over the root stage time estimates parallelism.
[7.736s][info][gc,stats    ] 
[7.736s][info][gc,stats    ]   Pacing delays are measured from entering the pacing code till exiting it. Therefore,
[7.736s][info][gc,stats    ]   observed pacing delays may be higher than the threshold when paced thread spent more
[7.736s][info][gc,stats    ]   time in the pacing code. It usually happens when thread is de-scheduled while paced,
[7.736s][info][gc,stats    ]   OS takes longer to unblock the thread, or JVM experiences an STW pause.
[7.736s][info][gc,stats    ] 
[7.736s][info][gc,stats    ]   Higher delay would prevent application outpacing the GC, but it will hide the GC latencies
[7.736s][info][gc,stats    ]   from the STW pause times. Pacing affects the individual threads, and so it would also be
[7.736s][info][gc,stats    ]   invisible to the usual profiling tools, but would add up to end-to-end application latency.
[7.736s][info][gc,stats    ]   Raise max pacing delay with care.
[7.736s][info][gc,stats    ] 
[7.736s][info][gc,stats    ] Concurrent Reset               =    0.000 s (a =      368 us) (n =     1) (lvls, us =      367,      367,      367,      367,      368)
[7.736s][info][gc,stats    ] Pause Init Mark (G)            =    0.001 s (a =      989 us) (n =     1) (lvls, us =      988,      988,      988,      988,      989)
[7.736s][info][gc,stats    ] Pause Init Mark (N)            =    0.001 s (a =      737 us) (n =     1) (lvls, us =      736,      736,      736,      736,      737)
[7.736s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       24 us) (n =     1) (lvls, us =       24,       24,       24,       24,       24)
[7.736s][info][gc,stats    ] Concurrent Mark Roots          =    0.004 s (a =     3503 us) (n =     1) (lvls, us =     3496,     3496,     3496,     3496,     3503)
[7.736s][info][gc,stats    ]   CMR: <total>                 =    0.003 s (a =     3111 us) (n =     1) (lvls, us =     3105,     3105,     3105,     3105,     3111)
[7.736s][info][gc,stats    ]   CMR: Thread Roots            =    0.001 s (a =      962 us) (n =     1) (lvls, us =      961,      961,      961,      961,      962)
[7.736s][info][gc,stats    ]   CMR: VM Strong Roots         =    0.001 s (a =      683 us) (n =     1) (lvls, us =      682,      682,      682,      682,      683)
[7.736s][info][gc,stats    ]   CMR: CLDG Roots              =    0.001 s (a =     1466 us) (n =     1) (lvls, us =     1465,     1465,     1465,     1465,     1466)
[7.737s][info][gc,stats    ] Concurrent Marking             =    0.011 s (a =    11114 us) (n =     1) (lvls, us =    10938,    10938,    10938,    10938,    11114)
[7.737s][info][gc,stats    ] Pause Final Mark (G)           =    0.002 s (a =     1588 us) (n =     1) (lvls, us =     1582,     1582,     1582,     1582,     1588)
[7.737s][info][gc,stats    ] Pause Final Mark (N)           =    0.001 s (a =     1471 us) (n =     1) (lvls, us =     1465,     1465,     1465,     1465,     1471)
[7.737s][info][gc,stats    ]   Finish Mark                  =    0.001 s (a =     1148 us) (n =     1) (lvls, us =     1133,     1133,     1133,     1133,     1148)
[7.737s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       23 us) (n =     1) (lvls, us =       23,       23,       23,       23,       23)
[7.737s][info][gc,stats    ]   Choose Collection Set        =    0.000 s (a =      132 us) (n =     1) (lvls, us =      131,      131,      131,      131,      132)
[7.737s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       21 us) (n =     1) (lvls, us =       21,       21,       21,       21,       21)
[7.737s][info][gc,stats    ] Concurrent Thread Roots        =    0.000 s (a =      199 us) (n =     1) (lvls, us =      197,      197,      197,      197,      199)
[7.737s][info][gc,stats    ]   CTR: <total>                 =    0.000 s (a =      269 us) (n =     1) (lvls, us =      268,      268,      268,      268,      269)
[7.737s][info][gc,stats    ]   CTR: Thread Roots            =    0.000 s (a =      269 us) (n =     1) (lvls, us =      268,      268,      268,      268,      269)
[7.737s][info][gc,stats    ] Concurrent Weak References     =    0.000 s (a =      338 us) (n =     1) (lvls, us =      336,      336,      336,      336,      338)
[7.737s][info][gc,stats    ]   CWRF: <total>                =    0.000 s (a =      260 us) (n =     1) (lvls, us =      258,      258,      258,      258,      260)
[7.737s][info][gc,stats    ]   CWRF: Weak References        =    0.000 s (a =      260 us) (n =     1) (lvls, us =      258,      258,      258,      258,      260)
[7.737s][info][gc,stats    ] Concurrent Weak Roots          =    0.003 s (a =     2529 us) (n =     1) (lvls, us =     2520,     2520,     2520,     2520,     2529)
[7.737s][info][gc,stats    ]   Roots                        =    0.002 s (a =     2442 us) (n =     1) (lvls, us =     2441,     2441,     2441,     2441,     2442)
[7.737s][info][gc,stats    ]     CWR: <total>               =    0.004 s (a =     4309 us) (n =     1) (lvls, us =     4297,     4297,     4297,     4297,     4309)
[7.737s][info][gc,stats    ]     CWR: Code Cache Roots      =    0.001 s (a =      771 us) (n =     1) (lvls, us =      770,      770,      770,      770,      771)
[7.737s][info][gc,stats    ]     CWR: VM Weak Roots         =    0.004 s (a =     3522 us) (n =     1) (lvls, us =     3516,     3516,     3516,     3516,     3522)
[7.737s][info][gc,stats    ]     CWR: CLDG Roots            =    0.000 s (a =       16 us) (n =     1) (lvls, us =       16,       16,       16,       16,       16)
[7.737s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =       38 us) (n =     1) (lvls, us =       38,       38,       38,       38,       38)
[7.737s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =       76 us) (n =     1) (lvls, us =       76,       76,       76,       76,       76)
[7.737s][info][gc,stats    ] Concurrent Class Unloading     =    0.005 s (a =     4967 us) (n =     1) (lvls, us =     4961,     4961,     4961,     4961,     4967)
[7.737s][info][gc,stats    ]   Unlink Stale                 =    0.002 s (a =     2427 us) (n =     1) (lvls, us =     2422,     2422,     2422,     2422,     2427)
[7.737s][info][gc,stats    ]     System Dictionary          =    0.000 s (a =       45 us) (n =     1) (lvls, us =       45,       45,       45,       45,       45)
[7.737s][info][gc,stats    ]     Weak Class Links           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[7.737s][info][gc,stats    ]     Code Roots                 =    0.002 s (a =     2381 us) (n =     1) (lvls, us =     2363,     2363,     2363,     2363,     2381)
[7.737s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =      113 us) (n =     1) (lvls, us =      111,      111,      111,      111,      113)
[7.737s][info][gc,stats    ]   Purge Unlinked               =    0.002 s (a =     2387 us) (n =     1) (lvls, us =     2383,     2383,     2383,     2383,     2387)
[7.737s][info][gc,stats    ]     Code Roots                 =    0.002 s (a =     2377 us) (n =     1) (lvls, us =     2363,     2363,     2363,     2363,     2377)
[7.737s][info][gc,stats    ]     CLDG                       =    0.000 s (a =       10 us) (n =     1) (lvls, us =       10,       10,       10,       10,       10)
[7.737s][info][gc,stats    ]     Exception Caches           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[7.737s][info][gc,stats    ] Concurrent Strong Roots        =    0.002 s (a =     1665 us) (n =     1) (lvls, us =     1660,     1660,     1660,     1660,     1665)
[7.737s][info][gc,stats    ]   CSR: <total>                 =    0.002 s (a =     1584 us) (n =     1) (lvls, us =     1582,     1582,     1582,     1582,     1584)
[7.737s][info][gc,stats    ]   CSR: VM Strong Roots         =    0.000 s (a =       21 us) (n =     1) (lvls, us =       21,       21,       21,       21,       21)
[7.737s][info][gc,stats    ]   CSR: CLDG Roots              =    0.002 s (a =     1564 us) (n =     1) (lvls, us =     1562,     1562,     1562,     1562,     1564)
[7.737s][info][gc,stats    ] Concurrent Evacuation          =    0.006 s (a =     5733 us) (n =     1) (lvls, us =     5723,     5723,     5723,     5723,     5733)
[7.737s][info][gc,stats    ] Pause Init Update Refs (G)     =    0.000 s (a =      248 us) (n =     1) (lvls, us =      246,      246,      246,      246,      248)
[7.737s][info][gc,stats    ] Pause Init Update Refs (N)     =    0.000 s (a =      125 us) (n =     1) (lvls, us =      125,      125,      125,      125,      125)
[7.737s][info][gc,stats    ]   Manage GCLABs                =    0.000 s (a =        5 us) (n =     1) (lvls, us =        5,        5,        5,        5,        5)
[7.737s][info][gc,stats    ] Concurrent Update Refs         =    0.004 s (a =     4486 us) (n =     1) (lvls, us =     4473,     4473,     4473,     4473,     4486)
[7.737s][info][gc,stats    ] Concurrent Update Thread Roots =    0.000 s (a =      223 us) (n =     1) (lvls, us =      223,      223,      223,      223,      223)
[7.737s][info][gc,stats    ] Pause Final Update Refs (G)    =    0.000 s (a =      301 us) (n =     1) (lvls, us =      301,      301,      301,      301,      301)
[7.737s][info][gc,stats    ] Pause Final Update Refs (N)    =    0.000 s (a =      156 us) (n =     1) (lvls, us =      154,      154,      154,      154,      156)
[7.737s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       18 us) (n =     1) (lvls, us =       18,       18,       18,       18,       18)
[7.737s][info][gc,stats    ]   Trash Collection Set         =    0.000 s (a =       10 us) (n =     1) (lvls, us =       10,       10,       10,       10,       10)
[7.737s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       17 us) (n =     1) (lvls, us =       17,       17,       17,       17,       17)
[7.737s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =      102 us) (n =     1) (lvls, us =      102,      102,      102,      102,      102)
[7.737s][info][gc,stats    ] 
[7.737s][info][gc,stats    ] 
[7.737s][info][gc,stats    ] Under allocation pressure, concurrent cycles may cancel, and either continue cycle
[7.737s][info][gc,stats    ] under stop-the-world pause or result in stop-the-world Full GC. Increase heap size,
[7.737s][info][gc,stats    ] tune GC heuristics, set more aggressive pacing delay, or lower allocation rate
[7.737s][info][gc,stats    ] to avoid Degenerated and Full GC cycles.
[7.737s][info][gc,stats    ] 
[7.737s][info][gc,stats    ]     1 successful concurrent GCs
[7.737s][info][gc,stats    ]       0 invoked explicitly
[7.737s][info][gc,stats    ]       0 invoked implicitly
[7.737s][info][gc,stats    ] 
[7.737s][info][gc,stats    ]     0 Degenerated GCs
[7.737s][info][gc,stats    ]       0 caused by allocation failure
[7.737s][info][gc,stats    ]       0 upgraded to Full GC
[7.737s][info][gc,stats    ] 
[7.737s][info][gc,stats    ]     0 Full GCs
[7.737s][info][gc,stats    ]       0 invoked explicitly
[7.737s][info][gc,stats    ]       0 invoked implicitly
[7.737s][info][gc,stats    ]       0 caused by allocation failure
[7.737s][info][gc,stats    ]       0 upgraded from Degenerated GC
[7.737s][info][gc,stats    ] 
[7.737s][info][gc,stats    ] 
