[0.007s][info][gc] Heuristics ergonomically sets -XX:+ExplicitGCInvokesConcurrent
[0.007s][info][gc] Heuristics ergonomically sets -XX:+ShenandoahImplicitGCInvokesConcurrent
[0.007s][info][gc] Using Shenandoah
[0.007s][info][gc,ergo] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[0.008s][info][gc,init] Version: 21.0.7+6-Ubuntu-0ubuntu122.04 (release)
[0.008s][info][gc,init] CPUs: 4 total, 4 available
[0.008s][info][gc,init] Memory: 7937M
[0.008s][info][gc,init] Large Page Support: Disabled
[0.008s][info][gc,init] NUMA Support: Disabled
[0.008s][info][gc,init] Compressed Oops: Enabled (32-bit)
[0.008s][info][gc,init] Heap Min Capacity: 6656K
[0.008s][info][gc,init] Heap Initial Capacity: 127488K
[0.008s][info][gc,init] Heap Max Capacity: 2032128K
[0.008s][info][gc,init] Pre-touch: Disabled
[0.008s][info][gc,init] Mode: Snapshot-At-The-Beginning (SATB)
[0.008s][info][gc,init] Heuristics: Adaptive
[0.008s][info][gc,init] Heap Region Count: 3969
[0.008s][info][gc,init] Heap Region Size: 512K
[0.008s][info][gc,init] TLAB Size Max: 512K
[0.008s][info][gc,init] Humongous Object Threshold: 512K
[0.008s][info][gc,init] Parallel Workers: 8
[0.008s][info][gc,init] Concurrent Workers: 2
[0.022s][info][gc,metaspace] CDS archive(s) mapped at: [0x00007f5f5a000000-0x00007f5f5ac97000-0x00007f5f5ac97000), size 13201408, SharedBaseAddress: 0x00007f5f5a000000, ArchiveRelocationMode: 1.
[0.022s][info][gc,metaspace] Compressed class space mapped at: 0x00007f5f5b000000-0x00007f5f9b000000, reserved size: 1073741824
[0.022s][info][gc,metaspace] Narrow klass base: 0x00007f5f5a000000, Narrow klass shift: 0, Narrow klass range: 0x100000000
[1.798s][info][gc          ] Trigger: Metadata GC Threshold
[1.798s][info][gc,ergo     ] Free: 1745M, Max: 512K regular, 1745M humongous, Frag: 0% external, 0% internal; Reserve: 101888K, Max: 512K
[1.798s][info][gc,start    ] GC(0) Concurrent reset
[1.798s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reset
[1.798s][info][gc,ergo     ] GC(0) Pacer for Reset. Non-Taxable: 1984M
[1.799s][info][gc          ] GC(0) Concurrent reset 0.640ms
[1.799s][info][gc,start    ] GC(0) Pause Init Mark (unload classes)
[1.799s][info][gc,task     ] GC(0) Using 8 of 8 workers for init marking
[1.799s][info][gc,ergo     ] GC(0) Pacer for Mark. Expected Live: 198M, Free: 1745M, Non-Taxable: 174M, Alloc Tax Rate: 0.1x
[1.799s][info][gc          ] GC(0) Pause Init Mark (unload classes) 0.600ms
[1.800s][info][gc,start    ] GC(0) Concurrent marking roots
[1.800s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking roots
[1.801s][info][gc          ] GC(0) Concurrent marking roots 1.490ms
[1.801s][info][gc,start    ] GC(0) Concurrent marking (unload classes)
[1.801s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking
[1.854s][info][gc          ] GC(0) Concurrent marking (unload classes) 52.577ms
[1.854s][info][gc,start    ] GC(0) Pause Final Mark (unload classes)
[1.854s][info][gc,task     ] GC(0) Using 8 of 8 workers for final marking
[1.858s][info][gc,ergo     ] GC(0) Adaptive CSet Selection. Target Free: 281M, Actual Free: 1843M, Max CSet: 84672K, Min Garbage: 0B
[1.858s][info][gc,ergo     ] GC(0) Collectable Garbage: 74091K (98%), Immediate: 3823K (5%), CSet: 70268K (93%)
[1.858s][info][gc,ergo     ] GC(0) Pacer for Evacuation. Used CSet: 78336K, Free: 1744M, Non-Taxable: 174M, Alloc Tax Rate: 1.1x
[1.858s][info][gc          ] GC(0) Pause Final Mark (unload classes) 4.161ms
[1.858s][info][gc,start    ] GC(0) Concurrent thread roots
[1.858s][info][gc,task     ] GC(0) Using 2 of 8 workers for Concurrent thread roots
[1.859s][info][gc          ] GC(0) Concurrent thread roots 0.633ms
[1.859s][info][gc,start    ] GC(0) Concurrent weak references
[1.859s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak references
[1.859s][info][gc,ref      ] GC(0) Encountered references: Soft: 3954, Weak: 2099, Final: 4, Phantom: 820
[1.859s][info][gc,ref      ] GC(0) Discovered  references: Soft: 0, Weak: 1285, Final: 0, Phantom: 735
[1.859s][info][gc,ref      ] GC(0) Enqueued    references: Soft: 0, Weak: 497, Final: 0, Phantom: 230
[1.859s][info][gc          ] GC(0) Concurrent weak references 0.445ms
[1.859s][info][gc,start    ] GC(0) Concurrent weak roots
[1.859s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak root
[1.863s][info][gc          ] GC(0) Concurrent weak roots 3.983ms
[1.863s][info][gc,start    ] GC(0) Concurrent cleanup
[1.863s][info][gc          ] GC(0) Concurrent cleanup 144M->140M(147M) 0.163ms
[1.863s][info][gc,ergo     ] GC(0) Free: 1743M, Max: 512K regular, 1739M humongous, Frag: 1% external, 0% internal; Reserve: 100857K, Max: 512K
[1.863s][info][gc,start    ] GC(0) Concurrent class unloading
[1.863s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent class unloading
[1.869s][info][gc          ] GC(0) Concurrent class unloading 5.617ms
[1.869s][info][gc,start    ] GC(0) Concurrent strong roots
[1.869s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent strong root
[1.870s][info][gc          ] GC(0) Concurrent strong roots 1.561ms
[1.870s][info][gc,start    ] GC(0) Concurrent evacuation
[1.871s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent evacuation
[1.877s][info][gc          ] GC(0) Concurrent evacuation 6.095ms
[1.877s][info][gc,start    ] GC(0) Pause Init Update Refs
[1.877s][info][gc,ergo     ] GC(0) Pacer for Update Refs. Used: 148M, Free: 1743M, Non-Taxable: 174M, Alloc Tax Rate: 1.1x
[1.877s][info][gc          ] GC(0) Pause Init Update Refs 0.052ms
[1.877s][info][gc,start    ] GC(0) Concurrent update references
[1.877s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reference update
[1.895s][info][gc          ] GC(0) Concurrent update references 17.793ms
[1.895s][info][gc,start    ] GC(0) Concurrent update thread roots
[1.895s][info][gc          ] GC(0) Concurrent update thread roots 0.697ms
[1.895s][info][gc,start    ] GC(0) Pause Final Update Refs
[1.895s][info][gc,task     ] GC(0) Using 8 of 8 workers for final reference update
[1.895s][info][gc          ] GC(0) Pause Final Update Refs 0.081ms
[1.895s][info][gc,start    ] GC(0) Concurrent cleanup
[1.896s][info][gc          ] GC(0) Concurrent cleanup 149M->73M(155M) 0.094ms
[1.896s][info][gc,ergo     ] Free: 1809M, Max: 512K regular, 1729M humongous, Frag: 5% external, 0% internal; Reserve: 101888K, Max: 512K
[1.896s][info][gc,stats    ] 
[1.896s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[1.896s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[1.896s][info][gc,stats    ] 
[1.896s][info][gc,stats    ] Concurrent Reset                    686 us
[1.896s][info][gc,stats    ] Pause Init Mark (G)                 826 us
[1.896s][info][gc,stats    ] Pause Init Mark (N)                 613 us
[1.896s][info][gc,stats    ]   Update Region States               21 us
[1.896s][info][gc,stats    ] Concurrent Mark Roots              1549 us, parallelism: 1.60x
[1.896s][info][gc,stats    ]   CMR: <total>                     2480 us
[1.896s][info][gc,stats    ]   CMR: Thread Roots                1055 us, workers (us): 942, 112, ---, ---, ---, ---, ---, ---, 
[1.896s][info][gc,stats    ]   CMR: VM Strong Roots              449 us, workers (us): 306, 144, ---, ---, ---, ---, ---, ---, 
[1.896s][info][gc,stats    ]   CMR: CLDG Roots                   976 us, workers (us): ---, 976, ---, ---, ---, ---, ---, ---, 
[1.896s][info][gc,stats    ] Concurrent Marking                52623 us
[1.896s][info][gc,stats    ] Pause Final Mark (G)               4219 us
[1.896s][info][gc,stats    ] Pause Final Mark (N)               4170 us
[1.896s][info][gc,stats    ]   Finish Mark                      3956 us
[1.896s][info][gc,stats    ]   Update Region States               41 us
[1.896s][info][gc,stats    ]   Choose Collection Set              95 us
[1.896s][info][gc,stats    ]   Rebuild Free Set                   16 us
[1.896s][info][gc,stats    ] Concurrent Thread Roots             652 us, parallelism: 1.18x
[1.896s][info][gc,stats    ]   CTR: <total>                      773 us
[1.896s][info][gc,stats    ]   CTR: Thread Roots                 773 us, workers (us): 234, 539, ---, ---, ---, ---, ---, ---, 
[1.896s][info][gc,stats    ] Concurrent Weak References          455 us, parallelism: 0.85x
[1.896s][info][gc,stats    ]   CWRF: <total>                     387 us
[1.896s][info][gc,stats    ]   CWRF: Weak References             387 us, workers (us): 357,  30, ---, ---, ---, ---, ---, ---, 
[1.896s][info][gc,stats    ] Concurrent Weak Roots              4001 us
[1.896s][info][gc,stats    ]   Roots                            1803 us, parallelism: 1.60x
[1.896s][info][gc,stats    ]     CWR: <total>                   2888 us
[1.896s][info][gc,stats    ]     CWR: Code Cache Roots           913 us, workers (us): 462, 451, ---, ---, ---, ---, ---, ---, 
[1.896s][info][gc,stats    ]     CWR: VM Weak Roots             1960 us, workers (us): 1276, 684, ---, ---, ---, ---, ---, ---, 
[1.896s][info][gc,stats    ]     CWR: CLDG Roots                  15 us, workers (us):  15, ---, ---, ---, ---, ---, ---, ---, 
[1.896s][info][gc,stats    ]   Rendezvous                       2160 us
[1.896s][info][gc,stats    ] Concurrent Cleanup                  180 us
[1.896s][info][gc,stats    ] Concurrent Class Unloading         5636 us
[1.896s][info][gc,stats    ]   Unlink Stale                     1508 us
[1.896s][info][gc,stats    ]     System Dictionary                43 us
[1.896s][info][gc,stats    ]     Weak Class Links                  0 us
[1.896s][info][gc,stats    ]     Code Roots                     1464 us
[1.896s][info][gc,stats    ]   Rendezvous                        126 us
[1.896s][info][gc,stats    ]   Purge Unlinked                   3961 us
[1.896s][info][gc,stats    ]     Code Roots                     3949 us
[1.896s][info][gc,stats    ]     CLDG                             11 us
[1.896s][info][gc,stats    ]     Exception Caches                  0 us
[1.896s][info][gc,stats    ] Concurrent Strong Roots            1574 us, parallelism: 0.96x
[1.896s][info][gc,stats    ]   CSR: <total>                     1517 us
[1.896s][info][gc,stats    ]   CSR: VM Strong Roots               22 us, workers (us):  17,   5, ---, ---, ---, ---, ---, ---, 
[1.896s][info][gc,stats    ]   CSR: CLDG Roots                  1496 us, workers (us): ---, 1496, ---, ---, ---, ---, ---, ---, 
[1.896s][info][gc,stats    ] Concurrent Evacuation              6124 us
[1.896s][info][gc,stats    ] Pause Init Update Refs (G)          105 us
[1.896s][info][gc,stats    ] Pause Init Update Refs (N)           62 us
[1.896s][info][gc,stats    ]   Manage GCLABs                       5 us
[1.896s][info][gc,stats    ] Concurrent Update Refs            17833 us
[1.896s][info][gc,stats    ] Concurrent Update Thread Roots      743 us
[1.896s][info][gc,stats    ] Pause Final Update Refs (G)         190 us
[1.896s][info][gc,stats    ] Pause Final Update Refs (N)          90 us
[1.896s][info][gc,stats    ]   Update Region States               28 us
[1.896s][info][gc,stats    ]   Trash Collection Set                3 us
[1.896s][info][gc,stats    ]   Rebuild Free Set                   15 us
[1.896s][info][gc,stats    ] Concurrent Cleanup                  110 us
[1.896s][info][gc,stats    ] 
[1.896s][info][gc,stats    ] Allocation pacing accrued:
[1.896s][info][gc,stats    ]       0 of  1889 ms (  0.0%): <total>
[1.896s][info][gc,stats    ]       0 of  1889 ms (  0.0%): <average total>
[1.896s][info][gc,stats    ] 
[1.896s][info][gc,metaspace] Metaspace: 21225K(21568K)->22330K(22720K) NonClass: 18876K(19072K)->19835K(20032K) Class: 2348K(2496K)->2495K(2688K)
[1.896s][info][gc,ergo     ] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[6.158s][info][gc          ] Cancelling GC: Stopping VM
[6.158s][info][gc,heap,exit] Heap
[6.158s][info][gc,heap,exit] Shenandoah Heap
[6.159s][info][gc,heap,exit]  1984M max, 1984M soft max, 155M committed, 85983K used
[6.159s][info][gc,heap,exit]  3969 x 512K regions
[6.159s][info][gc,heap,exit] Status: cancelled
[6.159s][info][gc,heap,exit] Reserved region:
[6.159s][info][gc,heap,exit]  - [0x0000000083f80000, 0x0000000100000000) 
[6.159s][info][gc,heap,exit] Collection set:
[6.159s][info][gc,heap,exit]  - map (vanilla): 0x000000000001107f
[6.159s][info][gc,heap,exit]  - map (biased):  0x0000000000010000
[6.159s][info][gc,heap,exit] 
[6.159s][info][gc,heap,exit]  Metaspace       used 25088K, committed 25344K, reserved 1114112K
[6.159s][info][gc,heap,exit]   class space    used 2775K, committed 2880K, reserved 1048576K
[6.159s][info][gc,stats    ] 
[6.159s][info][gc,stats    ] GC STATISTICS:
[6.159s][info][gc,stats    ]   "(G)" (gross) pauses include VM time: time to notify and block threads, do the pre-
[6.159s][info][gc,stats    ]         and post-safepoint housekeeping. Use -Xlog:safepoint+stats to dissect.
[6.159s][info][gc,stats    ]   "(N)" (net) pauses are the times spent in the actual GC code.
[6.159s][info][gc,stats    ]   "a" is average time for each phase, look at levels to see if average makes sense.
[6.159s][info][gc,stats    ]   "lvls" are quantiles: 0% (minimum), 25%, 50% (median), 75%, 100% (maximum).
[6.159s][info][gc,stats    ] 
[6.159s][info][gc,stats    ]   All times are wall-clock times, except per-root-class counters, that are sum over
[6.159s][info][gc,stats    ]   all workers. Dividing the <total> over the root stage time estimates parallelism.
[6.159s][info][gc,stats    ] 
[6.159s][info][gc,stats    ]   Pacing delays are measured from entering the pacing code till exiting it. Therefore,
[6.159s][info][gc,stats    ]   observed pacing delays may be higher than the threshold when paced thread spent more
[6.159s][info][gc,stats    ]   time in the pacing code. It usually happens when thread is de-scheduled while paced,
[6.159s][info][gc,stats    ]   OS takes longer to unblock the thread, or JVM experiences an STW pause.
[6.159s][info][gc,stats    ] 
[6.159s][info][gc,stats    ]   Higher delay would prevent application outpacing the GC, but it will hide the GC latencies
[6.159s][info][gc,stats    ]   from the STW pause times. Pacing affects the individual threads, and so it would also be
[6.159s][info][gc,stats    ]   invisible to the usual profiling tools, but would add up to end-to-end application latency.
[6.159s][info][gc,stats    ]   Raise max pacing delay with care.
[6.159s][info][gc,stats    ] 
[6.159s][info][gc,stats    ] Concurrent Reset               =    0.001 s (a =      686 us) (n =     1) (lvls, us =      686,      686,      686,      686,      686)
[6.159s][info][gc,stats    ] Pause Init Mark (G)            =    0.001 s (a =      826 us) (n =     1) (lvls, us =      824,      824,      824,      824,      826)
[6.159s][info][gc,stats    ] Pause Init Mark (N)            =    0.001 s (a =      613 us) (n =     1) (lvls, us =      613,      613,      613,      613,      613)
[6.159s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       21 us) (n =     1) (lvls, us =       21,       21,       21,       21,       21)
[6.159s][info][gc,stats    ] Concurrent Mark Roots          =    0.002 s (a =     1549 us) (n =     1) (lvls, us =     1543,     1543,     1543,     1543,     1549)
[6.159s][info][gc,stats    ]   CMR: <total>                 =    0.002 s (a =     2480 us) (n =     1) (lvls, us =     2461,     2461,     2461,     2461,     2480)
[6.159s][info][gc,stats    ]   CMR: Thread Roots            =    0.001 s (a =     1055 us) (n =     1) (lvls, us =     1035,     1035,     1035,     1035,     1055)
[6.159s][info][gc,stats    ]   CMR: VM Strong Roots         =    0.000 s (a =      449 us) (n =     1) (lvls, us =      449,      449,      449,      449,      449)
[6.159s][info][gc,stats    ]   CMR: CLDG Roots              =    0.001 s (a =      976 us) (n =     1) (lvls, us =      975,      975,      975,      975,      976)
[6.159s][info][gc,stats    ] Concurrent Marking             =    0.053 s (a =    52623 us) (n =     1) (lvls, us =    52539,    52539,    52539,    52539,    52623)
[6.159s][info][gc,stats    ] Pause Final Mark (G)           =    0.004 s (a =     4219 us) (n =     1) (lvls, us =     4219,     4219,     4219,     4219,     4219)
[6.159s][info][gc,stats    ] Pause Final Mark (N)           =    0.004 s (a =     4170 us) (n =     1) (lvls, us =     4160,     4160,     4160,     4160,     4170)
[6.159s][info][gc,stats    ]   Finish Mark                  =    0.004 s (a =     3956 us) (n =     1) (lvls, us =     3945,     3945,     3945,     3945,     3956)
[6.159s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       41 us) (n =     1) (lvls, us =       41,       41,       41,       41,       41)
[6.159s][info][gc,stats    ]   Choose Collection Set        =    0.000 s (a =       95 us) (n =     1) (lvls, us =       95,       95,       95,       95,       95)
[6.159s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       16 us) (n =     1) (lvls, us =       16,       16,       16,       16,       16)
[6.159s][info][gc,stats    ] Concurrent Thread Roots        =    0.001 s (a =      652 us) (n =     1) (lvls, us =      652,      652,      652,      652,      652)
[6.159s][info][gc,stats    ]   CTR: <total>                 =    0.001 s (a =      773 us) (n =     1) (lvls, us =      771,      771,      771,      771,      773)
[6.159s][info][gc,stats    ]   CTR: Thread Roots            =    0.001 s (a =      773 us) (n =     1) (lvls, us =      771,      771,      771,      771,      773)
[6.159s][info][gc,stats    ] Concurrent Weak References     =    0.000 s (a =      455 us) (n =     1) (lvls, us =      455,      455,      455,      455,      455)
[6.159s][info][gc,stats    ]   CWRF: <total>                =    0.000 s (a =      387 us) (n =     1) (lvls, us =      387,      387,      387,      387,      387)
[6.159s][info][gc,stats    ]   CWRF: Weak References        =    0.000 s (a =      387 us) (n =     1) (lvls, us =      387,      387,      387,      387,      387)
[6.159s][info][gc,stats    ] Concurrent Weak Roots          =    0.004 s (a =     4001 us) (n =     1) (lvls, us =     3984,     3984,     3984,     3984,     4001)
[6.159s][info][gc,stats    ]   Roots                        =    0.002 s (a =     1803 us) (n =     1) (lvls, us =     1797,     1797,     1797,     1797,     1803)
[6.160s][info][gc,stats    ]     CWR: <total>               =    0.003 s (a =     2888 us) (n =     1) (lvls, us =     2871,     2871,     2871,     2871,     2888)
[6.160s][info][gc,stats    ]     CWR: Code Cache Roots      =    0.001 s (a =      913 us) (n =     1) (lvls, us =      912,      912,      912,      912,      913)
[6.160s][info][gc,stats    ]     CWR: VM Weak Roots         =    0.002 s (a =     1960 us) (n =     1) (lvls, us =     1953,     1953,     1953,     1953,     1960)
[6.160s][info][gc,stats    ]     CWR: CLDG Roots            =    0.000 s (a =       15 us) (n =     1) (lvls, us =       15,       15,       15,       15,       15)
[6.160s][info][gc,stats    ]   Rendezvous                   =    0.002 s (a =     2160 us) (n =     1) (lvls, us =     2148,     2148,     2148,     2148,     2160)
[6.160s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =      180 us) (n =     1) (lvls, us =      178,      178,      178,      178,      180)
[6.160s][info][gc,stats    ] Concurrent Class Unloading     =    0.006 s (a =     5636 us) (n =     1) (lvls, us =     5625,     5625,     5625,     5625,     5636)
[6.160s][info][gc,stats    ]   Unlink Stale                 =    0.002 s (a =     1508 us) (n =     1) (lvls, us =     1504,     1504,     1504,     1504,     1508)
[6.160s][info][gc,stats    ]     System Dictionary          =    0.000 s (a =       43 us) (n =     1) (lvls, us =       43,       43,       43,       43,       43)
[6.160s][info][gc,stats    ]     Weak Class Links           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[6.160s][info][gc,stats    ]     Code Roots                 =    0.001 s (a =     1464 us) (n =     1) (lvls, us =     1445,     1445,     1445,     1445,     1464)
[6.160s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =      126 us) (n =     1) (lvls, us =      125,      125,      125,      125,      126)
[6.160s][info][gc,stats    ]   Purge Unlinked               =    0.004 s (a =     3961 us) (n =     1) (lvls, us =     3945,     3945,     3945,     3945,     3961)
[6.160s][info][gc,stats    ]     Code Roots                 =    0.004 s (a =     3949 us) (n =     1) (lvls, us =     3945,     3945,     3945,     3945,     3949)
[6.160s][info][gc,stats    ]     CLDG                       =    0.000 s (a =       11 us) (n =     1) (lvls, us =       11,       11,       11,       11,       11)
[6.160s][info][gc,stats    ]     Exception Caches           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[6.160s][info][gc,stats    ] Concurrent Strong Roots        =    0.002 s (a =     1574 us) (n =     1) (lvls, us =     1562,     1562,     1562,     1562,     1574)
[6.160s][info][gc,stats    ]   CSR: <total>                 =    0.002 s (a =     1517 us) (n =     1) (lvls, us =     1504,     1504,     1504,     1504,     1517)
[6.160s][info][gc,stats    ]   CSR: VM Strong Roots         =    0.000 s (a =       22 us) (n =     1) (lvls, us =       21,       21,       21,       21,       22)
[6.160s][info][gc,stats    ]   CSR: CLDG Roots              =    0.001 s (a =     1496 us) (n =     1) (lvls, us =     1484,     1484,     1484,     1484,     1496)
[6.160s][info][gc,stats    ] Concurrent Evacuation          =    0.006 s (a =     6124 us) (n =     1) (lvls, us =     6113,     6113,     6113,     6113,     6124)
[6.160s][info][gc,stats    ] Pause Init Update Refs (G)     =    0.000 s (a =      105 us) (n =     1) (lvls, us =      104,      104,      104,      104,      105)
[6.160s][info][gc,stats    ] Pause Init Update Refs (N)     =    0.000 s (a =       62 us) (n =     1) (lvls, us =       62,       62,       62,       62,       62)
[6.160s][info][gc,stats    ]   Manage GCLABs                =    0.000 s (a =        5 us) (n =     1) (lvls, us =        5,        5,        5,        5,        5)
[6.160s][info][gc,stats    ] Concurrent Update Refs         =    0.018 s (a =    17833 us) (n =     1) (lvls, us =    17773,    17773,    17773,    17773,    17833)
[6.160s][info][gc,stats    ] Concurrent Update Thread Roots =    0.001 s (a =      743 us) (n =     1) (lvls, us =      742,      742,      742,      742,      743)
[6.160s][info][gc,stats    ] Pause Final Update Refs (G)    =    0.000 s (a =      190 us) (n =     1) (lvls, us =      189,      189,      189,      189,      190)
[6.160s][info][gc,stats    ] Pause Final Update Refs (N)    =    0.000 s (a =       90 us) (n =     1) (lvls, us =       90,       90,       90,       90,       90)
[6.160s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       28 us) (n =     1) (lvls, us =       28,       28,       28,       28,       28)
[6.160s][info][gc,stats    ]   Trash Collection Set         =    0.000 s (a =        3 us) (n =     1) (lvls, us =        3,        3,        3,        3,        3)
[6.160s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       15 us) (n =     1) (lvls, us =       15,       15,       15,       15,       15)
[6.160s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =      110 us) (n =     1) (lvls, us =      109,      109,      109,      109,      110)
[6.160s][info][gc,stats    ] 
[6.160s][info][gc,stats    ] 
[6.160s][info][gc,stats    ] Under allocation pressure, concurrent cycles may cancel, and either continue cycle
[6.160s][info][gc,stats    ] under stop-the-world pause or result in stop-the-world Full GC. Increase heap size,
[6.160s][info][gc,stats    ] tune GC heuristics, set more aggressive pacing delay, or lower allocation rate
[6.160s][info][gc,stats    ] to avoid Degenerated and Full GC cycles.
[6.160s][info][gc,stats    ] 
[6.160s][info][gc,stats    ]     1 successful concurrent GCs
[6.160s][info][gc,stats    ]       0 invoked explicitly
[6.160s][info][gc,stats    ]       0 invoked implicitly
[6.160s][info][gc,stats    ] 
[6.160s][info][gc,stats    ]     0 Degenerated GCs
[6.160s][info][gc,stats    ]       0 caused by allocation failure
[6.160s][info][gc,stats    ]       0 upgraded to Full GC
[6.160s][info][gc,stats    ] 
[6.160s][info][gc,stats    ]     0 Full GCs
[6.160s][info][gc,stats    ]       0 invoked explicitly
[6.160s][info][gc,stats    ]       0 invoked implicitly
[6.160s][info][gc,stats    ]       0 caused by allocation failure
[6.160s][info][gc,stats    ]       0 upgraded from Degenerated GC
[6.160s][info][gc,stats    ] 
[6.160s][info][gc,stats    ] 
