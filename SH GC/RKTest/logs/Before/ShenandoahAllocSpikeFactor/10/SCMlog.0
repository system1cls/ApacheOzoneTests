[0.011s][info][gc] Heuristics ergonomically sets -XX:+ExplicitGCInvokesConcurrent
[0.011s][info][gc] Heuristics ergonomically sets -XX:+ShenandoahImplicitGCInvokesConcurrent
[0.011s][info][gc] Using Shenandoah
[0.012s][info][gc,ergo] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[0.012s][info][gc,init] Version: 21.0.7+6-Ubuntu-0ubuntu122.04 (release)
[0.013s][info][gc,init] CPUs: 4 total, 4 available
[0.013s][info][gc,init] Memory: 7937M
[0.013s][info][gc,init] Large Page Support: Disabled
[0.013s][info][gc,init] NUMA Support: Disabled
[0.013s][info][gc,init] Compressed Oops: Enabled (32-bit)
[0.013s][info][gc,init] Heap Min Capacity: 6656K
[0.013s][info][gc,init] Heap Initial Capacity: 127488K
[0.013s][info][gc,init] Heap Max Capacity: 2032128K
[0.013s][info][gc,init] Pre-touch: Disabled
[0.013s][info][gc,init] Mode: Snapshot-At-The-Beginning (SATB)
[0.013s][info][gc,init] Heuristics: Adaptive
[0.013s][info][gc,init] Heap Region Count: 3969
[0.013s][info][gc,init] Heap Region Size: 512K
[0.013s][info][gc,init] TLAB Size Max: 512K
[0.013s][info][gc,init] Humongous Object Threshold: 512K
[0.013s][info][gc,init] Parallel Workers: 8
[0.013s][info][gc,init] Concurrent Workers: 2
[0.022s][info][gc,metaspace] CDS archive(s) mapped at: [0x00007f50c3000000-0x00007f50c3c97000-0x00007f50c3c97000), size 13201408, SharedBaseAddress: 0x00007f50c3000000, ArchiveRelocationMode: 1.
[0.022s][info][gc,metaspace] Compressed class space mapped at: 0x00007f50c4000000-0x00007f5104000000, reserved size: 1073741824
[0.022s][info][gc,metaspace] Narrow klass base: 0x00007f50c3000000, Narrow klass shift: 0, Narrow klass range: 0x100000000
[1.244s][info][gc          ] Trigger: Metadata GC Threshold
[1.245s][info][gc,ergo     ] Free: 1790M, Max: 512K regular, 1790M humongous, Frag: 0% external, 0% internal; Reserve: 101888K, Max: 512K
[1.245s][info][gc,start    ] GC(0) Concurrent reset
[1.245s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reset
[1.245s][info][gc,ergo     ] GC(0) Pacer for Reset. Non-Taxable: 1984M
[1.245s][info][gc          ] GC(0) Concurrent reset 0.586ms
[1.246s][info][gc,start    ] GC(0) Pause Init Mark (unload classes)
[1.246s][info][gc,task     ] GC(0) Using 8 of 8 workers for init marking
[1.246s][info][gc,ergo     ] GC(0) Pacer for Mark. Expected Live: 198M, Free: 1790M, Non-Taxable: 179M, Alloc Tax Rate: 0.1x
[1.246s][info][gc          ] GC(0) Pause Init Mark (unload classes) 0.543ms
[1.246s][info][gc,start    ] GC(0) Concurrent marking roots
[1.247s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking roots
[1.250s][info][gc          ] GC(0) Concurrent marking roots 3.430ms
[1.250s][info][gc,start    ] GC(0) Concurrent marking (unload classes)
[1.250s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking
[1.260s][info][gc          ] GC(0) Concurrent marking (unload classes) 10.517ms
[1.261s][info][gc,start    ] GC(0) Pause Final Mark (unload classes)
[1.261s][info][gc,task     ] GC(0) Using 8 of 8 workers for final marking
[1.264s][info][gc,ergo     ] GC(0) Adaptive CSet Selection. Target Free: 281M, Actual Free: 1893M, Max CSet: 84672K, Min Garbage: 0B
[1.264s][info][gc,ergo     ] GC(0) Collectable Garbage: 81553K (98%), Immediate: 5343K (6%), CSet: 76210K (92%)
[1.264s][info][gc,ergo     ] GC(0) Pacer for Evacuation. Used CSet: 83968K, Free: 1794M, Non-Taxable: 179M, Alloc Tax Rate: 1.1x
[1.264s][info][gc          ] GC(0) Pause Final Mark (unload classes) 3.399ms
[1.264s][info][gc,start    ] GC(0) Concurrent thread roots
[1.264s][info][gc,task     ] GC(0) Using 2 of 8 workers for Concurrent thread roots
[1.264s][info][gc          ] GC(0) Concurrent thread roots 0.250ms
[1.264s][info][gc,start    ] GC(0) Concurrent weak references
[1.264s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak references
[1.265s][info][gc,ref      ] GC(0) Encountered references: Soft: 3955, Weak: 2134, Final: 20, Phantom: 796
[1.265s][info][gc,ref      ] GC(0) Discovered  references: Soft: 0, Weak: 868, Final: 0, Phantom: 485
[1.265s][info][gc,ref      ] GC(0) Enqueued    references: Soft: 0, Weak: 482, Final: 0, Phantom: 317
[1.265s][info][gc          ] GC(0) Concurrent weak references 0.253ms
[1.265s][info][gc,start    ] GC(0) Concurrent weak roots
[1.265s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak root
[1.267s][info][gc          ] GC(0) Concurrent weak roots 2.170ms
[1.267s][info][gc,start    ] GC(0) Concurrent cleanup
[1.267s][info][gc          ] GC(0) Concurrent cleanup 96M->91M(125M) 0.078ms
[1.267s][info][gc,ergo     ] GC(0) Free: 1794M, Max: 512K regular, 1788M humongous, Frag: 1% external, 0% internal; Reserve: 101037K, Max: 512K
[1.267s][info][gc,start    ] GC(0) Concurrent class unloading
[1.267s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent class unloading
[1.274s][info][gc          ] GC(0) Concurrent class unloading 6.817ms
[1.274s][info][gc,start    ] GC(0) Concurrent strong roots
[1.274s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent strong root
[1.275s][info][gc          ] GC(0) Concurrent strong roots 1.132ms
[1.275s][info][gc,start    ] GC(0) Concurrent evacuation
[1.275s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent evacuation
[1.281s][info][gc          ] GC(0) Concurrent evacuation 5.545ms
[1.281s][info][gc,start    ] GC(0) Pause Init Update Refs
[1.281s][info][gc,ergo     ] GC(0) Pacer for Update Refs. Used: 101898K, Free: 1794M, Non-Taxable: 179M, Alloc Tax Rate: 1.1x
[1.281s][info][gc          ] GC(0) Pause Init Update Refs 0.042ms
[1.281s][info][gc,start    ] GC(0) Concurrent update references
[1.281s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reference update
[1.287s][info][gc          ] GC(0) Concurrent update references 6.268ms
[1.288s][info][gc,start    ] GC(0) Concurrent update thread roots
[1.288s][info][gc          ] GC(0) Concurrent update thread roots 0.315ms
[1.288s][info][gc,start    ] GC(0) Pause Final Update Refs
[1.288s][info][gc,task     ] GC(0) Using 8 of 8 workers for final reference update
[1.288s][info][gc          ] GC(0) Pause Final Update Refs 0.075ms
[1.289s][info][gc,start    ] GC(0) Concurrent cleanup
[1.289s][info][gc          ] GC(0) Concurrent cleanup 99M->17M(133M) 0.081ms
[1.289s][info][gc,ergo     ] Free: 1866M, Max: 512K regular, 1779M humongous, Frag: 5% external, 0% internal; Reserve: 101888K, Max: 512K
[1.289s][info][gc,stats    ] 
[1.289s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[1.289s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[1.289s][info][gc,stats    ] 
[1.289s][info][gc,stats    ] Concurrent Reset                    691 us
[1.289s][info][gc,stats    ] Pause Init Mark (G)                1055 us
[1.289s][info][gc,stats    ] Pause Init Mark (N)                 563 us
[1.289s][info][gc,stats    ]   Update Region States               29 us
[1.289s][info][gc,stats    ] Concurrent Mark Roots              3487 us, parallelism: 0.89x
[1.289s][info][gc,stats    ]   CMR: <total>                     3088 us
[1.289s][info][gc,stats    ]   CMR: Thread Roots                 929 us, workers (us): 928,   0, ---, ---, ---, ---, ---, ---, 
[1.289s][info][gc,stats    ]   CMR: VM Strong Roots              593 us, workers (us): 593,   0, ---, ---, ---, ---, ---, ---, 
[1.289s][info][gc,stats    ]   CMR: CLDG Roots                  1567 us, workers (us): 1567, ---, ---, ---, ---, ---, ---, ---, 
[1.289s][info][gc,stats    ] Concurrent Marking                10755 us
[1.289s][info][gc,stats    ] Pause Final Mark (G)               3506 us
[1.289s][info][gc,stats    ] Pause Final Mark (N)               3409 us
[1.289s][info][gc,stats    ]   Finish Mark                      3234 us
[1.289s][info][gc,stats    ]   Update Region States               27 us
[1.289s][info][gc,stats    ]   Choose Collection Set              76 us
[1.289s][info][gc,stats    ]   Rebuild Free Set                   18 us
[1.289s][info][gc,stats    ] Concurrent Thread Roots             264 us, parallelism: 1.18x
[1.289s][info][gc,stats    ]   CTR: <total>                      312 us
[1.289s][info][gc,stats    ]   CTR: Thread Roots                 312 us, workers (us): 119, 193, ---, ---, ---, ---, ---, ---, 
[1.289s][info][gc,stats    ] Concurrent Weak References          261 us, parallelism: 0.98x
[1.289s][info][gc,stats    ]   CWRF: <total>                     256 us
[1.289s][info][gc,stats    ]   CWRF: Weak References             256 us, workers (us): 159,  97, ---, ---, ---, ---, ---, ---, 
[1.289s][info][gc,stats    ] Concurrent Weak Roots              2187 us
[1.289s][info][gc,stats    ]   Roots                            1367 us, parallelism: 1.82x
[1.289s][info][gc,stats    ]     CWR: <total>                   2485 us
[1.289s][info][gc,stats    ]     CWR: Code Cache Roots           801 us, workers (us): 392, 409, ---, ---, ---, ---, ---, ---, 
[1.289s][info][gc,stats    ]     CWR: VM Weak Roots             1670 us, workers (us): 841, 829, ---, ---, ---, ---, ---, ---, 
[1.289s][info][gc,stats    ]     CWR: CLDG Roots                  14 us, workers (us): ---,  14, ---, ---, ---, ---, ---, ---, 
[1.289s][info][gc,stats    ]   Rendezvous                        786 us
[1.289s][info][gc,stats    ] Concurrent Cleanup                   88 us
[1.289s][info][gc,stats    ] Concurrent Class Unloading         6853 us
[1.289s][info][gc,stats    ]   Unlink Stale                     1498 us
[1.289s][info][gc,stats    ]     System Dictionary                35 us
[1.289s][info][gc,stats    ]     Weak Class Links                  0 us
[1.289s][info][gc,stats    ]     Code Roots                     1462 us
[1.289s][info][gc,stats    ]   Rendezvous                         41 us
[1.289s][info][gc,stats    ]   Purge Unlinked                   5259 us
[1.289s][info][gc,stats    ]     Code Roots                     5232 us
[1.289s][info][gc,stats    ]     CLDG                             27 us
[1.289s][info][gc,stats    ]     Exception Caches                  0 us
[1.289s][info][gc,stats    ] Concurrent Strong Roots            1166 us, parallelism: 0.89x
[1.289s][info][gc,stats    ]   CSR: <total>                     1036 us
[1.289s][info][gc,stats    ]   CSR: VM Strong Roots               22 us, workers (us):  22,   0, ---, ---, ---, ---, ---, ---, 
[1.289s][info][gc,stats    ]   CSR: CLDG Roots                  1014 us, workers (us): 1014, ---, ---, ---, ---, ---, ---, ---, 
[1.289s][info][gc,stats    ] Concurrent Evacuation              5583 us
[1.289s][info][gc,stats    ] Pause Init Update Refs (G)          204 us
[1.289s][info][gc,stats    ] Pause Init Update Refs (N)           50 us
[1.289s][info][gc,stats    ]   Manage GCLABs                       4 us
[1.289s][info][gc,stats    ] Concurrent Update Refs             7130 us
[1.289s][info][gc,stats    ] Concurrent Update Thread Roots      347 us
[1.289s][info][gc,stats    ] Pause Final Update Refs (G)         193 us
[1.289s][info][gc,stats    ] Pause Final Update Refs (N)         102 us
[1.289s][info][gc,stats    ]   Update Region States               23 us
[1.289s][info][gc,stats    ]   Trash Collection Set                3 us
[1.289s][info][gc,stats    ]   Rebuild Free Set                   17 us
[1.289s][info][gc,stats    ] Concurrent Cleanup                   92 us
[1.289s][info][gc,stats    ] 
[1.289s][info][gc,stats    ] Allocation pacing accrued:
[1.289s][info][gc,stats    ]       0 of  1277 ms (  0.0%): <total>
[1.289s][info][gc,stats    ]       0 of  1277 ms (  0.0%): <average total>
[1.289s][info][gc,stats    ] 
[1.289s][info][gc,metaspace] Metaspace: 21208K(21568K)->21528K(21888K) NonClass: 18872K(19072K)->19142K(19328K) Class: 2336K(2496K)->2385K(2560K)
[1.289s][info][gc,ergo     ] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[7.546s][info][gc          ] Cancelling GC: Stopping VM
[7.547s][info][gc,heap,exit] Heap
[7.547s][info][gc,heap,exit] Shenandoah Heap
[7.547s][info][gc,heap,exit]  1984M max, 1984M soft max, 133M committed, 37881K used
[7.547s][info][gc,heap,exit]  3969 x 512K regions
[7.547s][info][gc,heap,exit] Status: cancelled
[7.547s][info][gc,heap,exit] Reserved region:
[7.547s][info][gc,heap,exit]  - [0x0000000083f80000, 0x0000000100000000) 
[7.547s][info][gc,heap,exit] Collection set:
[7.547s][info][gc,heap,exit]  - map (vanilla): 0x000000000001107f
[7.547s][info][gc,heap,exit]  - map (biased):  0x0000000000010000
[7.547s][info][gc,heap,exit] 
[7.547s][info][gc,heap,exit]  Metaspace       used 25405K, committed 25792K, reserved 1114112K
[7.547s][info][gc,heap,exit]   class space    used 2924K, committed 3072K, reserved 1048576K
[7.547s][info][gc,stats    ] 
[7.547s][info][gc,stats    ] GC STATISTICS:
[7.547s][info][gc,stats    ]   "(G)" (gross) pauses include VM time: time to notify and block threads, do the pre-
[7.547s][info][gc,stats    ]         and post-safepoint housekeeping. Use -Xlog:safepoint+stats to dissect.
[7.547s][info][gc,stats    ]   "(N)" (net) pauses are the times spent in the actual GC code.
[7.547s][info][gc,stats    ]   "a" is average time for each phase, look at levels to see if average makes sense.
[7.547s][info][gc,stats    ]   "lvls" are quantiles: 0% (minimum), 25%, 50% (median), 75%, 100% (maximum).
[7.547s][info][gc,stats    ] 
[7.547s][info][gc,stats    ]   All times are wall-clock times, except per-root-class counters, that are sum over
[7.547s][info][gc,stats    ]   all workers. Dividing the <total> over the root stage time estimates parallelism.
[7.547s][info][gc,stats    ] 
[7.547s][info][gc,stats    ]   Pacing delays are measured from entering the pacing code till exiting it. Therefore,
[7.547s][info][gc,stats    ]   observed pacing delays may be higher than the threshold when paced thread spent more
[7.547s][info][gc,stats    ]   time in the pacing code. It usually happens when thread is de-scheduled while paced,
[7.547s][info][gc,stats    ]   OS takes longer to unblock the thread, or JVM experiences an STW pause.
[7.547s][info][gc,stats    ] 
[7.547s][info][gc,stats    ]   Higher delay would prevent application outpacing the GC, but it will hide the GC latencies
[7.547s][info][gc,stats    ]   from the STW pause times. Pacing affects the individual threads, and so it would also be
[7.547s][info][gc,stats    ]   invisible to the usual profiling tools, but would add up to end-to-end application latency.
[7.547s][info][gc,stats    ]   Raise max pacing delay with care.
[7.547s][info][gc,stats    ] 
[7.547s][info][gc,stats    ] Concurrent Reset               =    0.001 s (a =      691 us) (n =     1) (lvls, us =      689,      689,      689,      689,      691)
[7.547s][info][gc,stats    ] Pause Init Mark (G)            =    0.001 s (a =     1055 us) (n =     1) (lvls, us =     1055,     1055,     1055,     1055,     1055)
[7.547s][info][gc,stats    ] Pause Init Mark (N)            =    0.001 s (a =      563 us) (n =     1) (lvls, us =      563,      563,      563,      563,      563)
[7.547s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       29 us) (n =     1) (lvls, us =       29,       29,       29,       29,       29)
[7.547s][info][gc,stats    ] Concurrent Mark Roots          =    0.003 s (a =     3487 us) (n =     1) (lvls, us =     3477,     3477,     3477,     3477,     3487)
[7.547s][info][gc,stats    ]   CMR: <total>                 =    0.003 s (a =     3088 us) (n =     1) (lvls, us =     3086,     3086,     3086,     3086,     3088)
[7.547s][info][gc,stats    ]   CMR: Thread Roots            =    0.001 s (a =      929 us) (n =     1) (lvls, us =      928,      928,      928,      928,      929)
[7.547s][info][gc,stats    ]   CMR: VM Strong Roots         =    0.001 s (a =      593 us) (n =     1) (lvls, us =      592,      592,      592,      592,      593)
[7.547s][info][gc,stats    ]   CMR: CLDG Roots              =    0.002 s (a =     1567 us) (n =     1) (lvls, us =     1562,     1562,     1562,     1562,     1567)
[7.547s][info][gc,stats    ] Concurrent Marking             =    0.011 s (a =    10755 us) (n =     1) (lvls, us =    10742,    10742,    10742,    10742,    10755)
[7.547s][info][gc,stats    ] Pause Final Mark (G)           =    0.004 s (a =     3506 us) (n =     1) (lvls, us =     3496,     3496,     3496,     3496,     3506)
[7.547s][info][gc,stats    ] Pause Final Mark (N)           =    0.003 s (a =     3409 us) (n =     1) (lvls, us =     3398,     3398,     3398,     3398,     3409)
[7.547s][info][gc,stats    ]   Finish Mark                  =    0.003 s (a =     3234 us) (n =     1) (lvls, us =     3223,     3223,     3223,     3223,     3234)
[7.547s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       27 us) (n =     1) (lvls, us =       27,       27,       27,       27,       27)
[7.547s][info][gc,stats    ]   Choose Collection Set        =    0.000 s (a =       76 us) (n =     1) (lvls, us =       76,       76,       76,       76,       76)
[7.547s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       18 us) (n =     1) (lvls, us =       18,       18,       18,       18,       18)
[7.547s][info][gc,stats    ] Concurrent Thread Roots        =    0.000 s (a =      264 us) (n =     1) (lvls, us =      262,      262,      262,      262,      264)
[7.547s][info][gc,stats    ]   CTR: <total>                 =    0.000 s (a =      312 us) (n =     1) (lvls, us =      311,      311,      311,      311,      312)
[7.547s][info][gc,stats    ]   CTR: Thread Roots            =    0.000 s (a =      312 us) (n =     1) (lvls, us =      311,      311,      311,      311,      312)
[7.547s][info][gc,stats    ] Concurrent Weak References     =    0.000 s (a =      261 us) (n =     1) (lvls, us =      260,      260,      260,      260,      261)
[7.547s][info][gc,stats    ]   CWRF: <total>                =    0.000 s (a =      256 us) (n =     1) (lvls, us =      256,      256,      256,      256,      256)
[7.547s][info][gc,stats    ]   CWRF: Weak References        =    0.000 s (a =      256 us) (n =     1) (lvls, us =      256,      256,      256,      256,      256)
[7.547s][info][gc,stats    ] Concurrent Weak Roots          =    0.002 s (a =     2187 us) (n =     1) (lvls, us =     2168,     2168,     2168,     2168,     2187)
[7.547s][info][gc,stats    ]   Roots                        =    0.001 s (a =     1367 us) (n =     1) (lvls, us =     1348,     1348,     1348,     1348,     1367)
[7.547s][info][gc,stats    ]     CWR: <total>               =    0.002 s (a =     2485 us) (n =     1) (lvls, us =     2480,     2480,     2480,     2480,     2485)
[7.547s][info][gc,stats    ]     CWR: Code Cache Roots      =    0.001 s (a =      801 us) (n =     1) (lvls, us =      801,      801,      801,      801,      801)
[7.547s][info][gc,stats    ]     CWR: VM Weak Roots         =    0.002 s (a =     1670 us) (n =     1) (lvls, us =     1660,     1660,     1660,     1660,     1670)
[7.547s][info][gc,stats    ]     CWR: CLDG Roots            =    0.000 s (a =       14 us) (n =     1) (lvls, us =       13,       13,       13,       13,       14)
[7.547s][info][gc,stats    ]   Rendezvous                   =    0.001 s (a =      786 us) (n =     1) (lvls, us =      785,      785,      785,      785,      786)
[7.548s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =       88 us) (n =     1) (lvls, us =       88,       88,       88,       88,       88)
[7.548s][info][gc,stats    ] Concurrent Class Unloading     =    0.007 s (a =     6853 us) (n =     1) (lvls, us =     6836,     6836,     6836,     6836,     6853)
[7.548s][info][gc,stats    ]   Unlink Stale                 =    0.001 s (a =     1498 us) (n =     1) (lvls, us =     1484,     1484,     1484,     1484,     1498)
[7.548s][info][gc,stats    ]     System Dictionary          =    0.000 s (a =       35 us) (n =     1) (lvls, us =       34,       34,       34,       34,       35)
[7.548s][info][gc,stats    ]     Weak Class Links           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[7.548s][info][gc,stats    ]     Code Roots                 =    0.001 s (a =     1462 us) (n =     1) (lvls, us =     1445,     1445,     1445,     1445,     1462)
[7.548s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =       41 us) (n =     1) (lvls, us =       41,       41,       41,       41,       41)
[7.548s][info][gc,stats    ]   Purge Unlinked               =    0.005 s (a =     5259 us) (n =     1) (lvls, us =     5254,     5254,     5254,     5254,     5259)
[7.548s][info][gc,stats    ]     Code Roots                 =    0.005 s (a =     5232 us) (n =     1) (lvls, us =     5215,     5215,     5215,     5215,     5232)
[7.548s][info][gc,stats    ]     CLDG                       =    0.000 s (a =       27 us) (n =     1) (lvls, us =       27,       27,       27,       27,       27)
[7.548s][info][gc,stats    ]     Exception Caches           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[7.548s][info][gc,stats    ] Concurrent Strong Roots        =    0.001 s (a =     1166 us) (n =     1) (lvls, us =     1152,     1152,     1152,     1152,     1166)
[7.548s][info][gc,stats    ]   CSR: <total>                 =    0.001 s (a =     1036 us) (n =     1) (lvls, us =     1035,     1035,     1035,     1035,     1036)
[7.548s][info][gc,stats    ]   CSR: VM Strong Roots         =    0.000 s (a =       22 us) (n =     1) (lvls, us =       22,       22,       22,       22,       22)
[7.548s][info][gc,stats    ]   CSR: CLDG Roots              =    0.001 s (a =     1014 us) (n =     1) (lvls, us =      996,      996,      996,      996,     1014)
[7.548s][info][gc,stats    ] Concurrent Evacuation          =    0.006 s (a =     5583 us) (n =     1) (lvls, us =     5566,     5566,     5566,     5566,     5583)
[7.548s][info][gc,stats    ] Pause Init Update Refs (G)     =    0.000 s (a =      204 us) (n =     1) (lvls, us =      203,      203,      203,      203,      204)
[7.548s][info][gc,stats    ] Pause Init Update Refs (N)     =    0.000 s (a =       50 us) (n =     1) (lvls, us =       50,       50,       50,       50,       50)
[7.548s][info][gc,stats    ]   Manage GCLABs                =    0.000 s (a =        4 us) (n =     1) (lvls, us =        4,        4,        4,        4,        4)
[7.548s][info][gc,stats    ] Concurrent Update Refs         =    0.007 s (a =     7130 us) (n =     1) (lvls, us =     7129,     7129,     7129,     7129,     7130)
[7.548s][info][gc,stats    ] Concurrent Update Thread Roots =    0.000 s (a =      347 us) (n =     1) (lvls, us =      346,      346,      346,      346,      347)
[7.548s][info][gc,stats    ] Pause Final Update Refs (G)    =    0.000 s (a =      193 us) (n =     1) (lvls, us =      191,      191,      191,      191,      193)
[7.548s][info][gc,stats    ] Pause Final Update Refs (N)    =    0.000 s (a =      102 us) (n =     1) (lvls, us =      102,      102,      102,      102,      102)
[7.548s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       23 us) (n =     1) (lvls, us =       23,       23,       23,       23,       23)
[7.548s][info][gc,stats    ]   Trash Collection Set         =    0.000 s (a =        3 us) (n =     1) (lvls, us =        3,        3,        3,        3,        3)
[7.548s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       17 us) (n =     1) (lvls, us =       17,       17,       17,       17,       17)
[7.548s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =       92 us) (n =     1) (lvls, us =       92,       92,       92,       92,       92)
[7.548s][info][gc,stats    ] 
[7.548s][info][gc,stats    ] 
[7.548s][info][gc,stats    ] Under allocation pressure, concurrent cycles may cancel, and either continue cycle
[7.548s][info][gc,stats    ] under stop-the-world pause or result in stop-the-world Full GC. Increase heap size,
[7.548s][info][gc,stats    ] tune GC heuristics, set more aggressive pacing delay, or lower allocation rate
[7.548s][info][gc,stats    ] to avoid Degenerated and Full GC cycles.
[7.548s][info][gc,stats    ] 
[7.548s][info][gc,stats    ]     1 successful concurrent GCs
[7.548s][info][gc,stats    ]       0 invoked explicitly
[7.548s][info][gc,stats    ]       0 invoked implicitly
[7.548s][info][gc,stats    ] 
[7.548s][info][gc,stats    ]     0 Degenerated GCs
[7.548s][info][gc,stats    ]       0 caused by allocation failure
[7.548s][info][gc,stats    ]       0 upgraded to Full GC
[7.548s][info][gc,stats    ] 
[7.548s][info][gc,stats    ]     0 Full GCs
[7.548s][info][gc,stats    ]       0 invoked explicitly
[7.548s][info][gc,stats    ]       0 invoked implicitly
[7.548s][info][gc,stats    ]       0 caused by allocation failure
[7.548s][info][gc,stats    ]       0 upgraded from Degenerated GC
[7.548s][info][gc,stats    ] 
[7.548s][info][gc,stats    ] 
