[0.009s][info][gc] Heuristics ergonomically sets -XX:+ExplicitGCInvokesConcurrent
[0.009s][info][gc] Heuristics ergonomically sets -XX:+ShenandoahImplicitGCInvokesConcurrent
[0.009s][info][gc] Using Shenandoah
[0.011s][info][gc,ergo] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[0.011s][info][gc,init] Version: 21.0.7+6-Ubuntu-0ubuntu122.04 (release)
[0.011s][info][gc,init] CPUs: 4 total, 4 available
[0.011s][info][gc,init] Memory: 7937M
[0.011s][info][gc,init] Large Page Support: Disabled
[0.011s][info][gc,init] NUMA Support: Disabled
[0.011s][info][gc,init] Compressed Oops: Enabled (32-bit)
[0.011s][info][gc,init] Heap Min Capacity: 6656K
[0.011s][info][gc,init] Heap Initial Capacity: 127488K
[0.011s][info][gc,init] Heap Max Capacity: 2032128K
[0.011s][info][gc,init] Pre-touch: Disabled
[0.011s][info][gc,init] Mode: Snapshot-At-The-Beginning (SATB)
[0.011s][info][gc,init] Heuristics: Adaptive
[0.011s][info][gc,init] Heap Region Count: 3969
[0.011s][info][gc,init] Heap Region Size: 512K
[0.011s][info][gc,init] TLAB Size Max: 512K
[0.011s][info][gc,init] Humongous Object Threshold: 512K
[0.011s][info][gc,init] Parallel Workers: 8
[0.011s][info][gc,init] Concurrent Workers: 2
[0.019s][info][gc,metaspace] CDS archive(s) mapped at: [0x00007fec2f000000-0x00007fec2fc97000-0x00007fec2fc97000), size 13201408, SharedBaseAddress: 0x00007fec2f000000, ArchiveRelocationMode: 1.
[0.019s][info][gc,metaspace] Compressed class space mapped at: 0x00007fec30000000-0x00007fec70000000, reserved size: 1073741824
[0.019s][info][gc,metaspace] Narrow klass base: 0x00007fec2f000000, Narrow klass shift: 0, Narrow klass range: 0x100000000
[1.329s][info][gc          ] Trigger: Metadata GC Threshold
[1.329s][info][gc,ergo     ] Free: 1790M, Max: 512K regular, 1790M humongous, Frag: 0% external, 0% internal; Reserve: 101888K, Max: 512K
[1.329s][info][gc,start    ] GC(0) Concurrent reset
[1.329s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reset
[1.330s][info][gc,ergo     ] GC(0) Pacer for Reset. Non-Taxable: 1984M
[1.330s][info][gc          ] GC(0) Concurrent reset 0.427ms
[1.330s][info][gc,start    ] GC(0) Pause Init Mark (unload classes)
[1.331s][info][gc,task     ] GC(0) Using 8 of 8 workers for init marking
[1.331s][info][gc,ergo     ] GC(0) Pacer for Mark. Expected Live: 198M, Free: 1790M, Non-Taxable: 179M, Alloc Tax Rate: 0.1x
[1.331s][info][gc          ] GC(0) Pause Init Mark (unload classes) 0.586ms
[1.331s][info][gc,start    ] GC(0) Concurrent marking roots
[1.331s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking roots
[1.334s][info][gc          ] GC(0) Concurrent marking roots 2.977ms
[1.334s][info][gc,start    ] GC(0) Concurrent marking (unload classes)
[1.334s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking
[1.346s][info][gc          ] GC(0) Concurrent marking (unload classes) 12.030ms
[1.346s][info][gc,start    ] GC(0) Pause Final Mark (unload classes)
[1.346s][info][gc,task     ] GC(0) Using 8 of 8 workers for final marking
[1.349s][info][gc,ergo     ] GC(0) Adaptive CSet Selection. Target Free: 221M, Actual Free: 1893M, Max CSet: 84672K, Min Garbage: 0B
[1.349s][info][gc,ergo     ] GC(0) Collectable Garbage: 82089K (99%), Immediate: 5343K (6%), CSet: 76746K (92%)
[1.349s][info][gc,ergo     ] GC(0) Pacer for Evacuation. Used CSet: 84480K, Free: 1794M, Non-Taxable: 179M, Alloc Tax Rate: 1.1x
[1.349s][info][gc          ] GC(0) Pause Final Mark (unload classes) 3.231ms
[1.349s][info][gc,start    ] GC(0) Concurrent thread roots
[1.349s][info][gc,task     ] GC(0) Using 2 of 8 workers for Concurrent thread roots
[1.349s][info][gc          ] GC(0) Concurrent thread roots 0.191ms
[1.349s][info][gc,start    ] GC(0) Concurrent weak references
[1.349s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak references
[1.350s][info][gc,ref      ] GC(0) Encountered references: Soft: 3955, Weak: 2135, Final: 20, Phantom: 796
[1.350s][info][gc,ref      ] GC(0) Discovered  references: Soft: 0, Weak: 989, Final: 0, Phantom: 484
[1.350s][info][gc,ref      ] GC(0) Enqueued    references: Soft: 0, Weak: 483, Final: 0, Phantom: 317
[1.350s][info][gc          ] GC(0) Concurrent weak references 0.362ms
[1.350s][info][gc,start    ] GC(0) Concurrent weak roots
[1.350s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak root
[1.352s][info][gc          ] GC(0) Concurrent weak roots 1.981ms
[1.352s][info][gc,start    ] GC(0) Concurrent cleanup
[1.352s][info][gc          ] GC(0) Concurrent cleanup 97M->92M(125M) 0.095ms
[1.352s][info][gc,ergo     ] GC(0) Free: 1793M, Max: 512K regular, 1788M humongous, Frag: 1% external, 0% internal; Reserve: 100864K, Max: 512K
[1.352s][info][gc,start    ] GC(0) Concurrent class unloading
[1.352s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent class unloading
[1.356s][info][gc          ] GC(0) Concurrent class unloading 3.945ms
[1.356s][info][gc,start    ] GC(0) Concurrent strong roots
[1.356s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent strong root
[1.357s][info][gc          ] GC(0) Concurrent strong roots 1.272ms
[1.357s][info][gc,start    ] GC(0) Concurrent evacuation
[1.357s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent evacuation
[1.369s][info][gc          ] GC(0) Concurrent evacuation 11.537ms
[1.369s][info][gc,start    ] GC(0) Pause Init Update Refs
[1.369s][info][gc,ergo     ] GC(0) Pacer for Update Refs. Used: 100M, Free: 1793M, Non-Taxable: 179M, Alloc Tax Rate: 1.1x
[1.369s][info][gc          ] GC(0) Pause Init Update Refs 0.044ms
[1.369s][info][gc,start    ] GC(0) Concurrent update references
[1.369s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reference update
[1.374s][info][gc          ] GC(0) Concurrent update references 5.237ms
[1.374s][info][gc,start    ] GC(0) Concurrent update thread roots
[1.374s][info][gc          ] GC(0) Concurrent update thread roots 0.144ms
[1.374s][info][gc,start    ] GC(0) Pause Final Update Refs
[1.374s][info][gc,task     ] GC(0) Using 8 of 8 workers for final reference update
[1.375s][info][gc          ] GC(0) Pause Final Update Refs 0.097ms
[1.375s][info][gc,start    ] GC(0) Concurrent cleanup
[1.375s][info][gc          ] GC(0) Concurrent cleanup 100M->18M(133M) 0.093ms
[1.375s][info][gc,ergo     ] Free: 1866M, Max: 512K regular, 1779M humongous, Frag: 5% external, 0% internal; Reserve: 101888K, Max: 512K
[1.375s][info][gc,stats    ] 
[1.375s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[1.375s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[1.375s][info][gc,stats    ] 
[1.375s][info][gc,stats    ] Concurrent Reset                    455 us
[1.375s][info][gc,stats    ] Pause Init Mark (G)                 879 us
[1.375s][info][gc,stats    ] Pause Init Mark (N)                 601 us
[1.375s][info][gc,stats    ]   Update Region States               30 us
[1.375s][info][gc,stats    ] Concurrent Mark Roots              3016 us, parallelism: 1.14x
[1.375s][info][gc,stats    ]   CMR: <total>                     3453 us
[1.375s][info][gc,stats    ]   CMR: Thread Roots                1085 us, workers (us): 411, 674, ---, ---, ---, ---, ---, ---, 
[1.375s][info][gc,stats    ]   CMR: VM Strong Roots              719 us, workers (us): 718,   1, ---, ---, ---, ---, ---, ---, 
[1.375s][info][gc,stats    ]   CMR: CLDG Roots                  1649 us, workers (us): 1649, ---, ---, ---, ---, ---, ---, ---, 
[1.375s][info][gc,stats    ] Concurrent Marking                12058 us
[1.375s][info][gc,stats    ] Pause Final Mark (G)               3368 us
[1.375s][info][gc,stats    ] Pause Final Mark (N)               3237 us
[1.375s][info][gc,stats    ]   Finish Mark                      3055 us
[1.375s][info][gc,stats    ]   Update Region States               36 us
[1.375s][info][gc,stats    ]   Choose Collection Set              81 us
[1.375s][info][gc,stats    ]   Rebuild Free Set                   16 us
[1.375s][info][gc,stats    ] Concurrent Thread Roots             203 us, parallelism: 1.40x
[1.375s][info][gc,stats    ]   CTR: <total>                      284 us
[1.375s][info][gc,stats    ]   CTR: Thread Roots                 284 us, workers (us): 139, 145, ---, ---, ---, ---, ---, ---, 
[1.375s][info][gc,stats    ] Concurrent Weak References          368 us, parallelism: 0.73x
[1.375s][info][gc,stats    ]   CWRF: <total>                     268 us
[1.375s][info][gc,stats    ]   CWRF: Weak References             268 us, workers (us): 268,   0, ---, ---, ---, ---, ---, ---, 
[1.375s][info][gc,stats    ] Concurrent Weak Roots              2000 us
[1.375s][info][gc,stats    ]   Roots                            1843 us, parallelism: 1.91x
[1.375s][info][gc,stats    ]     CWR: <total>                   3519 us
[1.375s][info][gc,stats    ]     CWR: Code Cache Roots           820 us, workers (us): 435, 385, ---, ---, ---, ---, ---, ---, 
[1.375s][info][gc,stats    ]     CWR: VM Weak Roots             2682 us, workers (us): 1337, 1344, ---, ---, ---, ---, ---, ---, 
[1.375s][info][gc,stats    ]     CWR: CLDG Roots                  17 us, workers (us):  17, ---, ---, ---, ---, ---, ---, ---, 
[1.375s][info][gc,stats    ]   Rendezvous                        124 us
[1.375s][info][gc,stats    ] Concurrent Cleanup                  104 us
[1.375s][info][gc,stats    ] Concurrent Class Unloading         3961 us
[1.375s][info][gc,stats    ]   Unlink Stale                     1530 us
[1.375s][info][gc,stats    ]     System Dictionary                35 us
[1.375s][info][gc,stats    ]     Weak Class Links                  0 us
[1.375s][info][gc,stats    ]     Code Roots                     1494 us
[1.375s][info][gc,stats    ]   Rendezvous                        115 us
[1.375s][info][gc,stats    ]   Purge Unlinked                   2282 us
[1.375s][info][gc,stats    ]     Code Roots                     2271 us
[1.375s][info][gc,stats    ]     CLDG                              9 us
[1.375s][info][gc,stats    ]     Exception Caches                  0 us
[1.375s][info][gc,stats    ] Concurrent Strong Roots            1286 us, parallelism: 0.95x
[1.375s][info][gc,stats    ]   CSR: <total>                     1216 us
[1.375s][info][gc,stats    ]   CSR: VM Strong Roots               22 us, workers (us):  16,   6, ---, ---, ---, ---, ---, ---, 
[1.375s][info][gc,stats    ]   CSR: CLDG Roots                  1194 us, workers (us): 1194, ---, ---, ---, ---, ---, ---, ---, 
[1.375s][info][gc,stats    ] Concurrent Evacuation             11571 us
[1.375s][info][gc,stats    ] Pause Init Update Refs (G)          241 us
[1.375s][info][gc,stats    ] Pause Init Update Refs (N)           53 us
[1.375s][info][gc,stats    ]   Manage GCLABs                       6 us
[1.375s][info][gc,stats    ] Concurrent Update Refs             5266 us
[1.375s][info][gc,stats    ] Concurrent Update Thread Roots      158 us
[1.375s][info][gc,stats    ] Pause Final Update Refs (G)         237 us
[1.375s][info][gc,stats    ] Pause Final Update Refs (N)         108 us
[1.375s][info][gc,stats    ]   Update Region States               34 us
[1.375s][info][gc,stats    ]   Trash Collection Set                4 us
[1.375s][info][gc,stats    ]   Rebuild Free Set                   19 us
[1.375s][info][gc,stats    ] Concurrent Cleanup                  103 us
[1.375s][info][gc,stats    ] 
[1.375s][info][gc,stats    ] Allocation pacing accrued:
[1.375s][info][gc,stats    ]       0 of  1365 ms (  0.0%): <total>
[1.375s][info][gc,stats    ]       0 of  1365 ms (  0.0%): <average total>
[1.375s][info][gc,stats    ] 
[1.375s][info][gc,metaspace] Metaspace: 21214K(21568K)->21494K(21824K) NonClass: 18876K(19072K)->19114K(19264K) Class: 2338K(2496K)->2379K(2560K)
[1.375s][info][gc,ergo     ] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[7.743s][info][gc          ] Cancelling GC: Stopping VM
[7.743s][info][gc,heap,exit] Heap
[7.743s][info][gc,heap,exit] Shenandoah Heap
[7.743s][info][gc,heap,exit]  1984M max, 1984M soft max, 133M committed, 36916K used
[7.743s][info][gc,heap,exit]  3969 x 512K regions
[7.743s][info][gc,heap,exit] Status: cancelled
[7.743s][info][gc,heap,exit] Reserved region:
[7.744s][info][gc,heap,exit]  - [0x0000000083f80000, 0x0000000100000000) 
[7.744s][info][gc,heap,exit] Collection set:
[7.744s][info][gc,heap,exit]  - map (vanilla): 0x000000000001107f
[7.744s][info][gc,heap,exit]  - map (biased):  0x0000000000010000
[7.744s][info][gc,heap,exit] 
[7.744s][info][gc,heap,exit]  Metaspace       used 25417K, committed 25792K, reserved 1114112K
[7.744s][info][gc,heap,exit]   class space    used 2926K, committed 3072K, reserved 1048576K
[7.744s][info][gc,stats    ] 
[7.744s][info][gc,stats    ] GC STATISTICS:
[7.744s][info][gc,stats    ]   "(G)" (gross) pauses include VM time: time to notify and block threads, do the pre-
[7.744s][info][gc,stats    ]         and post-safepoint housekeeping. Use -Xlog:safepoint+stats to dissect.
[7.744s][info][gc,stats    ]   "(N)" (net) pauses are the times spent in the actual GC code.
[7.744s][info][gc,stats    ]   "a" is average time for each phase, look at levels to see if average makes sense.
[7.744s][info][gc,stats    ]   "lvls" are quantiles: 0% (minimum), 25%, 50% (median), 75%, 100% (maximum).
[7.744s][info][gc,stats    ] 
[7.744s][info][gc,stats    ]   All times are wall-clock times, except per-root-class counters, that are sum over
[7.744s][info][gc,stats    ]   all workers. Dividing the <total> over the root stage time estimates parallelism.
[7.744s][info][gc,stats    ] 
[7.744s][info][gc,stats    ]   Pacing delays are measured from entering the pacing code till exiting it. Therefore,
[7.744s][info][gc,stats    ]   observed pacing delays may be higher than the threshold when paced thread spent more
[7.744s][info][gc,stats    ]   time in the pacing code. It usually happens when thread is de-scheduled while paced,
[7.744s][info][gc,stats    ]   OS takes longer to unblock the thread, or JVM experiences an STW pause.
[7.744s][info][gc,stats    ] 
[7.744s][info][gc,stats    ]   Higher delay would prevent application outpacing the GC, but it will hide the GC latencies
[7.744s][info][gc,stats    ]   from the STW pause times. Pacing affects the individual threads, and so it would also be
[7.744s][info][gc,stats    ]   invisible to the usual profiling tools, but would add up to end-to-end application latency.
[7.744s][info][gc,stats    ]   Raise max pacing delay with care.
[7.744s][info][gc,stats    ] 
[7.744s][info][gc,stats    ] Concurrent Reset               =    0.000 s (a =      455 us) (n =     1) (lvls, us =      453,      453,      453,      453,      455)
[7.744s][info][gc,stats    ] Pause Init Mark (G)            =    0.001 s (a =      879 us) (n =     1) (lvls, us =      877,      877,      877,      877,      879)
[7.744s][info][gc,stats    ] Pause Init Mark (N)            =    0.001 s (a =      601 us) (n =     1) (lvls, us =      600,      600,      600,      600,      601)
[7.744s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       30 us) (n =     1) (lvls, us =       30,       30,       30,       30,       30)
[7.744s][info][gc,stats    ] Concurrent Mark Roots          =    0.003 s (a =     3016 us) (n =     1) (lvls, us =     3008,     3008,     3008,     3008,     3016)
[7.744s][info][gc,stats    ]   CMR: <total>                 =    0.003 s (a =     3453 us) (n =     1) (lvls, us =     3438,     3438,     3438,     3438,     3453)
[7.744s][info][gc,stats    ]   CMR: Thread Roots            =    0.001 s (a =     1085 us) (n =     1) (lvls, us =     1074,     1074,     1074,     1074,     1085)
[7.744s][info][gc,stats    ]   CMR: VM Strong Roots         =    0.001 s (a =      719 us) (n =     1) (lvls, us =      717,      717,      717,      717,      719)
[7.744s][info][gc,stats    ]   CMR: CLDG Roots              =    0.002 s (a =     1649 us) (n =     1) (lvls, us =     1641,     1641,     1641,     1641,     1649)
[7.744s][info][gc,stats    ] Concurrent Marking             =    0.012 s (a =    12058 us) (n =     1) (lvls, us =    11914,    11914,    11914,    11914,    12058)
[7.744s][info][gc,stats    ] Pause Final Mark (G)           =    0.003 s (a =     3368 us) (n =     1) (lvls, us =     3359,     3359,     3359,     3359,     3368)
[7.744s][info][gc,stats    ] Pause Final Mark (N)           =    0.003 s (a =     3237 us) (n =     1) (lvls, us =     3223,     3223,     3223,     3223,     3237)
[7.744s][info][gc,stats    ]   Finish Mark                  =    0.003 s (a =     3055 us) (n =     1) (lvls, us =     3047,     3047,     3047,     3047,     3055)
[7.744s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       36 us) (n =     1) (lvls, us =       35,       35,       35,       35,       36)
[7.745s][info][gc,stats    ]   Choose Collection Set        =    0.000 s (a =       81 us) (n =     1) (lvls, us =       81,       81,       81,       81,       81)
[7.745s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       16 us) (n =     1) (lvls, us =       16,       16,       16,       16,       16)
[7.745s][info][gc,stats    ] Concurrent Thread Roots        =    0.000 s (a =      203 us) (n =     1) (lvls, us =      201,      201,      201,      201,      203)
[7.745s][info][gc,stats    ]   CTR: <total>                 =    0.000 s (a =      284 us) (n =     1) (lvls, us =      283,      283,      283,      283,      284)
[7.745s][info][gc,stats    ]   CTR: Thread Roots            =    0.000 s (a =      284 us) (n =     1) (lvls, us =      283,      283,      283,      283,      284)
[7.745s][info][gc,stats    ] Concurrent Weak References     =    0.000 s (a =      368 us) (n =     1) (lvls, us =      367,      367,      367,      367,      368)
[7.745s][info][gc,stats    ]   CWRF: <total>                =    0.000 s (a =      268 us) (n =     1) (lvls, us =      268,      268,      268,      268,      268)
[7.745s][info][gc,stats    ]   CWRF: Weak References        =    0.000 s (a =      268 us) (n =     1) (lvls, us =      268,      268,      268,      268,      268)
[7.745s][info][gc,stats    ] Concurrent Weak Roots          =    0.002 s (a =     2000 us) (n =     1) (lvls, us =     1992,     1992,     1992,     1992,     2000)
[7.745s][info][gc,stats    ]   Roots                        =    0.002 s (a =     1843 us) (n =     1) (lvls, us =     1836,     1836,     1836,     1836,     1843)
[7.745s][info][gc,stats    ]     CWR: <total>               =    0.004 s (a =     3519 us) (n =     1) (lvls, us =     3516,     3516,     3516,     3516,     3519)
[7.745s][info][gc,stats    ]     CWR: Code Cache Roots      =    0.001 s (a =      820 us) (n =     1) (lvls, us =      818,      818,      818,      818,      820)
[7.745s][info][gc,stats    ]     CWR: VM Weak Roots         =    0.003 s (a =     2682 us) (n =     1) (lvls, us =     2676,     2676,     2676,     2676,     2682)
[7.745s][info][gc,stats    ]     CWR: CLDG Roots            =    0.000 s (a =       17 us) (n =     1) (lvls, us =       17,       17,       17,       17,       17)
[7.745s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =      124 us) (n =     1) (lvls, us =      123,      123,      123,      123,      124)
[7.745s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =      104 us) (n =     1) (lvls, us =      104,      104,      104,      104,      104)
[7.745s][info][gc,stats    ] Concurrent Class Unloading     =    0.004 s (a =     3961 us) (n =     1) (lvls, us =     3945,     3945,     3945,     3945,     3961)
[7.745s][info][gc,stats    ]   Unlink Stale                 =    0.002 s (a =     1530 us) (n =     1) (lvls, us =     1523,     1523,     1523,     1523,     1530)
[7.745s][info][gc,stats    ]     System Dictionary          =    0.000 s (a =       35 us) (n =     1) (lvls, us =       35,       35,       35,       35,       35)
[7.745s][info][gc,stats    ]     Weak Class Links           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[7.745s][info][gc,stats    ]     Code Roots                 =    0.001 s (a =     1494 us) (n =     1) (lvls, us =     1484,     1484,     1484,     1484,     1494)
[7.745s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =      115 us) (n =     1) (lvls, us =      113,      113,      113,      113,      115)
[7.745s][info][gc,stats    ]   Purge Unlinked               =    0.002 s (a =     2282 us) (n =     1) (lvls, us =     2266,     2266,     2266,     2266,     2282)
[7.745s][info][gc,stats    ]     Code Roots                 =    0.002 s (a =     2271 us) (n =     1) (lvls, us =     2266,     2266,     2266,     2266,     2271)
[7.745s][info][gc,stats    ]     CLDG                       =    0.000 s (a =        9 us) (n =     1) (lvls, us =        9,        9,        9,        9,        9)
[7.745s][info][gc,stats    ]     Exception Caches           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[7.745s][info][gc,stats    ] Concurrent Strong Roots        =    0.001 s (a =     1286 us) (n =     1) (lvls, us =     1270,     1270,     1270,     1270,     1286)
[7.745s][info][gc,stats    ]   CSR: <total>                 =    0.001 s (a =     1216 us) (n =     1) (lvls, us =     1211,     1211,     1211,     1211,     1216)
[7.745s][info][gc,stats    ]   CSR: VM Strong Roots         =    0.000 s (a =       22 us) (n =     1) (lvls, us =       22,       22,       22,       22,       22)
[7.745s][info][gc,stats    ]   CSR: CLDG Roots              =    0.001 s (a =     1194 us) (n =     1) (lvls, us =     1191,     1191,     1191,     1191,     1194)
[7.745s][info][gc,stats    ] Concurrent Evacuation          =    0.012 s (a =    11571 us) (n =     1) (lvls, us =    11523,    11523,    11523,    11523,    11571)
[7.745s][info][gc,stats    ] Pause Init Update Refs (G)     =    0.000 s (a =      241 us) (n =     1) (lvls, us =      240,      240,      240,      240,      241)
[7.745s][info][gc,stats    ] Pause Init Update Refs (N)     =    0.000 s (a =       53 us) (n =     1) (lvls, us =       53,       53,       53,       53,       53)
[7.745s][info][gc,stats    ]   Manage GCLABs                =    0.000 s (a =        6 us) (n =     1) (lvls, us =        6,        6,        6,        6,        6)
[7.745s][info][gc,stats    ] Concurrent Update Refs         =    0.005 s (a =     5266 us) (n =     1) (lvls, us =     5254,     5254,     5254,     5254,     5266)
[7.746s][info][gc,stats    ] Concurrent Update Thread Roots =    0.000 s (a =      158 us) (n =     1) (lvls, us =      158,      158,      158,      158,      158)
[7.746s][info][gc,stats    ] Pause Final Update Refs (G)    =    0.000 s (a =      237 us) (n =     1) (lvls, us =      236,      236,      236,      236,      237)
[7.746s][info][gc,stats    ] Pause Final Update Refs (N)    =    0.000 s (a =      108 us) (n =     1) (lvls, us =      107,      107,      107,      107,      108)
[7.746s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       34 us) (n =     1) (lvls, us =       34,       34,       34,       34,       34)
[7.746s][info][gc,stats    ]   Trash Collection Set         =    0.000 s (a =        4 us) (n =     1) (lvls, us =        4,        4,        4,        4,        4)
[7.746s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       19 us) (n =     1) (lvls, us =       19,       19,       19,       19,       19)
[7.746s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =      103 us) (n =     1) (lvls, us =      102,      102,      102,      102,      103)
[7.746s][info][gc,stats    ] 
[7.746s][info][gc,stats    ] 
[7.746s][info][gc,stats    ] Under allocation pressure, concurrent cycles may cancel, and either continue cycle
[7.746s][info][gc,stats    ] under stop-the-world pause or result in stop-the-world Full GC. Increase heap size,
[7.746s][info][gc,stats    ] tune GC heuristics, set more aggressive pacing delay, or lower allocation rate
[7.746s][info][gc,stats    ] to avoid Degenerated and Full GC cycles.
[7.746s][info][gc,stats    ] 
[7.746s][info][gc,stats    ]     1 successful concurrent GCs
[7.746s][info][gc,stats    ]       0 invoked explicitly
[7.746s][info][gc,stats    ]       0 invoked implicitly
[7.746s][info][gc,stats    ] 
[7.746s][info][gc,stats    ]     0 Degenerated GCs
[7.746s][info][gc,stats    ]       0 caused by allocation failure
[7.746s][info][gc,stats    ]       0 upgraded to Full GC
[7.746s][info][gc,stats    ] 
[7.746s][info][gc,stats    ]     0 Full GCs
[7.746s][info][gc,stats    ]       0 invoked explicitly
[7.746s][info][gc,stats    ]       0 invoked implicitly
[7.746s][info][gc,stats    ]       0 caused by allocation failure
[7.746s][info][gc,stats    ]       0 upgraded from Degenerated GC
[7.746s][info][gc,stats    ] 
[7.746s][info][gc,stats    ] 
