[0.007s][info][gc] Heuristics ergonomically sets -XX:+ExplicitGCInvokesConcurrent
[0.007s][info][gc] Heuristics ergonomically sets -XX:+ShenandoahImplicitGCInvokesConcurrent
[0.007s][info][gc] Using Shenandoah
[0.008s][info][gc,ergo] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[0.008s][info][gc,init] Version: 21.0.7+6-Ubuntu-0ubuntu122.04 (release)
[0.008s][info][gc,init] CPUs: 4 total, 4 available
[0.008s][info][gc,init] Memory: 7937M
[0.008s][info][gc,init] Large Page Support: Disabled
[0.008s][info][gc,init] NUMA Support: Disabled
[0.008s][info][gc,init] Compressed Oops: Enabled (32-bit)
[0.008s][info][gc,init] Heap Min Capacity: 6656K
[0.008s][info][gc,init] Heap Initial Capacity: 127488K
[0.009s][info][gc,init] Heap Max Capacity: 2032128K
[0.009s][info][gc,init] Pre-touch: Disabled
[0.009s][info][gc,init] Mode: Snapshot-At-The-Beginning (SATB)
[0.009s][info][gc,init] Heuristics: Adaptive
[0.009s][info][gc,init] Heap Region Count: 3969
[0.009s][info][gc,init] Heap Region Size: 512K
[0.009s][info][gc,init] TLAB Size Max: 512K
[0.009s][info][gc,init] Humongous Object Threshold: 512K
[0.009s][info][gc,init] Parallel Workers: 8
[0.009s][info][gc,init] Concurrent Workers: 2
[0.018s][info][gc,metaspace] CDS archive(s) mapped at: [0x00007f6d0f000000-0x00007f6d0fc97000-0x00007f6d0fc97000), size 13201408, SharedBaseAddress: 0x00007f6d0f000000, ArchiveRelocationMode: 1.
[0.018s][info][gc,metaspace] Compressed class space mapped at: 0x00007f6d10000000-0x00007f6d50000000, reserved size: 1073741824
[0.018s][info][gc,metaspace] Narrow klass base: 0x00007f6d0f000000, Narrow klass shift: 0, Narrow klass range: 0x100000000
[1.358s][info][gc          ] Trigger: Metadata GC Threshold
[1.358s][info][gc,ergo     ] Free: 1790M, Max: 512K regular, 1790M humongous, Frag: 0% external, 0% internal; Reserve: 101888K, Max: 512K
[1.358s][info][gc,start    ] GC(0) Concurrent reset
[1.358s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reset
[1.358s][info][gc,ergo     ] GC(0) Pacer for Reset. Non-Taxable: 1984M
[1.359s][info][gc          ] GC(0) Concurrent reset 0.534ms
[1.361s][info][gc,start    ] GC(0) Pause Init Mark (unload classes)
[1.362s][info][gc,task     ] GC(0) Using 8 of 8 workers for init marking
[1.362s][info][gc,ergo     ] GC(0) Pacer for Mark. Expected Live: 198M, Free: 1790M, Non-Taxable: 179M, Alloc Tax Rate: 0.1x
[1.362s][info][gc          ] GC(0) Pause Init Mark (unload classes) 0.784ms
[1.363s][info][gc,start    ] GC(0) Concurrent marking roots
[1.363s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking roots
[1.365s][info][gc          ] GC(0) Concurrent marking roots 2.222ms
[1.365s][info][gc,start    ] GC(0) Concurrent marking (unload classes)
[1.365s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking
[1.375s][info][gc          ] GC(0) Concurrent marking (unload classes) 10.307ms
[1.375s][info][gc,start    ] GC(0) Pause Final Mark (unload classes)
[1.375s][info][gc,task     ] GC(0) Using 8 of 8 workers for final marking
[1.375s][info][gc,ergo     ] GC(0) Adaptive CSet Selection. Target Free: 201M, Actual Free: 1893M, Max CSet: 84672K, Min Garbage: 0B
[1.375s][info][gc,ergo     ] GC(0) Collectable Garbage: 81583K (99%), Immediate: 5343K (6%), CSet: 76240K (92%)
[1.375s][info][gc,ergo     ] GC(0) Pacer for Evacuation. Used CSet: 83968K, Free: 1794M, Non-Taxable: 179M, Alloc Tax Rate: 1.1x
[1.375s][info][gc          ] GC(0) Pause Final Mark (unload classes) 0.235ms
[1.376s][info][gc,start    ] GC(0) Concurrent thread roots
[1.376s][info][gc,task     ] GC(0) Using 2 of 8 workers for Concurrent thread roots
[1.376s][info][gc          ] GC(0) Concurrent thread roots 0.178ms
[1.376s][info][gc,start    ] GC(0) Concurrent weak references
[1.376s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak references
[1.376s][info][gc,ref      ] GC(0) Encountered references: Soft: 3955, Weak: 2120, Final: 20, Phantom: 791
[1.376s][info][gc,ref      ] GC(0) Discovered  references: Soft: 0, Weak: 1287, Final: 0, Phantom: 481
[1.376s][info][gc,ref      ] GC(0) Enqueued    references: Soft: 0, Weak: 478, Final: 0, Phantom: 313
[1.376s][info][gc          ] GC(0) Concurrent weak references 0.406ms
[1.376s][info][gc,start    ] GC(0) Concurrent weak roots
[1.376s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak root
[1.378s][info][gc          ] GC(0) Concurrent weak roots 1.803ms
[1.378s][info][gc,start    ] GC(0) Concurrent cleanup
[1.378s][info][gc          ] GC(0) Concurrent cleanup 97M->91M(125M) 0.074ms
[1.378s][info][gc,ergo     ] GC(0) Free: 1793M, Max: 512K regular, 1788M humongous, Frag: 1% external, 0% internal; Reserve: 101013K, Max: 512K
[1.378s][info][gc,start    ] GC(0) Concurrent class unloading
[1.378s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent class unloading
[1.385s][info][gc          ] GC(0) Concurrent class unloading 6.564ms
[1.385s][info][gc,start    ] GC(0) Concurrent strong roots
[1.385s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent strong root
[1.387s][info][gc          ] GC(0) Concurrent strong roots 2.071ms
[1.387s][info][gc,start    ] GC(0) Concurrent evacuation
[1.387s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent evacuation
[1.393s][info][gc          ] GC(0) Concurrent evacuation 6.338ms
[1.393s][info][gc,start    ] GC(0) Pause Init Update Refs
[1.393s][info][gc,ergo     ] GC(0) Pacer for Update Refs. Used: 100M, Free: 1793M, Non-Taxable: 179M, Alloc Tax Rate: 1.1x
[1.393s][info][gc          ] GC(0) Pause Init Update Refs 0.030ms
[1.393s][info][gc,start    ] GC(0) Concurrent update references
[1.393s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reference update
[1.399s][info][gc          ] GC(0) Concurrent update references 5.556ms
[1.399s][info][gc,start    ] GC(0) Concurrent update thread roots
[1.399s][info][gc          ] GC(0) Concurrent update thread roots 0.222ms
[1.399s][info][gc,start    ] GC(0) Pause Final Update Refs
[1.399s][info][gc,task     ] GC(0) Using 8 of 8 workers for final reference update
[1.399s][info][gc          ] GC(0) Pause Final Update Refs 0.074ms
[1.399s][info][gc,start    ] GC(0) Concurrent cleanup
[1.399s][info][gc          ] GC(0) Concurrent cleanup 100M->18M(133M) 0.069ms
[1.399s][info][gc,ergo     ] Free: 1866M, Max: 512K regular, 1779M humongous, Frag: 5% external, 0% internal; Reserve: 101888K, Max: 512K
[1.399s][info][gc,stats    ] 
[1.399s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[1.399s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[1.399s][info][gc,stats    ] 
[1.399s][info][gc,stats    ] Concurrent Reset                    576 us
[1.400s][info][gc,stats    ] Pause Init Mark (G)                3808 us
[1.400s][info][gc,stats    ] Pause Init Mark (N)                 807 us
[1.400s][info][gc,stats    ]   Update Region States               28 us
[1.400s][info][gc,stats    ] Concurrent Mark Roots              2246 us, parallelism: 1.87x
[1.400s][info][gc,stats    ]   CMR: <total>                     4191 us
[1.400s][info][gc,stats    ]   CMR: Thread Roots                1679 us, workers (us): 1630,  49, ---, ---, ---, ---, ---, ---, 
[1.400s][info][gc,stats    ]   CMR: VM Strong Roots              783 us, workers (us): 474, 309, ---, ---, ---, ---, ---, ---, 
[1.400s][info][gc,stats    ]   CMR: CLDG Roots                  1729 us, workers (us): ---, 1729, ---, ---, ---, ---, ---, ---, 
[1.400s][info][gc,stats    ] Concurrent Marking                10334 us
[1.400s][info][gc,stats    ] Pause Final Mark (G)                351 us
[1.400s][info][gc,stats    ] Pause Final Mark (N)                243 us
[1.400s][info][gc,stats    ]   Finish Mark                        72 us
[1.400s][info][gc,stats    ]   Update Region States               21 us
[1.400s][info][gc,stats    ]   Choose Collection Set              82 us
[1.400s][info][gc,stats    ]   Rebuild Free Set                   17 us
[1.400s][info][gc,stats    ] Concurrent Thread Roots             192 us, parallelism: 1.35x
[1.400s][info][gc,stats    ]   CTR: <total>                      260 us
[1.400s][info][gc,stats    ]   CTR: Thread Roots                 260 us, workers (us): 135, 126, ---, ---, ---, ---, ---, ---, 
[1.400s][info][gc,stats    ] Concurrent Weak References          414 us, parallelism: 0.86x
[1.400s][info][gc,stats    ]   CWRF: <total>                     358 us
[1.400s][info][gc,stats    ]   CWRF: Weak References             358 us, workers (us): 315,  43, ---, ---, ---, ---, ---, ---, 
[1.400s][info][gc,stats    ] Concurrent Weak Roots              1818 us
[1.400s][info][gc,stats    ]   Roots                            1661 us, parallelism: 1.68x
[1.400s][info][gc,stats    ]     CWR: <total>                   2786 us
[1.400s][info][gc,stats    ]     CWR: Code Cache Roots           791 us, workers (us): 441, 350, ---, ---, ---, ---, ---, ---, 
[1.400s][info][gc,stats    ]     CWR: VM Weak Roots             1983 us, workers (us): 1163, 820, ---, ---, ---, ---, ---, ---, 
[1.400s][info][gc,stats    ]     CWR: CLDG Roots                  13 us, workers (us): ---,  13, ---, ---, ---, ---, ---, ---, 
[1.400s][info][gc,stats    ]   Rendezvous                        124 us
[1.400s][info][gc,stats    ] Concurrent Cleanup                   83 us
[1.400s][info][gc,stats    ] Concurrent Class Unloading         6581 us
[1.400s][info][gc,stats    ]   Unlink Stale                     3272 us
[1.400s][info][gc,stats    ]     System Dictionary                34 us
[1.400s][info][gc,stats    ]     Weak Class Links                  0 us
[1.400s][info][gc,stats    ]     Code Roots                     3237 us
[1.400s][info][gc,stats    ]   Rendezvous                        418 us
[1.400s][info][gc,stats    ]   Purge Unlinked                   2855 us
[1.400s][info][gc,stats    ]     Code Roots                     2842 us
[1.400s][info][gc,stats    ]     CLDG                             13 us
[1.400s][info][gc,stats    ]     Exception Caches                  0 us
[1.400s][info][gc,stats    ] Concurrent Strong Roots            2096 us, parallelism: 0.96x
[1.400s][info][gc,stats    ]   CSR: <total>                     2011 us
[1.400s][info][gc,stats    ]   CSR: VM Strong Roots               18 us, workers (us):  13,   5, ---, ---, ---, ---, ---, ---, 
[1.400s][info][gc,stats    ]   CSR: CLDG Roots                  1993 us, workers (us): ---, 1993, ---, ---, ---, ---, ---, ---, 
[1.400s][info][gc,stats    ] Concurrent Evacuation              6364 us
[1.400s][info][gc,stats    ] Pause Init Update Refs (G)          141 us
[1.400s][info][gc,stats    ] Pause Init Update Refs (N)           39 us
[1.400s][info][gc,stats    ]   Manage GCLABs                       5 us
[1.400s][info][gc,stats    ] Concurrent Update Refs             5584 us
[1.400s][info][gc,stats    ] Concurrent Update Thread Roots      238 us
[1.400s][info][gc,stats    ] Pause Final Update Refs (G)         260 us
[1.400s][info][gc,stats    ] Pause Final Update Refs (N)          86 us
[1.400s][info][gc,stats    ]   Update Region States               28 us
[1.400s][info][gc,stats    ]   Trash Collection Set                4 us
[1.400s][info][gc,stats    ]   Rebuild Free Set                   19 us
[1.400s][info][gc,stats    ] Concurrent Cleanup                   79 us
[1.400s][info][gc,stats    ] 
[1.400s][info][gc,stats    ] Allocation pacing accrued:
[1.400s][info][gc,stats    ]       0 of  1392 ms (  0.0%): <total>
[1.400s][info][gc,stats    ]       0 of  1392 ms (  0.0%): <average total>
[1.400s][info][gc,stats    ] 
[1.400s][info][gc,metaspace] Metaspace: 21180K(21568K)->21447K(21824K) NonClass: 18845K(19072K)->19077K(19264K) Class: 2335K(2496K)->2370K(2560K)
[1.400s][info][gc,ergo     ] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[7.700s][info][gc          ] Cancelling GC: Stopping VM
[7.700s][info][gc,heap,exit] Heap
[7.700s][info][gc,heap,exit] Shenandoah Heap
[7.700s][info][gc,heap,exit]  1984M max, 1984M soft max, 133M committed, 38435K used
[7.700s][info][gc,heap,exit]  3969 x 512K regions
[7.700s][info][gc,heap,exit] Status: cancelled
[7.700s][info][gc,heap,exit] Reserved region:
[7.700s][info][gc,heap,exit]  - [0x0000000083f80000, 0x0000000100000000) 
[7.700s][info][gc,heap,exit] Collection set:
[7.700s][info][gc,heap,exit]  - map (vanilla): 0x000000000001107f
[7.700s][info][gc,heap,exit]  - map (biased):  0x0000000000010000
[7.700s][info][gc,heap,exit] 
[7.700s][info][gc,heap,exit]  Metaspace       used 25441K, committed 25856K, reserved 1114112K
[7.700s][info][gc,heap,exit]   class space    used 2924K, committed 3072K, reserved 1048576K
[7.700s][info][gc,stats    ] 
[7.700s][info][gc,stats    ] GC STATISTICS:
[7.700s][info][gc,stats    ]   "(G)" (gross) pauses include VM time: time to notify and block threads, do the pre-
[7.700s][info][gc,stats    ]         and post-safepoint housekeeping. Use -Xlog:safepoint+stats to dissect.
[7.700s][info][gc,stats    ]   "(N)" (net) pauses are the times spent in the actual GC code.
[7.700s][info][gc,stats    ]   "a" is average time for each phase, look at levels to see if average makes sense.
[7.700s][info][gc,stats    ]   "lvls" are quantiles: 0% (minimum), 25%, 50% (median), 75%, 100% (maximum).
[7.700s][info][gc,stats    ] 
[7.701s][info][gc,stats    ]   All times are wall-clock times, except per-root-class counters, that are sum over
[7.701s][info][gc,stats    ]   all workers. Dividing the <total> over the root stage time estimates parallelism.
[7.701s][info][gc,stats    ] 
[7.701s][info][gc,stats    ]   Pacing delays are measured from entering the pacing code till exiting it. Therefore,
[7.701s][info][gc,stats    ]   observed pacing delays may be higher than the threshold when paced thread spent more
[7.701s][info][gc,stats    ]   time in the pacing code. It usually happens when thread is de-scheduled while paced,
[7.701s][info][gc,stats    ]   OS takes longer to unblock the thread, or JVM experiences an STW pause.
[7.701s][info][gc,stats    ] 
[7.701s][info][gc,stats    ]   Higher delay would prevent application outpacing the GC, but it will hide the GC latencies
[7.701s][info][gc,stats    ]   from the STW pause times. Pacing affects the individual threads, and so it would also be
[7.701s][info][gc,stats    ]   invisible to the usual profiling tools, but would add up to end-to-end application latency.
[7.701s][info][gc,stats    ]   Raise max pacing delay with care.
[7.701s][info][gc,stats    ] 
[7.701s][info][gc,stats    ] Concurrent Reset               =    0.001 s (a =      576 us) (n =     1) (lvls, us =      574,      574,      574,      574,      576)
[7.701s][info][gc,stats    ] Pause Init Mark (G)            =    0.004 s (a =     3808 us) (n =     1) (lvls, us =     3789,     3789,     3789,     3789,     3808)
[7.701s][info][gc,stats    ] Pause Init Mark (N)            =    0.001 s (a =      807 us) (n =     1) (lvls, us =      807,      807,      807,      807,      807)
[7.701s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       28 us) (n =     1) (lvls, us =       28,       28,       28,       28,       28)
[7.701s][info][gc,stats    ] Concurrent Mark Roots          =    0.002 s (a =     2246 us) (n =     1) (lvls, us =     2227,     2227,     2227,     2227,     2246)
[7.701s][info][gc,stats    ]   CMR: <total>                 =    0.004 s (a =     4191 us) (n =     1) (lvls, us =     4180,     4180,     4180,     4180,     4191)
[7.701s][info][gc,stats    ]   CMR: Thread Roots            =    0.002 s (a =     1679 us) (n =     1) (lvls, us =     1660,     1660,     1660,     1660,     1679)
[7.701s][info][gc,stats    ]   CMR: VM Strong Roots         =    0.001 s (a =      783 us) (n =     1) (lvls, us =      781,      781,      781,      781,      783)
[7.701s][info][gc,stats    ]   CMR: CLDG Roots              =    0.002 s (a =     1729 us) (n =     1) (lvls, us =     1719,     1719,     1719,     1719,     1729)
[7.701s][info][gc,stats    ] Concurrent Marking             =    0.010 s (a =    10334 us) (n =     1) (lvls, us =    10156,    10156,    10156,    10156,    10334)
[7.701s][info][gc,stats    ] Pause Final Mark (G)           =    0.000 s (a =      351 us) (n =     1) (lvls, us =      350,      350,      350,      350,      351)
[7.701s][info][gc,stats    ] Pause Final Mark (N)           =    0.000 s (a =      243 us) (n =     1) (lvls, us =      242,      242,      242,      242,      243)
[7.701s][info][gc,stats    ]   Finish Mark                  =    0.000 s (a =       72 us) (n =     1) (lvls, us =       72,       72,       72,       72,       72)
[7.701s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       21 us) (n =     1) (lvls, us =       21,       21,       21,       21,       21)
[7.701s][info][gc,stats    ]   Choose Collection Set        =    0.000 s (a =       82 us) (n =     1) (lvls, us =       81,       81,       81,       81,       82)
[7.701s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       17 us) (n =     1) (lvls, us =       17,       17,       17,       17,       17)
[7.701s][info][gc,stats    ] Concurrent Thread Roots        =    0.000 s (a =      192 us) (n =     1) (lvls, us =      191,      191,      191,      191,      192)
[7.702s][info][gc,stats    ]   CTR: <total>                 =    0.000 s (a =      260 us) (n =     1) (lvls, us =      260,      260,      260,      260,      260)
[7.702s][info][gc,stats    ]   CTR: Thread Roots            =    0.000 s (a =      260 us) (n =     1) (lvls, us =      260,      260,      260,      260,      260)
[7.702s][info][gc,stats    ] Concurrent Weak References     =    0.000 s (a =      414 us) (n =     1) (lvls, us =      412,      412,      412,      412,      414)
[7.702s][info][gc,stats    ]   CWRF: <total>                =    0.000 s (a =      358 us) (n =     1) (lvls, us =      357,      357,      357,      357,      358)
[7.702s][info][gc,stats    ]   CWRF: Weak References        =    0.000 s (a =      358 us) (n =     1) (lvls, us =      357,      357,      357,      357,      358)
[7.702s][info][gc,stats    ] Concurrent Weak Roots          =    0.002 s (a =     1818 us) (n =     1) (lvls, us =     1816,     1816,     1816,     1816,     1818)
[7.702s][info][gc,stats    ]   Roots                        =    0.002 s (a =     1661 us) (n =     1) (lvls, us =     1660,     1660,     1660,     1660,     1661)
[7.702s][info][gc,stats    ]     CWR: <total>               =    0.003 s (a =     2786 us) (n =     1) (lvls, us =     2773,     2773,     2773,     2773,     2786)
[7.702s][info][gc,stats    ]     CWR: Code Cache Roots      =    0.001 s (a =      791 us) (n =     1) (lvls, us =      789,      789,      789,      789,      791)
[7.702s][info][gc,stats    ]     CWR: VM Weak Roots         =    0.002 s (a =     1983 us) (n =     1) (lvls, us =     1973,     1973,     1973,     1973,     1983)
[7.702s][info][gc,stats    ]     CWR: CLDG Roots            =    0.000 s (a =       13 us) (n =     1) (lvls, us =       13,       13,       13,       13,       13)
[7.702s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =      124 us) (n =     1) (lvls, us =      123,      123,      123,      123,      124)
[7.702s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =       83 us) (n =     1) (lvls, us =       83,       83,       83,       83,       83)
[7.702s][info][gc,stats    ] Concurrent Class Unloading     =    0.007 s (a =     6581 us) (n =     1) (lvls, us =     6562,     6562,     6562,     6562,     6581)
[7.702s][info][gc,stats    ]   Unlink Stale                 =    0.003 s (a =     3272 us) (n =     1) (lvls, us =     3262,     3262,     3262,     3262,     3272)
[7.702s][info][gc,stats    ]     System Dictionary          =    0.000 s (a =       34 us) (n =     1) (lvls, us =       34,       34,       34,       34,       34)
[7.702s][info][gc,stats    ]     Weak Class Links           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[7.702s][info][gc,stats    ]     Code Roots                 =    0.003 s (a =     3237 us) (n =     1) (lvls, us =     3223,     3223,     3223,     3223,     3237)
[7.702s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =      418 us) (n =     1) (lvls, us =      418,      418,      418,      418,      418)
[7.702s][info][gc,stats    ]   Purge Unlinked               =    0.003 s (a =     2855 us) (n =     1) (lvls, us =     2852,     2852,     2852,     2852,     2855)
[7.702s][info][gc,stats    ]     Code Roots                 =    0.003 s (a =     2842 us) (n =     1) (lvls, us =     2832,     2832,     2832,     2832,     2842)
[7.702s][info][gc,stats    ]     CLDG                       =    0.000 s (a =       13 us) (n =     1) (lvls, us =       13,       13,       13,       13,       13)
[7.702s][info][gc,stats    ]     Exception Caches           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[7.702s][info][gc,stats    ] Concurrent Strong Roots        =    0.002 s (a =     2096 us) (n =     1) (lvls, us =     2090,     2090,     2090,     2090,     2096)
[7.702s][info][gc,stats    ]   CSR: <total>                 =    0.002 s (a =     2011 us) (n =     1) (lvls, us =     1992,     1992,     1992,     1992,     2011)
[7.702s][info][gc,stats    ]   CSR: VM Strong Roots         =    0.000 s (a =       18 us) (n =     1) (lvls, us =       18,       18,       18,       18,       18)
[7.702s][info][gc,stats    ]   CSR: CLDG Roots              =    0.002 s (a =     1993 us) (n =     1) (lvls, us =     1992,     1992,     1992,     1992,     1993)
[7.703s][info][gc,stats    ] Concurrent Evacuation          =    0.006 s (a =     6364 us) (n =     1) (lvls, us =     6348,     6348,     6348,     6348,     6364)
[7.703s][info][gc,stats    ] Pause Init Update Refs (G)     =    0.000 s (a =      141 us) (n =     1) (lvls, us =      139,      139,      139,      139,      141)
[7.703s][info][gc,stats    ] Pause Init Update Refs (N)     =    0.000 s (a =       39 us) (n =     1) (lvls, us =       39,       39,       39,       39,       39)
[7.703s][info][gc,stats    ]   Manage GCLABs                =    0.000 s (a =        5 us) (n =     1) (lvls, us =        5,        5,        5,        5,        5)
[7.703s][info][gc,stats    ] Concurrent Update Refs         =    0.006 s (a =     5584 us) (n =     1) (lvls, us =     5566,     5566,     5566,     5566,     5584)
[7.703s][info][gc,stats    ] Concurrent Update Thread Roots =    0.000 s (a =      238 us) (n =     1) (lvls, us =      236,      236,      236,      236,      238)
[7.703s][info][gc,stats    ] Pause Final Update Refs (G)    =    0.000 s (a =      260 us) (n =     1) (lvls, us =      260,      260,      260,      260,      260)
[7.703s][info][gc,stats    ] Pause Final Update Refs (N)    =    0.000 s (a =       86 us) (n =     1) (lvls, us =       86,       86,       86,       86,       86)
[7.703s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       28 us) (n =     1) (lvls, us =       28,       28,       28,       28,       28)
[7.703s][info][gc,stats    ]   Trash Collection Set         =    0.000 s (a =        4 us) (n =     1) (lvls, us =        4,        4,        4,        4,        4)
[7.703s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       19 us) (n =     1) (lvls, us =       19,       19,       19,       19,       19)
[7.703s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =       79 us) (n =     1) (lvls, us =       79,       79,       79,       79,       79)
[7.703s][info][gc,stats    ] 
[7.703s][info][gc,stats    ] 
[7.703s][info][gc,stats    ] Under allocation pressure, concurrent cycles may cancel, and either continue cycle
[7.703s][info][gc,stats    ] under stop-the-world pause or result in stop-the-world Full GC. Increase heap size,
[7.703s][info][gc,stats    ] tune GC heuristics, set more aggressive pacing delay, or lower allocation rate
[7.703s][info][gc,stats    ] to avoid Degenerated and Full GC cycles.
[7.703s][info][gc,stats    ] 
[7.703s][info][gc,stats    ]     1 successful concurrent GCs
[7.703s][info][gc,stats    ]       0 invoked explicitly
[7.703s][info][gc,stats    ]       0 invoked implicitly
[7.703s][info][gc,stats    ] 
[7.703s][info][gc,stats    ]     0 Degenerated GCs
[7.703s][info][gc,stats    ]       0 caused by allocation failure
[7.703s][info][gc,stats    ]       0 upgraded to Full GC
[7.703s][info][gc,stats    ] 
[7.703s][info][gc,stats    ]     0 Full GCs
[7.703s][info][gc,stats    ]       0 invoked explicitly
[7.703s][info][gc,stats    ]       0 invoked implicitly
[7.703s][info][gc,stats    ]       0 caused by allocation failure
[7.703s][info][gc,stats    ]       0 upgraded from Degenerated GC
[7.703s][info][gc,stats    ] 
[7.703s][info][gc,stats    ] 
