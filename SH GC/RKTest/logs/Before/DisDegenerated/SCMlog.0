[0.008s][info][gc] Heuristics ergonomically sets -XX:+ExplicitGCInvokesConcurrent
[0.008s][info][gc] Heuristics ergonomically sets -XX:+ShenandoahImplicitGCInvokesConcurrent
[0.008s][info][gc] Using Shenandoah
[0.009s][info][gc,ergo] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[0.010s][info][gc,init] Version: 21.0.7+6-Ubuntu-0ubuntu122.04 (release)
[0.010s][info][gc,init] CPUs: 4 total, 4 available
[0.010s][info][gc,init] Memory: 7937M
[0.010s][info][gc,init] Large Page Support: Disabled
[0.010s][info][gc,init] NUMA Support: Disabled
[0.010s][info][gc,init] Compressed Oops: Enabled (32-bit)
[0.010s][info][gc,init] Heap Min Capacity: 6656K
[0.010s][info][gc,init] Heap Initial Capacity: 127488K
[0.010s][info][gc,init] Heap Max Capacity: 2032128K
[0.010s][info][gc,init] Pre-touch: Disabled
[0.010s][info][gc,init] Mode: Snapshot-At-The-Beginning (SATB)
[0.010s][info][gc,init] Heuristics: Adaptive
[0.010s][info][gc,init] Heap Region Count: 3969
[0.010s][info][gc,init] Heap Region Size: 512K
[0.010s][info][gc,init] TLAB Size Max: 512K
[0.010s][info][gc,init] Humongous Object Threshold: 512K
[0.010s][info][gc,init] Parallel Workers: 8
[0.010s][info][gc,init] Concurrent Workers: 2
[0.019s][info][gc,metaspace] CDS archive(s) mapped at: [0x00007f6fe3000000-0x00007f6fe3c97000-0x00007f6fe3c97000), size 13201408, SharedBaseAddress: 0x00007f6fe3000000, ArchiveRelocationMode: 1.
[0.019s][info][gc,metaspace] Compressed class space mapped at: 0x00007f6fe4000000-0x00007f7024000000, reserved size: 1073741824
[0.019s][info][gc,metaspace] Narrow klass base: 0x00007f6fe3000000, Narrow klass shift: 0, Narrow klass range: 0x100000000
[1.321s][info][gc          ] Trigger: Metadata GC Threshold
[1.321s][info][gc,ergo     ] Free: 1790M, Max: 512K regular, 1790M humongous, Frag: 0% external, 0% internal; Reserve: 101888K, Max: 512K
[1.321s][info][gc,start    ] GC(0) Concurrent reset
[1.321s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reset
[1.321s][info][gc,ergo     ] GC(0) Pacer for Reset. Non-Taxable: 1984M
[1.321s][info][gc          ] GC(0) Concurrent reset 0.457ms
[1.321s][info][gc,start    ] GC(0) Pause Init Mark (unload classes)
[1.322s][info][gc,task     ] GC(0) Using 8 of 8 workers for init marking
[1.322s][info][gc,ergo     ] GC(0) Pacer for Mark. Expected Live: 198M, Free: 1790M, Non-Taxable: 179M, Alloc Tax Rate: 0.1x
[1.322s][info][gc          ] GC(0) Pause Init Mark (unload classes) 0.540ms
[1.322s][info][gc,start    ] GC(0) Concurrent marking roots
[1.322s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking roots
[1.326s][info][gc          ] GC(0) Concurrent marking roots 3.610ms
[1.326s][info][gc,start    ] GC(0) Concurrent marking (unload classes)
[1.326s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking
[1.337s][info][gc          ] GC(0) Concurrent marking (unload classes) 11.188ms
[1.337s][info][gc,start    ] GC(0) Pause Final Mark (unload classes)
[1.337s][info][gc,task     ] GC(0) Using 8 of 8 workers for final marking
[1.339s][info][gc,ergo     ] GC(0) Adaptive CSet Selection. Target Free: 281M, Actual Free: 1893M, Max CSet: 84672K, Min Garbage: 0B
[1.339s][info][gc,ergo     ] GC(0) Collectable Garbage: 82089K (99%), Immediate: 5343K (6%), CSet: 76745K (92%)
[1.339s][info][gc,ergo     ] GC(0) Pacer for Evacuation. Used CSet: 84480K, Free: 1794M, Non-Taxable: 179M, Alloc Tax Rate: 1.1x
[1.339s][info][gc          ] GC(0) Pause Final Mark (unload classes) 1.785ms
[1.339s][info][gc,start    ] GC(0) Concurrent thread roots
[1.339s][info][gc,task     ] GC(0) Using 2 of 8 workers for Concurrent thread roots
[1.339s][info][gc          ] GC(0) Concurrent thread roots 0.239ms
[1.339s][info][gc,start    ] GC(0) Concurrent weak references
[1.339s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak references
[1.340s][info][gc,ref      ] GC(0) Encountered references: Soft: 3956, Weak: 2136, Final: 20, Phantom: 797
[1.340s][info][gc,ref      ] GC(0) Discovered  references: Soft: 0, Weak: 678, Final: 0, Phantom: 486
[1.340s][info][gc,ref      ] GC(0) Enqueued    references: Soft: 0, Weak: 484, Final: 0, Phantom: 318
[1.340s][info][gc          ] GC(0) Concurrent weak references 0.467ms
[1.340s][info][gc,start    ] GC(0) Concurrent weak roots
[1.340s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak root
[1.345s][info][gc          ] GC(0) Concurrent weak roots 5.588ms
[1.345s][info][gc,start    ] GC(0) Concurrent cleanup
[1.346s][info][gc          ] GC(0) Concurrent cleanup 97M->92M(125M) 0.087ms
[1.346s][info][gc,ergo     ] GC(0) Free: 1793M, Max: 512K regular, 1788M humongous, Frag: 1% external, 0% internal; Reserve: 100864K, Max: 512K
[1.346s][info][gc,start    ] GC(0) Concurrent class unloading
[1.346s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent class unloading
[1.352s][info][gc          ] GC(0) Concurrent class unloading 6.883ms
[1.353s][info][gc,start    ] GC(0) Concurrent strong roots
[1.353s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent strong root
[1.354s][info][gc          ] GC(0) Concurrent strong roots 1.426ms
[1.355s][info][gc,start    ] GC(0) Concurrent evacuation
[1.355s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent evacuation
[1.360s][info][gc          ] GC(0) Concurrent evacuation 5.367ms
[1.360s][info][gc,start    ] GC(0) Pause Init Update Refs
[1.360s][info][gc,ergo     ] GC(0) Pacer for Update Refs. Used: 100M, Free: 1793M, Non-Taxable: 179M, Alloc Tax Rate: 1.1x
[1.360s][info][gc          ] GC(0) Pause Init Update Refs 0.026ms
[1.360s][info][gc,start    ] GC(0) Concurrent update references
[1.360s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reference update
[1.365s][info][gc          ] GC(0) Concurrent update references 4.690ms
[1.365s][info][gc,start    ] GC(0) Concurrent update thread roots
[1.366s][info][gc          ] GC(0) Concurrent update thread roots 0.807ms
[1.366s][info][gc,start    ] GC(0) Pause Final Update Refs
[1.366s][info][gc,task     ] GC(0) Using 8 of 8 workers for final reference update
[1.366s][info][gc          ] GC(0) Pause Final Update Refs 0.065ms
[1.366s][info][gc,start    ] GC(0) Concurrent cleanup
[1.366s][info][gc          ] GC(0) Concurrent cleanup 100M->17M(133M) 0.059ms
[1.366s][info][gc,ergo     ] Free: 1866M, Max: 512K regular, 1779M humongous, Frag: 5% external, 0% internal; Reserve: 101888K, Max: 512K
[1.366s][info][gc,stats    ] 
[1.366s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[1.366s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[1.366s][info][gc,stats    ] 
[1.366s][info][gc,stats    ] Concurrent Reset                    486 us
[1.366s][info][gc,stats    ] Pause Init Mark (G)                 791 us
[1.366s][info][gc,stats    ] Pause Init Mark (N)                 560 us
[1.366s][info][gc,stats    ]   Update Region States               35 us
[1.366s][info][gc,stats    ] Concurrent Mark Roots              3691 us, parallelism: 1.06x
[1.366s][info][gc,stats    ]   CMR: <total>                     3899 us
[1.366s][info][gc,stats    ]   CMR: Thread Roots                1295 us, workers (us): 866, 429, ---, ---, ---, ---, ---, ---, 
[1.366s][info][gc,stats    ]   CMR: VM Strong Roots              775 us, workers (us): 775,   1, ---, ---, ---, ---, ---, ---, 
[1.366s][info][gc,stats    ]   CMR: CLDG Roots                  1829 us, workers (us): 1829, ---, ---, ---, ---, ---, ---, ---, 
[1.366s][info][gc,stats    ] Concurrent Marking                11324 us
[1.366s][info][gc,stats    ] Pause Final Mark (G)               1989 us
[1.366s][info][gc,stats    ] Pause Final Mark (N)               1861 us
[1.366s][info][gc,stats    ]   Finish Mark                      1179 us
[1.366s][info][gc,stats    ]   Update Region States               35 us
[1.366s][info][gc,stats    ]   Choose Collection Set             273 us
[1.366s][info][gc,stats    ]   Rebuild Free Set                   39 us
[1.366s][info][gc,stats    ] Concurrent Thread Roots             268 us, parallelism: 0.99x
[1.366s][info][gc,stats    ]   CTR: <total>                      266 us
[1.366s][info][gc,stats    ]   CTR: Thread Roots                 266 us, workers (us): 131, 135, ---, ---, ---, ---, ---, ---, 
[1.366s][info][gc,stats    ] Concurrent Weak References          519 us, parallelism: 0.53x
[1.366s][info][gc,stats    ]   CWRF: <total>                     277 us
[1.366s][info][gc,stats    ]   CWRF: Weak References             277 us, workers (us): 176, 101, ---, ---, ---, ---, ---, ---, 
[1.366s][info][gc,stats    ] Concurrent Weak Roots              5621 us
[1.366s][info][gc,stats    ]   Roots                            5233 us, parallelism: 1.82x
[1.366s][info][gc,stats    ]     CWR: <total>                   9532 us
[1.366s][info][gc,stats    ]     CWR: Code Cache Roots           825 us, workers (us): 379, 446, ---, ---, ---, ---, ---, ---, 
[1.366s][info][gc,stats    ]     CWR: VM Weak Roots             8693 us, workers (us): 4786, 3908, ---, ---, ---, ---, ---, ---, 
[1.366s][info][gc,stats    ]     CWR: CLDG Roots                  14 us, workers (us): ---,  14, ---, ---, ---, ---, ---, ---, 
[1.366s][info][gc,stats    ]   Rendezvous                        250 us
[1.366s][info][gc,stats    ] Concurrent Cleanup                  102 us
[1.366s][info][gc,stats    ] Concurrent Class Unloading         7425 us
[1.366s][info][gc,stats    ]   Unlink Stale                     3488 us
[1.366s][info][gc,stats    ]     System Dictionary                50 us
[1.366s][info][gc,stats    ]     Weak Class Links                  0 us
[1.366s][info][gc,stats    ]     Code Roots                     3436 us
[1.366s][info][gc,stats    ]   Rendezvous                         46 us
[1.366s][info][gc,stats    ]   Purge Unlinked                   3322 us
[1.366s][info][gc,stats    ]     Code Roots                     3313 us
[1.366s][info][gc,stats    ]     CLDG                              8 us
[1.366s][info][gc,stats    ]     Exception Caches                  0 us
[1.366s][info][gc,stats    ] Concurrent Strong Roots            1474 us, parallelism: 0.88x
[1.366s][info][gc,stats    ]   CSR: <total>                     1298 us
[1.366s][info][gc,stats    ]   CSR: VM Strong Roots               21 us, workers (us):  15,   6, ---, ---, ---, ---, ---, ---, 
[1.366s][info][gc,stats    ]   CSR: CLDG Roots                  1277 us, workers (us): ---, 1277, ---, ---, ---, ---, ---, ---, 
[1.366s][info][gc,stats    ] Concurrent Evacuation              5390 us
[1.366s][info][gc,stats    ] Pause Init Update Refs (G)          134 us
[1.366s][info][gc,stats    ] Pause Init Update Refs (N)           34 us
[1.366s][info][gc,stats    ]   Manage GCLABs                       4 us
[1.366s][info][gc,stats    ] Concurrent Update Refs             4715 us
[1.366s][info][gc,stats    ] Concurrent Update Thread Roots      826 us
[1.366s][info][gc,stats    ] Pause Final Update Refs (G)         160 us
[1.366s][info][gc,stats    ] Pause Final Update Refs (N)          80 us
[1.366s][info][gc,stats    ]   Update Region States               19 us
[1.366s][info][gc,stats    ]   Trash Collection Set                4 us
[1.366s][info][gc,stats    ]   Rebuild Free Set                   16 us
[1.366s][info][gc,stats    ] Concurrent Cleanup                   72 us
[1.366s][info][gc,stats    ] 
[1.366s][info][gc,stats    ] Allocation pacing accrued:
[1.366s][info][gc,stats    ]       0 of  1357 ms (  0.0%): <total>
[1.366s][info][gc,stats    ]       0 of  1357 ms (  0.0%): <average total>
[1.366s][info][gc,stats    ] 
[1.366s][info][gc,metaspace] Metaspace: 21229K(21568K)->21499K(21824K) NonClass: 18891K(19072K)->19120K(19264K) Class: 2338K(2496K)->2378K(2560K)
[1.366s][info][gc,ergo     ] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[7.737s][info][gc          ] Cancelling GC: Stopping VM
[7.738s][info][gc,heap,exit] Heap
[7.738s][info][gc,heap,exit] Shenandoah Heap
[7.738s][info][gc,heap,exit]  1984M max, 1984M soft max, 133M committed, 37354K used
[7.738s][info][gc,heap,exit]  3969 x 512K regions
[7.738s][info][gc,heap,exit] Status: cancelled
[7.738s][info][gc,heap,exit] Reserved region:
[7.738s][info][gc,heap,exit]  - [0x0000000083f80000, 0x0000000100000000) 
[7.738s][info][gc,heap,exit] Collection set:
[7.738s][info][gc,heap,exit]  - map (vanilla): 0x000000000001107f
[7.738s][info][gc,heap,exit]  - map (biased):  0x0000000000010000
[7.738s][info][gc,heap,exit] 
[7.738s][info][gc,heap,exit]  Metaspace       used 25445K, committed 25856K, reserved 1114112K
[7.738s][info][gc,heap,exit]   class space    used 2926K, committed 3072K, reserved 1048576K
[7.738s][info][gc,stats    ] 
[7.738s][info][gc,stats    ] GC STATISTICS:
[7.738s][info][gc,stats    ]   "(G)" (gross) pauses include VM time: time to notify and block threads, do the pre-
[7.738s][info][gc,stats    ]         and post-safepoint housekeeping. Use -Xlog:safepoint+stats to dissect.
[7.738s][info][gc,stats    ]   "(N)" (net) pauses are the times spent in the actual GC code.
[7.738s][info][gc,stats    ]   "a" is average time for each phase, look at levels to see if average makes sense.
[7.738s][info][gc,stats    ]   "lvls" are quantiles: 0% (minimum), 25%, 50% (median), 75%, 100% (maximum).
[7.738s][info][gc,stats    ] 
[7.738s][info][gc,stats    ]   All times are wall-clock times, except per-root-class counters, that are sum over
[7.738s][info][gc,stats    ]   all workers. Dividing the <total> over the root stage time estimates parallelism.
[7.738s][info][gc,stats    ] 
[7.738s][info][gc,stats    ]   Pacing delays are measured from entering the pacing code till exiting it. Therefore,
[7.738s][info][gc,stats    ]   observed pacing delays may be higher than the threshold when paced thread spent more
[7.738s][info][gc,stats    ]   time in the pacing code. It usually happens when thread is de-scheduled while paced,
[7.738s][info][gc,stats    ]   OS takes longer to unblock the thread, or JVM experiences an STW pause.
[7.738s][info][gc,stats    ] 
[7.738s][info][gc,stats    ]   Higher delay would prevent application outpacing the GC, but it will hide the GC latencies
[7.738s][info][gc,stats    ]   from the STW pause times. Pacing affects the individual threads, and so it would also be
[7.738s][info][gc,stats    ]   invisible to the usual profiling tools, but would add up to end-to-end application latency.
[7.738s][info][gc,stats    ]   Raise max pacing delay with care.
[7.738s][info][gc,stats    ] 
[7.738s][info][gc,stats    ] Concurrent Reset               =    0.000 s (a =      486 us) (n =     1) (lvls, us =      484,      484,      484,      484,      486)
[7.738s][info][gc,stats    ] Pause Init Mark (G)            =    0.001 s (a =      791 us) (n =     1) (lvls, us =      789,      789,      789,      789,      791)
[7.738s][info][gc,stats    ] Pause Init Mark (N)            =    0.001 s (a =      560 us) (n =     1) (lvls, us =      559,      559,      559,      559,      560)
[7.738s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       35 us) (n =     1) (lvls, us =       35,       35,       35,       35,       35)
[7.738s][info][gc,stats    ] Concurrent Mark Roots          =    0.004 s (a =     3691 us) (n =     1) (lvls, us =     3672,     3672,     3672,     3672,     3691)
[7.738s][info][gc,stats    ]   CMR: <total>                 =    0.004 s (a =     3899 us) (n =     1) (lvls, us =     3887,     3887,     3887,     3887,     3899)
[7.738s][info][gc,stats    ]   CMR: Thread Roots            =    0.001 s (a =     1295 us) (n =     1) (lvls, us =     1289,     1289,     1289,     1289,     1295)
[7.738s][info][gc,stats    ]   CMR: VM Strong Roots         =    0.001 s (a =      775 us) (n =     1) (lvls, us =      773,      773,      773,      773,      775)
[7.738s][info][gc,stats    ]   CMR: CLDG Roots              =    0.002 s (a =     1829 us) (n =     1) (lvls, us =     1816,     1816,     1816,     1816,     1829)
[7.738s][info][gc,stats    ] Concurrent Marking             =    0.011 s (a =    11324 us) (n =     1) (lvls, us =    11133,    11133,    11133,    11133,    11324)
[7.738s][info][gc,stats    ] Pause Final Mark (G)           =    0.002 s (a =     1989 us) (n =     1) (lvls, us =     1973,     1973,     1973,     1973,     1989)
[7.738s][info][gc,stats    ] Pause Final Mark (N)           =    0.002 s (a =     1861 us) (n =     1) (lvls, us =     1855,     1855,     1855,     1855,     1861)
[7.738s][info][gc,stats    ]   Finish Mark                  =    0.001 s (a =     1179 us) (n =     1) (lvls, us =     1172,     1172,     1172,     1172,     1179)
[7.738s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       35 us) (n =     1) (lvls, us =       35,       35,       35,       35,       35)
[7.738s][info][gc,stats    ]   Choose Collection Set        =    0.000 s (a =      273 us) (n =     1) (lvls, us =      271,      271,      271,      271,      273)
[7.738s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       39 us) (n =     1) (lvls, us =       38,       38,       38,       38,       39)
[7.738s][info][gc,stats    ] Concurrent Thread Roots        =    0.000 s (a =      268 us) (n =     1) (lvls, us =      268,      268,      268,      268,      268)
[7.738s][info][gc,stats    ]   CTR: <total>                 =    0.000 s (a =      266 us) (n =     1) (lvls, us =      266,      266,      266,      266,      266)
[7.738s][info][gc,stats    ]   CTR: Thread Roots            =    0.000 s (a =      266 us) (n =     1) (lvls, us =      266,      266,      266,      266,      266)
[7.738s][info][gc,stats    ] Concurrent Weak References     =    0.001 s (a =      519 us) (n =     1) (lvls, us =      518,      518,      518,      518,      519)
[7.738s][info][gc,stats    ]   CWRF: <total>                =    0.000 s (a =      277 us) (n =     1) (lvls, us =      275,      275,      275,      275,      277)
[7.738s][info][gc,stats    ]   CWRF: Weak References        =    0.000 s (a =      277 us) (n =     1) (lvls, us =      275,      275,      275,      275,      277)
[7.738s][info][gc,stats    ] Concurrent Weak Roots          =    0.006 s (a =     5621 us) (n =     1) (lvls, us =     5605,     5605,     5605,     5605,     5621)
[7.738s][info][gc,stats    ]   Roots                        =    0.005 s (a =     5233 us) (n =     1) (lvls, us =     5215,     5215,     5215,     5215,     5233)
[7.738s][info][gc,stats    ]     CWR: <total>               =    0.010 s (a =     9532 us) (n =     1) (lvls, us =     9531,     9531,     9531,     9531,     9532)
[7.738s][info][gc,stats    ]     CWR: Code Cache Roots      =    0.001 s (a =      825 us) (n =     1) (lvls, us =      824,      824,      824,      824,      825)
[7.739s][info][gc,stats    ]     CWR: VM Weak Roots         =    0.009 s (a =     8693 us) (n =     1) (lvls, us =     8691,     8691,     8691,     8691,     8693)
[7.739s][info][gc,stats    ]     CWR: CLDG Roots            =    0.000 s (a =       14 us) (n =     1) (lvls, us =       14,       14,       14,       14,       14)
[7.739s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =      250 us) (n =     1) (lvls, us =      248,      248,      248,      248,      250)
[7.739s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =      102 us) (n =     1) (lvls, us =      102,      102,      102,      102,      102)
[7.739s][info][gc,stats    ] Concurrent Class Unloading     =    0.007 s (a =     7425 us) (n =     1) (lvls, us =     7422,     7422,     7422,     7422,     7425)
[7.739s][info][gc,stats    ]   Unlink Stale                 =    0.003 s (a =     3488 us) (n =     1) (lvls, us =     3477,     3477,     3477,     3477,     3488)
[7.739s][info][gc,stats    ]     System Dictionary          =    0.000 s (a =       50 us) (n =     1) (lvls, us =       50,       50,       50,       50,       50)
[7.739s][info][gc,stats    ]     Weak Class Links           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[7.739s][info][gc,stats    ]     Code Roots                 =    0.003 s (a =     3436 us) (n =     1) (lvls, us =     3418,     3418,     3418,     3418,     3436)
[7.739s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =       46 us) (n =     1) (lvls, us =       46,       46,       46,       46,       46)
[7.739s][info][gc,stats    ]   Purge Unlinked               =    0.003 s (a =     3322 us) (n =     1) (lvls, us =     3320,     3320,     3320,     3320,     3322)
[7.739s][info][gc,stats    ]     Code Roots                 =    0.003 s (a =     3313 us) (n =     1) (lvls, us =     3301,     3301,     3301,     3301,     3313)
[7.739s][info][gc,stats    ]     CLDG                       =    0.000 s (a =        8 us) (n =     1) (lvls, us =        8,        8,        8,        8,        8)
[7.739s][info][gc,stats    ]     Exception Caches           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[7.739s][info][gc,stats    ] Concurrent Strong Roots        =    0.001 s (a =     1474 us) (n =     1) (lvls, us =     1465,     1465,     1465,     1465,     1474)
[7.739s][info][gc,stats    ]   CSR: <total>                 =    0.001 s (a =     1298 us) (n =     1) (lvls, us =     1289,     1289,     1289,     1289,     1298)
[7.739s][info][gc,stats    ]   CSR: VM Strong Roots         =    0.000 s (a =       21 us) (n =     1) (lvls, us =       21,       21,       21,       21,       21)
[7.739s][info][gc,stats    ]   CSR: CLDG Roots              =    0.001 s (a =     1277 us) (n =     1) (lvls, us =     1270,     1270,     1270,     1270,     1277)
[7.739s][info][gc,stats    ] Concurrent Evacuation          =    0.005 s (a =     5390 us) (n =     1) (lvls, us =     5371,     5371,     5371,     5371,     5390)
[7.739s][info][gc,stats    ] Pause Init Update Refs (G)     =    0.000 s (a =      134 us) (n =     1) (lvls, us =      133,      133,      133,      133,      134)
[7.739s][info][gc,stats    ] Pause Init Update Refs (N)     =    0.000 s (a =       34 us) (n =     1) (lvls, us =       34,       34,       34,       34,       34)
[7.739s][info][gc,stats    ]   Manage GCLABs                =    0.000 s (a =        4 us) (n =     1) (lvls, us =        4,        4,        4,        4,        4)
[7.739s][info][gc,stats    ] Concurrent Update Refs         =    0.005 s (a =     4715 us) (n =     1) (lvls, us =     4707,     4707,     4707,     4707,     4715)
[7.739s][info][gc,stats    ] Concurrent Update Thread Roots =    0.001 s (a =      826 us) (n =     1) (lvls, us =      826,      826,      826,      826,      826)
[7.739s][info][gc,stats    ] Pause Final Update Refs (G)    =    0.000 s (a =      160 us) (n =     1) (lvls, us =      160,      160,      160,      160,      160)
[7.739s][info][gc,stats    ] Pause Final Update Refs (N)    =    0.000 s (a =       80 us) (n =     1) (lvls, us =       79,       79,       79,       79,       80)
[7.739s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       19 us) (n =     1) (lvls, us =       18,       18,       18,       18,       19)
[7.739s][info][gc,stats    ]   Trash Collection Set         =    0.000 s (a =        4 us) (n =     1) (lvls, us =        4,        4,        4,        4,        4)
[7.739s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       16 us) (n =     1) (lvls, us =       16,       16,       16,       16,       16)
[7.739s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =       72 us) (n =     1) (lvls, us =       72,       72,       72,       72,       72)
[7.739s][info][gc,stats    ] 
[7.739s][info][gc,stats    ] 
[7.739s][info][gc,stats    ] Under allocation pressure, concurrent cycles may cancel, and either continue cycle
[7.739s][info][gc,stats    ] under stop-the-world pause or result in stop-the-world Full GC. Increase heap size,
[7.739s][info][gc,stats    ] tune GC heuristics, set more aggressive pacing delay, or lower allocation rate
[7.739s][info][gc,stats    ] to avoid Degenerated and Full GC cycles.
[7.739s][info][gc,stats    ] 
[7.739s][info][gc,stats    ]     1 successful concurrent GCs
[7.739s][info][gc,stats    ]       0 invoked explicitly
[7.739s][info][gc,stats    ]       0 invoked implicitly
[7.739s][info][gc,stats    ] 
[7.739s][info][gc,stats    ]     0 Degenerated GCs
[7.739s][info][gc,stats    ]       0 caused by allocation failure
[7.739s][info][gc,stats    ]       0 upgraded to Full GC
[7.739s][info][gc,stats    ] 
[7.739s][info][gc,stats    ]     0 Full GCs
[7.739s][info][gc,stats    ]       0 invoked explicitly
[7.739s][info][gc,stats    ]       0 invoked implicitly
[7.739s][info][gc,stats    ]       0 caused by allocation failure
[7.739s][info][gc,stats    ]       0 upgraded from Degenerated GC
[7.739s][info][gc,stats    ] 
[7.739s][info][gc,stats    ] 
