[0.004s][info][gc] Heuristics ergonomically sets -XX:+ExplicitGCInvokesConcurrent
[0.004s][info][gc] Heuristics ergonomically sets -XX:+ShenandoahImplicitGCInvokesConcurrent
[0.004s][info][gc] Using Shenandoah
[0.005s][info][gc,ergo] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[0.005s][info][gc,init] Version: 21.0.7+6-Ubuntu-0ubuntu122.04 (release)
[0.005s][info][gc,init] CPUs: 4 total, 4 available
[0.005s][info][gc,init] Memory: 7937M
[0.005s][info][gc,init] Large Page Support: Disabled
[0.005s][info][gc,init] NUMA Support: Disabled
[0.005s][info][gc,init] Compressed Oops: Enabled (32-bit)
[0.005s][info][gc,init] Heap Min Capacity: 6656K
[0.005s][info][gc,init] Heap Initial Capacity: 127488K
[0.005s][info][gc,init] Heap Max Capacity: 2032128K
[0.005s][info][gc,init] Pre-touch: Disabled
[0.005s][info][gc,init] Mode: Snapshot-At-The-Beginning (SATB)
[0.005s][info][gc,init] Heuristics: Adaptive
[0.005s][info][gc,init] Heap Region Count: 3969
[0.005s][info][gc,init] Heap Region Size: 512K
[0.005s][info][gc,init] TLAB Size Max: 512K
[0.005s][info][gc,init] Humongous Object Threshold: 512K
[0.005s][info][gc,init] Parallel Workers: 8
[0.005s][info][gc,init] Concurrent Workers: 2
[0.013s][info][gc,metaspace] CDS archive(s) mapped at: [0x00007fe2ab000000-0x00007fe2abc97000-0x00007fe2abc97000), size 13201408, SharedBaseAddress: 0x00007fe2ab000000, ArchiveRelocationMode: 1.
[0.013s][info][gc,metaspace] Compressed class space mapped at: 0x00007fe2ac000000-0x00007fe2ec000000, reserved size: 1073741824
[0.013s][info][gc,metaspace] Narrow klass base: 0x00007fe2ab000000, Narrow klass shift: 0, Narrow klass range: 0x100000000
[1.733s][info][gc          ] Trigger: Metadata GC Threshold
[1.733s][info][gc,ergo     ] Free: 1746M, Max: 512K regular, 1746M humongous, Frag: 0% external, 0% internal; Reserve: 101888K, Max: 512K
[1.733s][info][gc,start    ] GC(0) Concurrent reset
[1.733s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reset
[1.733s][info][gc,ergo     ] GC(0) Pacer for Reset. Non-Taxable: 1984M
[1.736s][info][gc          ] GC(0) Concurrent reset 2.888ms
[1.736s][info][gc,start    ] GC(0) Pause Init Mark (unload classes)
[1.736s][info][gc,task     ] GC(0) Using 8 of 8 workers for init marking
[1.737s][info][gc,ergo     ] GC(0) Pacer for Mark. Expected Live: 198M, Free: 1746M, Non-Taxable: 174M, Alloc Tax Rate: 0.1x
[1.737s][info][gc          ] GC(0) Pause Init Mark (unload classes) 0.432ms
[1.737s][info][gc,start    ] GC(0) Concurrent marking roots
[1.737s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking roots
[1.738s][info][gc          ] GC(0) Concurrent marking roots 1.496ms
[1.738s][info][gc,start    ] GC(0) Concurrent marking (unload classes)
[1.738s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking
[1.796s][info][gc          ] GC(0) Concurrent marking (unload classes) 57.518ms
[1.796s][info][gc,start    ] GC(0) Pause Final Mark (unload classes)
[1.796s][info][gc,task     ] GC(0) Using 8 of 8 workers for final marking
[1.797s][info][gc,ergo     ] GC(0) Adaptive CSet Selection. Target Free: 281M, Actual Free: 1845M, Max CSet: 84672K, Min Garbage: 0B
[1.797s][info][gc,ergo     ] GC(0) Collectable Garbage: 73064K (98%), Immediate: 4847K (6%), CSet: 68217K (92%)
[1.797s][info][gc,ergo     ] GC(0) Pacer for Evacuation. Used CSet: 76288K, Free: 1746M, Non-Taxable: 174M, Alloc Tax Rate: 1.1x
[1.797s][info][gc          ] GC(0) Pause Final Mark (unload classes) 1.330ms
[1.797s][info][gc,start    ] GC(0) Concurrent thread roots
[1.797s][info][gc,task     ] GC(0) Using 2 of 8 workers for Concurrent thread roots
[1.798s][info][gc          ] GC(0) Concurrent thread roots 0.343ms
[1.798s][info][gc,start    ] GC(0) Concurrent weak references
[1.798s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak references
[1.798s][info][gc,ref      ] GC(0) Encountered references: Soft: 3957, Weak: 2100, Final: 4, Phantom: 821
[1.798s][info][gc,ref      ] GC(0) Discovered  references: Soft: 0, Weak: 1178, Final: 0, Phantom: 812
[1.798s][info][gc,ref      ] GC(0) Enqueued    references: Soft: 0, Weak: 501, Final: 0, Phantom: 231
[1.798s][info][gc          ] GC(0) Concurrent weak references 0.446ms
[1.798s][info][gc,start    ] GC(0) Concurrent weak roots
[1.798s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak root
[1.800s][info][gc          ] GC(0) Concurrent weak roots 1.773ms
[1.800s][info][gc,start    ] GC(0) Concurrent cleanup
[1.800s][info][gc          ] GC(0) Concurrent cleanup 142M->137M(145M) 0.103ms
[1.800s][info][gc,ergo     ] GC(0) Free: 1745M, Max: 512K regular, 1740M humongous, Frag: 1% external, 0% internal; Reserve: 101238K, Max: 512K
[1.800s][info][gc,start    ] GC(0) Concurrent class unloading
[1.800s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent class unloading
[1.805s][info][gc          ] GC(0) Concurrent class unloading 5.384ms
[1.805s][info][gc,start    ] GC(0) Concurrent strong roots
[1.805s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent strong root
[1.807s][info][gc          ] GC(0) Concurrent strong roots 1.415ms
[1.807s][info][gc,start    ] GC(0) Concurrent evacuation
[1.807s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent evacuation
[1.816s][info][gc          ] GC(0) Concurrent evacuation 8.722ms
[1.816s][info][gc,start    ] GC(0) Pause Init Update Refs
[1.816s][info][gc,ergo     ] GC(0) Pacer for Update Refs. Used: 147M, Free: 1744M, Non-Taxable: 174M, Alloc Tax Rate: 1.1x
[1.816s][info][gc          ] GC(0) Pause Init Update Refs 0.047ms
[1.816s][info][gc,start    ] GC(0) Concurrent update references
[1.816s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reference update
[1.841s][info][gc          ] GC(0) Concurrent update references 25.357ms
[1.841s][info][gc,start    ] GC(0) Concurrent update thread roots
[1.843s][info][gc          ] GC(0) Concurrent update thread roots 1.452ms
[1.843s][info][gc,start    ] GC(0) Pause Final Update Refs
[1.843s][info][gc,task     ] GC(0) Using 8 of 8 workers for final reference update
[1.843s][info][gc          ] GC(0) Pause Final Update Refs 0.082ms
[1.843s][info][gc,start    ] GC(0) Concurrent cleanup
[1.843s][info][gc          ] GC(0) Concurrent cleanup 148M->74M(153M) 0.062ms
[1.843s][info][gc,ergo     ] Free: 1808M, Max: 512K regular, 1731M humongous, Frag: 5% external, 0% internal; Reserve: 101888K, Max: 512K
[1.843s][info][gc,stats    ] 
[1.843s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[1.843s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[1.843s][info][gc,stats    ] 
[1.843s][info][gc,stats    ] Concurrent Reset                   2919 us
[1.843s][info][gc,stats    ] Pause Init Mark (G)                 632 us
[1.843s][info][gc,stats    ] Pause Init Mark (N)                 444 us
[1.843s][info][gc,stats    ]   Update Region States               29 us
[1.843s][info][gc,stats    ] Concurrent Mark Roots              1537 us, parallelism: 1.82x
[1.843s][info][gc,stats    ]   CMR: <total>                     2798 us
[1.843s][info][gc,stats    ]   CMR: Thread Roots                1075 us, workers (us): 915, 160, ---, ---, ---, ---, ---, ---, 
[1.843s][info][gc,stats    ]   CMR: VM Strong Roots              621 us, workers (us): 494, 127, ---, ---, ---, ---, ---, ---, 
[1.843s][info][gc,stats    ]   CMR: CLDG Roots                  1103 us, workers (us): ---, 1103, ---, ---, ---, ---, ---, ---, 
[1.843s][info][gc,stats    ] Concurrent Marking                57545 us
[1.843s][info][gc,stats    ] Pause Final Mark (G)               1521 us
[1.843s][info][gc,stats    ] Pause Final Mark (N)               1338 us
[1.843s][info][gc,stats    ]   Finish Mark                      1148 us
[1.843s][info][gc,stats    ]   Update Region States               38 us
[1.843s][info][gc,stats    ]   Choose Collection Set              81 us
[1.843s][info][gc,stats    ]   Rebuild Free Set                   17 us
[1.843s][info][gc,stats    ] Concurrent Thread Roots             357 us, parallelism: 1.16x
[1.843s][info][gc,stats    ]   CTR: <total>                      414 us
[1.843s][info][gc,stats    ]   CTR: Thread Roots                 414 us, workers (us): 309, 105, ---, ---, ---, ---, ---, ---, 
[1.843s][info][gc,stats    ] Concurrent Weak References          455 us, parallelism: 0.86x
[1.843s][info][gc,stats    ]   CWRF: <total>                     393 us
[1.843s][info][gc,stats    ]   CWRF: Weak References             393 us, workers (us): 376,  17, ---, ---, ---, ---, ---, ---, 
[1.843s][info][gc,stats    ] Concurrent Weak Roots              1823 us
[1.843s][info][gc,stats    ]   Roots                            1409 us, parallelism: 1.92x
[1.843s][info][gc,stats    ]     CWR: <total>                   2700 us
[1.843s][info][gc,stats    ]     CWR: Code Cache Roots           714 us, workers (us): 389, 325, ---, ---, ---, ---, ---, ---, 
[1.843s][info][gc,stats    ]     CWR: VM Weak Roots             1969 us, workers (us): 965, 1004, ---, ---, ---, ---, ---, ---, 
[1.843s][info][gc,stats    ]     CWR: CLDG Roots                  17 us, workers (us):  17, ---, ---, ---, ---, ---, ---, ---, 
[1.843s][info][gc,stats    ]   Rendezvous                        345 us
[1.843s][info][gc,stats    ] Concurrent Cleanup                  113 us
[1.843s][info][gc,stats    ] Concurrent Class Unloading         5401 us
[1.843s][info][gc,stats    ]   Unlink Stale                     2339 us
[1.843s][info][gc,stats    ]     System Dictionary               944 us
[1.843s][info][gc,stats    ]     Weak Class Links                  0 us
[1.843s][info][gc,stats    ]     Code Roots                     1394 us
[1.843s][info][gc,stats    ]   Rendezvous                         40 us
[1.843s][info][gc,stats    ]   Purge Unlinked                   2983 us
[1.843s][info][gc,stats    ]     Code Roots                     2973 us
[1.843s][info][gc,stats    ]     CLDG                             10 us
[1.843s][info][gc,stats    ]     Exception Caches                  0 us
[1.843s][info][gc,stats    ] Concurrent Strong Roots            1427 us, parallelism: 0.96x
[1.843s][info][gc,stats    ]   CSR: <total>                     1367 us
[1.843s][info][gc,stats    ]   CSR: VM Strong Roots               22 us, workers (us):  20,   3, ---, ---, ---, ---, ---, ---, 
[1.843s][info][gc,stats    ]   CSR: CLDG Roots                  1345 us, workers (us): 1345, ---, ---, ---, ---, ---, ---, ---, 
[1.843s][info][gc,stats    ] Concurrent Evacuation              8742 us
[1.843s][info][gc,stats    ] Pause Init Update Refs (G)          376 us
[1.843s][info][gc,stats    ] Pause Init Update Refs (N)           56 us
[1.843s][info][gc,stats    ]   Manage GCLABs                       6 us
[1.843s][info][gc,stats    ] Concurrent Update Refs            25392 us
[1.843s][info][gc,stats    ] Concurrent Update Thread Roots     1472 us
[1.843s][info][gc,stats    ] Pause Final Update Refs (G)         129 us
[1.844s][info][gc,stats    ] Pause Final Update Refs (N)          92 us
[1.844s][info][gc,stats    ]   Update Region States               37 us
[1.844s][info][gc,stats    ]   Trash Collection Set                4 us
[1.844s][info][gc,stats    ]   Rebuild Free Set                   18 us
[1.844s][info][gc,stats    ] Concurrent Cleanup                   71 us
[1.844s][info][gc,stats    ] 
[1.844s][info][gc,stats    ] Allocation pacing accrued:
[1.844s][info][gc,stats    ]       0 of  1839 ms (  0.0%): <total>
[1.844s][info][gc,stats    ]       0 of  1839 ms (  0.0%): <average total>
[1.844s][info][gc,stats    ] 
[1.844s][info][gc,metaspace] Metaspace: 21236K(21632K)->22910K(23296K) NonClass: 18885K(19072K)->20347K(20544K) Class: 2350K(2560K)->2562K(2752K)
[1.844s][info][gc,ergo     ] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[6.082s][info][gc          ] Cancelling GC: Stopping VM
[6.082s][info][gc,heap,exit] Heap
[6.082s][info][gc,heap,exit] Shenandoah Heap
[6.082s][info][gc,heap,exit]  1984M max, 1984M soft max, 153M committed, 85483K used
[6.082s][info][gc,heap,exit]  3969 x 512K regions
[6.082s][info][gc,heap,exit] Status: cancelled
[6.082s][info][gc,heap,exit] Reserved region:
[6.083s][info][gc,heap,exit]  - [0x0000000083f80000, 0x0000000100000000) 
[6.083s][info][gc,heap,exit] Collection set:
[6.083s][info][gc,heap,exit]  - map (vanilla): 0x000000000001107f
[6.083s][info][gc,heap,exit]  - map (biased):  0x0000000000010000
[6.083s][info][gc,heap,exit] 
[6.083s][info][gc,heap,exit]  Metaspace       used 25070K, committed 25408K, reserved 1114112K
[6.083s][info][gc,heap,exit]   class space    used 2775K, committed 2880K, reserved 1048576K
[6.083s][info][gc,stats    ] 
[6.083s][info][gc,stats    ] GC STATISTICS:
[6.083s][info][gc,stats    ]   "(G)" (gross) pauses include VM time: time to notify and block threads, do the pre-
[6.083s][info][gc,stats    ]         and post-safepoint housekeeping. Use -Xlog:safepoint+stats to dissect.
[6.083s][info][gc,stats    ]   "(N)" (net) pauses are the times spent in the actual GC code.
[6.083s][info][gc,stats    ]   "a" is average time for each phase, look at levels to see if average makes sense.
[6.083s][info][gc,stats    ]   "lvls" are quantiles: 0% (minimum), 25%, 50% (median), 75%, 100% (maximum).
[6.083s][info][gc,stats    ] 
[6.083s][info][gc,stats    ]   All times are wall-clock times, except per-root-class counters, that are sum over
[6.083s][info][gc,stats    ]   all workers. Dividing the <total> over the root stage time estimates parallelism.
[6.083s][info][gc,stats    ] 
[6.083s][info][gc,stats    ]   Pacing delays are measured from entering the pacing code till exiting it. Therefore,
[6.083s][info][gc,stats    ]   observed pacing delays may be higher than the threshold when paced thread spent more
[6.083s][info][gc,stats    ]   time in the pacing code. It usually happens when thread is de-scheduled while paced,
[6.083s][info][gc,stats    ]   OS takes longer to unblock the thread, or JVM experiences an STW pause.
[6.083s][info][gc,stats    ] 
[6.083s][info][gc,stats    ]   Higher delay would prevent application outpacing the GC, but it will hide the GC latencies
[6.083s][info][gc,stats    ]   from the STW pause times. Pacing affects the individual threads, and so it would also be
[6.083s][info][gc,stats    ]   invisible to the usual profiling tools, but would add up to end-to-end application latency.
[6.083s][info][gc,stats    ]   Raise max pacing delay with care.
[6.083s][info][gc,stats    ] 
[6.083s][info][gc,stats    ] Concurrent Reset               =    0.003 s (a =     2919 us) (n =     1) (lvls, us =     2910,     2910,     2910,     2910,     2919)
[6.083s][info][gc,stats    ] Pause Init Mark (G)            =    0.001 s (a =      632 us) (n =     1) (lvls, us =      631,      631,      631,      631,      632)
[6.083s][info][gc,stats    ] Pause Init Mark (N)            =    0.000 s (a =      444 us) (n =     1) (lvls, us =      443,      443,      443,      443,      444)
[6.083s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       29 us) (n =     1) (lvls, us =       29,       29,       29,       29,       29)
[6.083s][info][gc,stats    ] Concurrent Mark Roots          =    0.002 s (a =     1537 us) (n =     1) (lvls, us =     1523,     1523,     1523,     1523,     1537)
[6.083s][info][gc,stats    ]   CMR: <total>                 =    0.003 s (a =     2798 us) (n =     1) (lvls, us =     2793,     2793,     2793,     2793,     2798)
[6.083s][info][gc,stats    ]   CMR: Thread Roots            =    0.001 s (a =     1075 us) (n =     1) (lvls, us =     1074,     1074,     1074,     1074,     1075)
[6.083s][info][gc,stats    ]   CMR: VM Strong Roots         =    0.001 s (a =      621 us) (n =     1) (lvls, us =      619,      619,      619,      619,      621)
[6.083s][info][gc,stats    ]   CMR: CLDG Roots              =    0.001 s (a =     1103 us) (n =     1) (lvls, us =     1094,     1094,     1094,     1094,     1103)
[6.083s][info][gc,stats    ] Concurrent Marking             =    0.058 s (a =    57545 us) (n =     1) (lvls, us =    57422,    57422,    57422,    57422,    57545)
[6.083s][info][gc,stats    ] Pause Final Mark (G)           =    0.002 s (a =     1521 us) (n =     1) (lvls, us =     1504,     1504,     1504,     1504,     1521)
[6.083s][info][gc,stats    ] Pause Final Mark (N)           =    0.001 s (a =     1338 us) (n =     1) (lvls, us =     1328,     1328,     1328,     1328,     1338)
[6.083s][info][gc,stats    ]   Finish Mark                  =    0.001 s (a =     1148 us) (n =     1) (lvls, us =     1133,     1133,     1133,     1133,     1148)
[6.083s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       38 us) (n =     1) (lvls, us =       38,       38,       38,       38,       38)
[6.083s][info][gc,stats    ]   Choose Collection Set        =    0.000 s (a =       81 us) (n =     1) (lvls, us =       81,       81,       81,       81,       81)
[6.083s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       17 us) (n =     1) (lvls, us =       17,       17,       17,       17,       17)
[6.083s][info][gc,stats    ] Concurrent Thread Roots        =    0.000 s (a =      357 us) (n =     1) (lvls, us =      355,      355,      355,      355,      357)
[6.083s][info][gc,stats    ]   CTR: <total>                 =    0.000 s (a =      414 us) (n =     1) (lvls, us =      412,      412,      412,      412,      414)
[6.083s][info][gc,stats    ]   CTR: Thread Roots            =    0.000 s (a =      414 us) (n =     1) (lvls, us =      412,      412,      412,      412,      414)
[6.083s][info][gc,stats    ] Concurrent Weak References     =    0.000 s (a =      455 us) (n =     1) (lvls, us =      453,      453,      453,      453,      455)
[6.083s][info][gc,stats    ]   CWRF: <total>                =    0.000 s (a =      393 us) (n =     1) (lvls, us =      393,      393,      393,      393,      393)
[6.083s][info][gc,stats    ]   CWRF: Weak References        =    0.000 s (a =      393 us) (n =     1) (lvls, us =      393,      393,      393,      393,      393)
[6.084s][info][gc,stats    ] Concurrent Weak Roots          =    0.002 s (a =     1823 us) (n =     1) (lvls, us =     1816,     1816,     1816,     1816,     1823)
[6.084s][info][gc,stats    ]   Roots                        =    0.001 s (a =     1409 us) (n =     1) (lvls, us =     1406,     1406,     1406,     1406,     1409)
[6.084s][info][gc,stats    ]     CWR: <total>               =    0.003 s (a =     2700 us) (n =     1) (lvls, us =     2695,     2695,     2695,     2695,     2700)
[6.084s][info][gc,stats    ]     CWR: Code Cache Roots      =    0.001 s (a =      714 us) (n =     1) (lvls, us =      713,      713,      713,      713,      714)
[6.084s][info][gc,stats    ]     CWR: VM Weak Roots         =    0.002 s (a =     1969 us) (n =     1) (lvls, us =     1953,     1953,     1953,     1953,     1969)
[6.084s][info][gc,stats    ]     CWR: CLDG Roots            =    0.000 s (a =       17 us) (n =     1) (lvls, us =       17,       17,       17,       17,       17)
[6.084s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =      345 us) (n =     1) (lvls, us =      344,      344,      344,      344,      345)
[6.084s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =      113 us) (n =     1) (lvls, us =      111,      111,      111,      111,      113)
[6.084s][info][gc,stats    ] Concurrent Class Unloading     =    0.005 s (a =     5401 us) (n =     1) (lvls, us =     5391,     5391,     5391,     5391,     5401)
[6.084s][info][gc,stats    ]   Unlink Stale                 =    0.002 s (a =     2339 us) (n =     1) (lvls, us =     2324,     2324,     2324,     2324,     2339)
[6.084s][info][gc,stats    ]     System Dictionary          =    0.001 s (a =      944 us) (n =     1) (lvls, us =      943,      943,      943,      943,      944)
[6.084s][info][gc,stats    ]     Weak Class Links           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[6.084s][info][gc,stats    ]     Code Roots                 =    0.001 s (a =     1394 us) (n =     1) (lvls, us =     1387,     1387,     1387,     1387,     1394)
[6.084s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =       40 us) (n =     1) (lvls, us =       40,       40,       40,       40,       40)
[6.084s][info][gc,stats    ]   Purge Unlinked               =    0.003 s (a =     2983 us) (n =     1) (lvls, us =     2969,     2969,     2969,     2969,     2983)
[6.084s][info][gc,stats    ]     Code Roots                 =    0.003 s (a =     2973 us) (n =     1) (lvls, us =     2969,     2969,     2969,     2969,     2973)
[6.084s][info][gc,stats    ]     CLDG                       =    0.000 s (a =       10 us) (n =     1) (lvls, us =       10,       10,       10,       10,       10)
[6.084s][info][gc,stats    ]     Exception Caches           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[6.084s][info][gc,stats    ] Concurrent Strong Roots        =    0.001 s (a =     1427 us) (n =     1) (lvls, us =     1426,     1426,     1426,     1426,     1427)
[6.084s][info][gc,stats    ]   CSR: <total>                 =    0.001 s (a =     1367 us) (n =     1) (lvls, us =     1348,     1348,     1348,     1348,     1367)
[6.084s][info][gc,stats    ]   CSR: VM Strong Roots         =    0.000 s (a =       22 us) (n =     1) (lvls, us =       22,       22,       22,       22,       22)
[6.084s][info][gc,stats    ]   CSR: CLDG Roots              =    0.001 s (a =     1345 us) (n =     1) (lvls, us =     1328,     1328,     1328,     1328,     1345)
[6.084s][info][gc,stats    ] Concurrent Evacuation          =    0.009 s (a =     8742 us) (n =     1) (lvls, us =     8730,     8730,     8730,     8730,     8742)
[6.084s][info][gc,stats    ] Pause Init Update Refs (G)     =    0.000 s (a =      376 us) (n =     1) (lvls, us =      375,      375,      375,      375,      376)
[6.084s][info][gc,stats    ] Pause Init Update Refs (N)     =    0.000 s (a =       56 us) (n =     1) (lvls, us =       56,       56,       56,       56,       56)
[6.084s][info][gc,stats    ]   Manage GCLABs                =    0.000 s (a =        6 us) (n =     1) (lvls, us =        6,        6,        6,        6,        6)
[6.084s][info][gc,stats    ] Concurrent Update Refs         =    0.025 s (a =    25392 us) (n =     1) (lvls, us =    25391,    25391,    25391,    25391,    25392)
[6.084s][info][gc,stats    ] Concurrent Update Thread Roots =    0.001 s (a =     1472 us) (n =     1) (lvls, us =     1465,     1465,     1465,     1465,     1472)
[6.084s][info][gc,stats    ] Pause Final Update Refs (G)    =    0.000 s (a =      129 us) (n =     1) (lvls, us =      129,      129,      129,      129,      129)
[6.084s][info][gc,stats    ] Pause Final Update Refs (N)    =    0.000 s (a =       92 us) (n =     1) (lvls, us =       92,       92,       92,       92,       92)
[6.084s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       37 us) (n =     1) (lvls, us =       37,       37,       37,       37,       37)
[6.084s][info][gc,stats    ]   Trash Collection Set         =    0.000 s (a =        4 us) (n =     1) (lvls, us =        4,        4,        4,        4,        4)
[6.084s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       18 us) (n =     1) (lvls, us =       18,       18,       18,       18,       18)
[6.084s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =       71 us) (n =     1) (lvls, us =       71,       71,       71,       71,       71)
[6.084s][info][gc,stats    ] 
[6.084s][info][gc,stats    ] 
[6.084s][info][gc,stats    ] Under allocation pressure, concurrent cycles may cancel, and either continue cycle
[6.084s][info][gc,stats    ] under stop-the-world pause or result in stop-the-world Full GC. Increase heap size,
[6.084s][info][gc,stats    ] tune GC heuristics, set more aggressive pacing delay, or lower allocation rate
[6.084s][info][gc,stats    ] to avoid Degenerated and Full GC cycles.
[6.084s][info][gc,stats    ] 
[6.084s][info][gc,stats    ]     1 successful concurrent GCs
[6.084s][info][gc,stats    ]       0 invoked explicitly
[6.084s][info][gc,stats    ]       0 invoked implicitly
[6.084s][info][gc,stats    ] 
[6.084s][info][gc,stats    ]     0 Degenerated GCs
[6.084s][info][gc,stats    ]       0 caused by allocation failure
[6.084s][info][gc,stats    ]       0 upgraded to Full GC
[6.084s][info][gc,stats    ] 
[6.084s][info][gc,stats    ]     0 Full GCs
[6.084s][info][gc,stats    ]       0 invoked explicitly
[6.084s][info][gc,stats    ]       0 invoked implicitly
[6.084s][info][gc,stats    ]       0 caused by allocation failure
[6.084s][info][gc,stats    ]       0 upgraded from Degenerated GC
[6.084s][info][gc,stats    ] 
[6.084s][info][gc,stats    ] 
