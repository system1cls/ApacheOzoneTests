[0.008s][info][gc] Heuristics ergonomically sets -XX:+ExplicitGCInvokesConcurrent
[0.008s][info][gc] Heuristics ergonomically sets -XX:+ShenandoahImplicitGCInvokesConcurrent
[0.008s][info][gc] Using Shenandoah
[0.010s][info][gc,ergo] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[0.010s][info][gc,init] Version: 21.0.7+6-Ubuntu-0ubuntu122.04 (release)
[0.010s][info][gc,init] CPUs: 4 total, 4 available
[0.010s][info][gc,init] Memory: 7937M
[0.010s][info][gc,init] Large Page Support: Disabled
[0.010s][info][gc,init] NUMA Support: Disabled
[0.010s][info][gc,init] Compressed Oops: Enabled (32-bit)
[0.010s][info][gc,init] Heap Min Capacity: 6656K
[0.010s][info][gc,init] Heap Initial Capacity: 127488K
[0.010s][info][gc,init] Heap Max Capacity: 2032128K
[0.010s][info][gc,init] Pre-touch: Disabled
[0.010s][info][gc,init] Mode: Snapshot-At-The-Beginning (SATB)
[0.010s][info][gc,init] Heuristics: Adaptive
[0.010s][info][gc,init] Heap Region Count: 3969
[0.010s][info][gc,init] Heap Region Size: 512K
[0.010s][info][gc,init] TLAB Size Max: 512K
[0.010s][info][gc,init] Humongous Object Threshold: 512K
[0.010s][info][gc,init] Parallel Workers: 8
[0.010s][info][gc,init] Concurrent Workers: 2
[0.022s][info][gc,metaspace] CDS archive(s) mapped at: [0x00007f33b3000000-0x00007f33b3c97000-0x00007f33b3c97000), size 13201408, SharedBaseAddress: 0x00007f33b3000000, ArchiveRelocationMode: 1.
[0.022s][info][gc,metaspace] Compressed class space mapped at: 0x00007f33b4000000-0x00007f33f4000000, reserved size: 1073741824
[0.022s][info][gc,metaspace] Narrow klass base: 0x00007f33b3000000, Narrow klass shift: 0, Narrow klass range: 0x100000000
[1.370s][info][gc          ] Trigger: Metadata GC Threshold
[1.370s][info][gc,ergo     ] Free: 1790M, Max: 512K regular, 1790M humongous, Frag: 0% external, 0% internal; Reserve: 101888K, Max: 512K
[1.370s][info][gc,start    ] GC(0) Concurrent reset
[1.370s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reset
[1.370s][info][gc,ergo     ] GC(0) Pacer for Reset. Non-Taxable: 1984M
[1.370s][info][gc          ] GC(0) Concurrent reset 0.389ms
[1.371s][info][gc,start    ] GC(0) Pause Init Mark (unload classes)
[1.371s][info][gc,task     ] GC(0) Using 8 of 8 workers for init marking
[1.371s][info][gc,ergo     ] GC(0) Pacer for Mark. Expected Live: 198M, Free: 1790M, Non-Taxable: 179M, Alloc Tax Rate: 0.1x
[1.371s][info][gc          ] GC(0) Pause Init Mark (unload classes) 0.556ms
[1.373s][info][gc,start    ] GC(0) Concurrent marking roots
[1.373s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking roots
[1.377s][info][gc          ] GC(0) Concurrent marking roots 4.105ms
[1.377s][info][gc,start    ] GC(0) Concurrent marking (unload classes)
[1.377s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking
[1.387s][info][gc          ] GC(0) Concurrent marking (unload classes) 9.916ms
[1.387s][info][gc,start    ] GC(0) Pause Final Mark (unload classes)
[1.387s][info][gc,task     ] GC(0) Using 8 of 8 workers for final marking
[1.387s][info][gc,ergo     ] GC(0) Adaptive CSet Selection. Target Free: 281M, Actual Free: 1893M, Max CSet: 84672K, Min Garbage: 0B
[1.387s][info][gc,ergo     ] GC(0) Collectable Garbage: 81574K (98%), Immediate: 5343K (6%), CSet: 76230K (92%)
[1.387s][info][gc,ergo     ] GC(0) Pacer for Evacuation. Used CSet: 83968K, Free: 1794M, Non-Taxable: 179M, Alloc Tax Rate: 1.1x
[1.387s][info][gc          ] GC(0) Pause Final Mark (unload classes) 0.451ms
[1.387s][info][gc,start    ] GC(0) Concurrent thread roots
[1.387s][info][gc,task     ] GC(0) Using 2 of 8 workers for Concurrent thread roots
[1.388s][info][gc          ] GC(0) Concurrent thread roots 0.280ms
[1.388s][info][gc,start    ] GC(0) Concurrent weak references
[1.388s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak references
[1.388s][info][gc,ref      ] GC(0) Encountered references: Soft: 3956, Weak: 2133, Final: 20, Phantom: 795
[1.388s][info][gc,ref      ] GC(0) Discovered  references: Soft: 0, Weak: 796, Final: 0, Phantom: 484
[1.388s][info][gc,ref      ] GC(0) Enqueued    references: Soft: 0, Weak: 482, Final: 0, Phantom: 316
[1.388s][info][gc          ] GC(0) Concurrent weak references 0.423ms
[1.388s][info][gc,start    ] GC(0) Concurrent weak roots
[1.388s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak root
[1.396s][info][gc          ] GC(0) Concurrent weak roots 7.623ms
[1.396s][info][gc,start    ] GC(0) Concurrent cleanup
[1.396s][info][gc          ] GC(0) Concurrent cleanup 97M->91M(125M) 0.074ms
[1.396s][info][gc,ergo     ] GC(0) Free: 1793M, Max: 512K regular, 1788M humongous, Frag: 1% external, 0% internal; Reserve: 101126K, Max: 512K
[1.396s][info][gc,start    ] GC(0) Concurrent class unloading
[1.396s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent class unloading
[1.401s][info][gc          ] GC(0) Concurrent class unloading 4.779ms
[1.401s][info][gc,start    ] GC(0) Concurrent strong roots
[1.401s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent strong root
[1.402s][info][gc          ] GC(0) Concurrent strong roots 1.420ms
[1.402s][info][gc,start    ] GC(0) Concurrent evacuation
[1.402s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent evacuation
[1.410s][info][gc          ] GC(0) Concurrent evacuation 7.875ms
[1.410s][info][gc,start    ] GC(0) Pause Init Update Refs
[1.410s][info][gc,ergo     ] GC(0) Pacer for Update Refs. Used: 100M, Free: 1793M, Non-Taxable: 179M, Alloc Tax Rate: 1.1x
[1.410s][info][gc          ] GC(0) Pause Init Update Refs 0.046ms
[1.410s][info][gc,start    ] GC(0) Concurrent update references
[1.410s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reference update
[1.415s][info][gc          ] GC(0) Concurrent update references 4.887ms
[1.415s][info][gc,start    ] GC(0) Concurrent update thread roots
[1.415s][info][gc          ] GC(0) Concurrent update thread roots 0.303ms
[1.415s][info][gc,start    ] GC(0) Pause Final Update Refs
[1.415s][info][gc,task     ] GC(0) Using 8 of 8 workers for final reference update
[1.416s][info][gc          ] GC(0) Pause Final Update Refs 0.075ms
[1.416s][info][gc,start    ] GC(0) Concurrent cleanup
[1.416s][info][gc          ] GC(0) Concurrent cleanup 100M->18M(133M) 0.081ms
[1.416s][info][gc,ergo     ] Free: 1866M, Max: 512K regular, 1779M humongous, Frag: 5% external, 0% internal; Reserve: 101888K, Max: 512K
[1.416s][info][gc,stats    ] 
[1.416s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[1.416s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[1.416s][info][gc,stats    ] 
[1.416s][info][gc,stats    ] Concurrent Reset                    415 us
[1.416s][info][gc,stats    ] Pause Init Mark (G)                2102 us
[1.416s][info][gc,stats    ] Pause Init Mark (N)                 583 us
[1.416s][info][gc,stats    ]   Update Region States               28 us
[1.416s][info][gc,stats    ] Concurrent Mark Roots              4135 us, parallelism: 1.02x
[1.416s][info][gc,stats    ]   CMR: <total>                     4237 us
[1.416s][info][gc,stats    ]   CMR: Thread Roots                1462 us, workers (us): 1174, 288, ---, ---, ---, ---, ---, ---, 
[1.416s][info][gc,stats    ]   CMR: VM Strong Roots              749 us, workers (us): 749,   0, ---, ---, ---, ---, ---, ---, 
[1.416s][info][gc,stats    ]   CMR: CLDG Roots                  2026 us, workers (us): 2026, ---, ---, ---, ---, ---, ---, ---, 
[1.416s][info][gc,stats    ] Concurrent Marking                 9944 us
[1.416s][info][gc,stats    ] Pause Final Mark (G)                650 us
[1.416s][info][gc,stats    ] Pause Final Mark (N)                465 us
[1.416s][info][gc,stats    ]   Finish Mark                       239 us
[1.416s][info][gc,stats    ]   Update Region States               24 us
[1.416s][info][gc,stats    ]   Choose Collection Set              95 us
[1.416s][info][gc,stats    ]   Rebuild Free Set                   27 us
[1.416s][info][gc,stats    ] Concurrent Thread Roots             294 us, parallelism: 0.76x
[1.416s][info][gc,stats    ]   CTR: <total>                      223 us
[1.416s][info][gc,stats    ]   CTR: Thread Roots                 223 us, workers (us): 222,   0, ---, ---, ---, ---, ---, ---, 
[1.416s][info][gc,stats    ] Concurrent Weak References          435 us, parallelism: 0.73x
[1.416s][info][gc,stats    ]   CWRF: <total>                     319 us
[1.416s][info][gc,stats    ]   CWRF: Weak References             319 us, workers (us): 319,   0, ---, ---, ---, ---, ---, ---, 
[1.416s][info][gc,stats    ] Concurrent Weak Roots              7652 us
[1.416s][info][gc,stats    ]   Roots                            5408 us, parallelism: 0.61x
[1.416s][info][gc,stats    ]     CWR: <total>                   3274 us
[1.416s][info][gc,stats    ]     CWR: Code Cache Roots           980 us, workers (us): 980,   0, ---, ---, ---, ---, ---, ---, 
[1.416s][info][gc,stats    ]     CWR: VM Weak Roots             2283 us, workers (us): 2282,   1, ---, ---, ---, ---, ---, ---, 
[1.416s][info][gc,stats    ]     CWR: CLDG Roots                  12 us, workers (us):  12, ---, ---, ---, ---, ---, ---, ---, 
[1.416s][info][gc,stats    ]   Rendezvous                       2189 us
[1.416s][info][gc,stats    ] Concurrent Cleanup                   89 us
[1.416s][info][gc,stats    ] Concurrent Class Unloading         4801 us
[1.416s][info][gc,stats    ]   Unlink Stale                     1772 us
[1.416s][info][gc,stats    ]     System Dictionary                28 us
[1.416s][info][gc,stats    ]     Weak Class Links                  0 us
[1.416s][info][gc,stats    ]     Code Roots                     1743 us
[1.416s][info][gc,stats    ]   Rendezvous                         35 us
[1.416s][info][gc,stats    ]   Purge Unlinked                   2949 us
[1.416s][info][gc,stats    ]     Code Roots                     2911 us
[1.416s][info][gc,stats    ]     CLDG                             38 us
[1.416s][info][gc,stats    ]     Exception Caches                  0 us
[1.416s][info][gc,stats    ] Concurrent Strong Roots            1441 us, parallelism: 0.95x
[1.416s][info][gc,stats    ]   CSR: <total>                     1374 us
[1.416s][info][gc,stats    ]   CSR: VM Strong Roots               23 us, workers (us):  17,   6, ---, ---, ---, ---, ---, ---, 
[1.416s][info][gc,stats    ]   CSR: CLDG Roots                  1351 us, workers (us): ---, 1351, ---, ---, ---, ---, ---, ---, 
[1.416s][info][gc,stats    ] Concurrent Evacuation              7897 us
[1.416s][info][gc,stats    ] Pause Init Update Refs (G)          174 us
[1.416s][info][gc,stats    ] Pause Init Update Refs (N)           55 us
[1.416s][info][gc,stats    ]   Manage GCLABs                       4 us
[1.416s][info][gc,stats    ] Concurrent Update Refs             4918 us
[1.416s][info][gc,stats    ] Concurrent Update Thread Roots      316 us
[1.416s][info][gc,stats    ] Pause Final Update Refs (G)         246 us
[1.416s][info][gc,stats    ] Pause Final Update Refs (N)          85 us
[1.416s][info][gc,stats    ]   Update Region States               21 us
[1.416s][info][gc,stats    ]   Trash Collection Set                3 us
[1.416s][info][gc,stats    ]   Rebuild Free Set                   16 us
[1.416s][info][gc,stats    ] Concurrent Cleanup                   99 us
[1.416s][info][gc,stats    ] 
[1.416s][info][gc,stats    ] Allocation pacing accrued:
[1.416s][info][gc,stats    ]       0 of  1407 ms (  0.0%): <total>
[1.416s][info][gc,stats    ]       0 of  1407 ms (  0.0%): <average total>
[1.416s][info][gc,stats    ] 
[1.417s][info][gc,metaspace] Metaspace: 21259K(21632K)->21418K(21824K) NonClass: 18921K(19136K)->19048K(19264K) Class: 2338K(2496K)->2369K(2560K)
[1.417s][info][gc,ergo     ] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[7.904s][info][gc          ] Cancelling GC: Stopping VM
[7.912s][info][gc,heap,exit] Heap
[7.912s][info][gc,heap,exit] Shenandoah Heap
[7.912s][info][gc,heap,exit]  1984M max, 1984M soft max, 133M committed, 38442K used
[7.912s][info][gc,heap,exit]  3969 x 512K regions
[7.912s][info][gc,heap,exit] Status: cancelled
[7.912s][info][gc,heap,exit] Reserved region:
[7.912s][info][gc,heap,exit]  - [0x0000000083f80000, 0x0000000100000000) 
[7.912s][info][gc,heap,exit] Collection set:
[7.912s][info][gc,heap,exit]  - map (vanilla): 0x000000000001107f
[7.912s][info][gc,heap,exit]  - map (biased):  0x0000000000010000
[7.912s][info][gc,heap,exit] 
[7.912s][info][gc,heap,exit]  Metaspace       used 25426K, committed 25728K, reserved 1114112K
[7.912s][info][gc,heap,exit]   class space    used 2924K, committed 3072K, reserved 1048576K
[7.912s][info][gc,stats    ] 
[7.912s][info][gc,stats    ] GC STATISTICS:
[7.912s][info][gc,stats    ]   "(G)" (gross) pauses include VM time: time to notify and block threads, do the pre-
[7.912s][info][gc,stats    ]         and post-safepoint housekeeping. Use -Xlog:safepoint+stats to dissect.
[7.912s][info][gc,stats    ]   "(N)" (net) pauses are the times spent in the actual GC code.
[7.912s][info][gc,stats    ]   "a" is average time for each phase, look at levels to see if average makes sense.
[7.912s][info][gc,stats    ]   "lvls" are quantiles: 0% (minimum), 25%, 50% (median), 75%, 100% (maximum).
[7.912s][info][gc,stats    ] 
[7.912s][info][gc,stats    ]   All times are wall-clock times, except per-root-class counters, that are sum over
[7.912s][info][gc,stats    ]   all workers. Dividing the <total> over the root stage time estimates parallelism.
[7.912s][info][gc,stats    ] 
[7.912s][info][gc,stats    ]   Pacing delays are measured from entering the pacing code till exiting it. Therefore,
[7.912s][info][gc,stats    ]   observed pacing delays may be higher than the threshold when paced thread spent more
[7.912s][info][gc,stats    ]   time in the pacing code. It usually happens when thread is de-scheduled while paced,
[7.912s][info][gc,stats    ]   OS takes longer to unblock the thread, or JVM experiences an STW pause.
[7.912s][info][gc,stats    ] 
[7.912s][info][gc,stats    ]   Higher delay would prevent application outpacing the GC, but it will hide the GC latencies
[7.913s][info][gc,stats    ]   from the STW pause times. Pacing affects the individual threads, and so it would also be
[7.913s][info][gc,stats    ]   invisible to the usual profiling tools, but would add up to end-to-end application latency.
[7.913s][info][gc,stats    ]   Raise max pacing delay with care.
[7.913s][info][gc,stats    ] 
[7.913s][info][gc,stats    ] Concurrent Reset               =    0.000 s (a =      415 us) (n =     1) (lvls, us =      414,      414,      414,      414,      415)
[7.913s][info][gc,stats    ] Pause Init Mark (G)            =    0.002 s (a =     2102 us) (n =     1) (lvls, us =     2090,     2090,     2090,     2090,     2102)
[7.913s][info][gc,stats    ] Pause Init Mark (N)            =    0.001 s (a =      583 us) (n =     1) (lvls, us =      582,      582,      582,      582,      583)
[7.913s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       28 us) (n =     1) (lvls, us =       28,       28,       28,       28,       28)
[7.913s][info][gc,stats    ] Concurrent Mark Roots          =    0.004 s (a =     4135 us) (n =     1) (lvls, us =     4121,     4121,     4121,     4121,     4135)
[7.913s][info][gc,stats    ]   CMR: <total>                 =    0.004 s (a =     4237 us) (n =     1) (lvls, us =     4219,     4219,     4219,     4219,     4237)
[7.913s][info][gc,stats    ]   CMR: Thread Roots            =    0.001 s (a =     1462 us) (n =     1) (lvls, us =     1445,     1445,     1445,     1445,     1462)
[7.913s][info][gc,stats    ]   CMR: VM Strong Roots         =    0.001 s (a =      749 us) (n =     1) (lvls, us =      748,      748,      748,      748,      749)
[7.913s][info][gc,stats    ]   CMR: CLDG Roots              =    0.002 s (a =     2026 us) (n =     1) (lvls, us =     2012,     2012,     2012,     2012,     2026)
[7.913s][info][gc,stats    ] Concurrent Marking             =    0.010 s (a =     9944 us) (n =     1) (lvls, us =     9941,     9941,     9941,     9941,     9944)
[7.913s][info][gc,stats    ] Pause Final Mark (G)           =    0.001 s (a =      650 us) (n =     1) (lvls, us =      650,      650,      650,      650,      650)
[7.913s][info][gc,stats    ] Pause Final Mark (N)           =    0.000 s (a =      465 us) (n =     1) (lvls, us =      465,      465,      465,      465,      465)
[7.913s][info][gc,stats    ]   Finish Mark                  =    0.000 s (a =      239 us) (n =     1) (lvls, us =      238,      238,      238,      238,      239)
[7.913s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       24 us) (n =     1) (lvls, us =       24,       24,       24,       24,       24)
[7.913s][info][gc,stats    ]   Choose Collection Set        =    0.000 s (a =       95 us) (n =     1) (lvls, us =       95,       95,       95,       95,       95)
[7.913s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       27 us) (n =     1) (lvls, us =       27,       27,       27,       27,       27)
[7.913s][info][gc,stats    ] Concurrent Thread Roots        =    0.000 s (a =      294 us) (n =     1) (lvls, us =      293,      293,      293,      293,      294)
[7.913s][info][gc,stats    ]   CTR: <total>                 =    0.000 s (a =      223 us) (n =     1) (lvls, us =      221,      221,      221,      221,      223)
[7.913s][info][gc,stats    ]   CTR: Thread Roots            =    0.000 s (a =      223 us) (n =     1) (lvls, us =      221,      221,      221,      221,      223)
[7.913s][info][gc,stats    ] Concurrent Weak References     =    0.000 s (a =      435 us) (n =     1) (lvls, us =      434,      434,      434,      434,      435)
[7.913s][info][gc,stats    ]   CWRF: <total>                =    0.000 s (a =      319 us) (n =     1) (lvls, us =      318,      318,      318,      318,      319)
[7.913s][info][gc,stats    ]   CWRF: Weak References        =    0.000 s (a =      319 us) (n =     1) (lvls, us =      318,      318,      318,      318,      319)
[7.913s][info][gc,stats    ] Concurrent Weak Roots          =    0.008 s (a =     7652 us) (n =     1) (lvls, us =     7637,     7637,     7637,     7637,     7652)
[7.913s][info][gc,stats    ]   Roots                        =    0.005 s (a =     5408 us) (n =     1) (lvls, us =     5391,     5391,     5391,     5391,     5408)
[7.913s][info][gc,stats    ]     CWR: <total>               =    0.003 s (a =     3274 us) (n =     1) (lvls, us =     3262,     3262,     3262,     3262,     3274)
[7.913s][info][gc,stats    ]     CWR: Code Cache Roots      =    0.001 s (a =      980 us) (n =     1) (lvls, us =      979,      979,      979,      979,      980)
[7.913s][info][gc,stats    ]     CWR: VM Weak Roots         =    0.002 s (a =     2283 us) (n =     1) (lvls, us =     2266,     2266,     2266,     2266,     2283)
[7.914s][info][gc,stats    ]     CWR: CLDG Roots            =    0.000 s (a =       12 us) (n =     1) (lvls, us =       12,       12,       12,       12,       12)
[7.914s][info][gc,stats    ]   Rendezvous                   =    0.002 s (a =     2189 us) (n =     1) (lvls, us =     2188,     2188,     2188,     2188,     2189)
[7.914s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =       89 us) (n =     1) (lvls, us =       89,       89,       89,       89,       89)
[7.914s][info][gc,stats    ] Concurrent Class Unloading     =    0.005 s (a =     4801 us) (n =     1) (lvls, us =     4785,     4785,     4785,     4785,     4801)
[7.914s][info][gc,stats    ]   Unlink Stale                 =    0.002 s (a =     1772 us) (n =     1) (lvls, us =     1758,     1758,     1758,     1758,     1772)
[7.914s][info][gc,stats    ]     System Dictionary          =    0.000 s (a =       28 us) (n =     1) (lvls, us =       28,       28,       28,       28,       28)
[7.914s][info][gc,stats    ]     Weak Class Links           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[7.914s][info][gc,stats    ]     Code Roots                 =    0.002 s (a =     1743 us) (n =     1) (lvls, us =     1738,     1738,     1738,     1738,     1743)
[7.914s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =       35 us) (n =     1) (lvls, us =       35,       35,       35,       35,       35)
[7.914s][info][gc,stats    ]   Purge Unlinked               =    0.003 s (a =     2949 us) (n =     1) (lvls, us =     2949,     2949,     2949,     2949,     2949)
[7.914s][info][gc,stats    ]     Code Roots                 =    0.003 s (a =     2911 us) (n =     1) (lvls, us =     2910,     2910,     2910,     2910,     2911)
[7.914s][info][gc,stats    ]     CLDG                       =    0.000 s (a =       38 us) (n =     1) (lvls, us =       38,       38,       38,       38,       38)
[7.914s][info][gc,stats    ]     Exception Caches           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[7.914s][info][gc,stats    ] Concurrent Strong Roots        =    0.001 s (a =     1441 us) (n =     1) (lvls, us =     1426,     1426,     1426,     1426,     1441)
[7.914s][info][gc,stats    ]   CSR: <total>                 =    0.001 s (a =     1374 us) (n =     1) (lvls, us =     1367,     1367,     1367,     1367,     1374)
[7.914s][info][gc,stats    ]   CSR: VM Strong Roots         =    0.000 s (a =       23 us) (n =     1) (lvls, us =       23,       23,       23,       23,       23)
[7.914s][info][gc,stats    ]   CSR: CLDG Roots              =    0.001 s (a =     1351 us) (n =     1) (lvls, us =     1348,     1348,     1348,     1348,     1351)
[7.914s][info][gc,stats    ] Concurrent Evacuation          =    0.008 s (a =     7897 us) (n =     1) (lvls, us =     7891,     7891,     7891,     7891,     7897)
[7.914s][info][gc,stats    ] Pause Init Update Refs (G)     =    0.000 s (a =      174 us) (n =     1) (lvls, us =      174,      174,      174,      174,      174)
[7.914s][info][gc,stats    ] Pause Init Update Refs (N)     =    0.000 s (a =       55 us) (n =     1) (lvls, us =       55,       55,       55,       55,       55)
[7.914s][info][gc,stats    ]   Manage GCLABs                =    0.000 s (a =        4 us) (n =     1) (lvls, us =        4,        4,        4,        4,        4)
[7.914s][info][gc,stats    ] Concurrent Update Refs         =    0.005 s (a =     4918 us) (n =     1) (lvls, us =     4902,     4902,     4902,     4902,     4918)
[7.914s][info][gc,stats    ] Concurrent Update Thread Roots =    0.000 s (a =      316 us) (n =     1) (lvls, us =      314,      314,      314,      314,      316)
[7.914s][info][gc,stats    ] Pause Final Update Refs (G)    =    0.000 s (a =      246 us) (n =     1) (lvls, us =      244,      244,      244,      244,      246)
[7.914s][info][gc,stats    ] Pause Final Update Refs (N)    =    0.000 s (a =       85 us) (n =     1) (lvls, us =       85,       85,       85,       85,       85)
[7.914s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       21 us) (n =     1) (lvls, us =       21,       21,       21,       21,       21)
[7.914s][info][gc,stats    ]   Trash Collection Set         =    0.000 s (a =        3 us) (n =     1) (lvls, us =        3,        3,        3,        3,        3)
[7.914s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       16 us) (n =     1) (lvls, us =       16,       16,       16,       16,       16)
[7.914s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =       99 us) (n =     1) (lvls, us =       99,       99,       99,       99,       99)
[7.914s][info][gc,stats    ] 
[7.914s][info][gc,stats    ] 
[7.914s][info][gc,stats    ] Under allocation pressure, concurrent cycles may cancel, and either continue cycle
[7.914s][info][gc,stats    ] under stop-the-world pause or result in stop-the-world Full GC. Increase heap size,
[7.914s][info][gc,stats    ] tune GC heuristics, set more aggressive pacing delay, or lower allocation rate
[7.914s][info][gc,stats    ] to avoid Degenerated and Full GC cycles.
[7.914s][info][gc,stats    ] 
[7.914s][info][gc,stats    ]     1 successful concurrent GCs
[7.914s][info][gc,stats    ]       0 invoked explicitly
[7.914s][info][gc,stats    ]       0 invoked implicitly
[7.915s][info][gc,stats    ] 
[7.915s][info][gc,stats    ]     0 Degenerated GCs
[7.915s][info][gc,stats    ]       0 caused by allocation failure
[7.915s][info][gc,stats    ]       0 upgraded to Full GC
[7.915s][info][gc,stats    ] 
[7.915s][info][gc,stats    ]     0 Full GCs
[7.915s][info][gc,stats    ]       0 invoked explicitly
[7.915s][info][gc,stats    ]       0 invoked implicitly
[7.915s][info][gc,stats    ]       0 caused by allocation failure
[7.915s][info][gc,stats    ]       0 upgraded from Degenerated GC
[7.915s][info][gc,stats    ] 
[7.915s][info][gc,stats    ] 
