[0.004s][info][gc] Heuristics ergonomically sets -XX:+ExplicitGCInvokesConcurrent
[0.004s][info][gc] Heuristics ergonomically sets -XX:+ShenandoahImplicitGCInvokesConcurrent
[0.004s][info][gc] Using Shenandoah
[0.005s][info][gc,ergo] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[0.005s][info][gc,init] Version: 21.0.7+6-Ubuntu-0ubuntu122.04 (release)
[0.005s][info][gc,init] CPUs: 4 total, 4 available
[0.005s][info][gc,init] Memory: 7937M
[0.005s][info][gc,init] Large Page Support: Disabled
[0.005s][info][gc,init] NUMA Support: Disabled
[0.005s][info][gc,init] Compressed Oops: Enabled (32-bit)
[0.005s][info][gc,init] Heap Min Capacity: 6656K
[0.005s][info][gc,init] Heap Initial Capacity: 127488K
[0.005s][info][gc,init] Heap Max Capacity: 2032128K
[0.005s][info][gc,init] Pre-touch: Disabled
[0.005s][info][gc,init] Mode: Snapshot-At-The-Beginning (SATB)
[0.005s][info][gc,init] Heuristics: Adaptive
[0.005s][info][gc,init] Heap Region Count: 3969
[0.005s][info][gc,init] Heap Region Size: 512K
[0.005s][info][gc,init] TLAB Size Max: 512K
[0.005s][info][gc,init] Humongous Object Threshold: 512K
[0.005s][info][gc,init] Parallel Workers: 8
[0.005s][info][gc,init] Concurrent Workers: 2
[0.013s][info][gc,metaspace] CDS archive(s) mapped at: [0x00007efcbb000000-0x00007efcbbc97000-0x00007efcbbc97000), size 13201408, SharedBaseAddress: 0x00007efcbb000000, ArchiveRelocationMode: 1.
[0.013s][info][gc,metaspace] Compressed class space mapped at: 0x00007efcbc000000-0x00007efcfc000000, reserved size: 1073741824
[0.013s][info][gc,metaspace] Narrow klass base: 0x00007efcbb000000, Narrow klass shift: 0, Narrow klass range: 0x100000000
[2.096s][info][gc          ] Trigger: Metadata GC Threshold
[2.096s][info][gc,ergo     ] Free: 1746M, Max: 512K regular, 1746M humongous, Frag: 0% external, 0% internal; Reserve: 101888K, Max: 512K
[2.096s][info][gc,start    ] GC(0) Concurrent reset
[2.096s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reset
[2.096s][info][gc,ergo     ] GC(0) Pacer for Reset. Non-Taxable: 1984M
[2.096s][info][gc          ] GC(0) Concurrent reset 0.470ms
[2.097s][info][gc,start    ] GC(0) Pause Init Mark (unload classes)
[2.097s][info][gc,task     ] GC(0) Using 8 of 8 workers for init marking
[2.097s][info][gc,ergo     ] GC(0) Pacer for Mark. Expected Live: 198M, Free: 1746M, Non-Taxable: 174M, Alloc Tax Rate: 0.1x
[2.097s][info][gc          ] GC(0) Pause Init Mark (unload classes) 0.698ms
[2.097s][info][gc,start    ] GC(0) Concurrent marking roots
[2.097s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking roots
[2.100s][info][gc          ] GC(0) Concurrent marking roots 2.198ms
[2.100s][info][gc,start    ] GC(0) Concurrent marking (unload classes)
[2.100s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent marking
[2.146s][info][gc          ] GC(0) Concurrent marking (unload classes) 46.061ms
[2.146s][info][gc,start    ] GC(0) Pause Final Mark (unload classes)
[2.146s][info][gc,task     ] GC(0) Using 8 of 8 workers for final marking
[2.148s][info][gc,ergo     ] GC(0) Adaptive CSet Selection. Target Free: 281M, Actual Free: 1845M, Max CSet: 84672K, Min Garbage: 0B
[2.148s][info][gc,ergo     ] GC(0) Collectable Garbage: 72561K (98%), Immediate: 4335K (5%), CSet: 68226K (92%)
[2.148s][info][gc,ergo     ] GC(0) Pacer for Evacuation. Used CSet: 76800K, Free: 1746M, Non-Taxable: 174M, Alloc Tax Rate: 1.1x
[2.148s][info][gc          ] GC(0) Pause Final Mark (unload classes) 1.978ms
[2.148s][info][gc,start    ] GC(0) Concurrent thread roots
[2.148s][info][gc,task     ] GC(0) Using 2 of 8 workers for Concurrent thread roots
[2.148s][info][gc          ] GC(0) Concurrent thread roots 0.368ms
[2.148s][info][gc,start    ] GC(0) Concurrent weak references
[2.148s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak references
[2.149s][info][gc,ref      ] GC(0) Encountered references: Soft: 3958, Weak: 2100, Final: 4, Phantom: 820
[2.149s][info][gc,ref      ] GC(0) Discovered  references: Soft: 0, Weak: 1312, Final: 4, Phantom: 641
[2.149s][info][gc,ref      ] GC(0) Enqueued    references: Soft: 0, Weak: 499, Final: 0, Phantom: 230
[2.149s][info][gc          ] GC(0) Concurrent weak references 0.846ms
[2.149s][info][gc,start    ] GC(0) Concurrent weak roots
[2.149s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent weak root
[2.151s][info][gc          ] GC(0) Concurrent weak roots 1.887ms
[2.151s][info][gc,start    ] GC(0) Concurrent cleanup
[2.151s][info][gc          ] GC(0) Concurrent cleanup 142M->138M(145M) 0.119ms
[2.151s][info][gc,ergo     ] GC(0) Free: 1745M, Max: 512K regular, 1740M humongous, Frag: 1% external, 0% internal; Reserve: 101236K, Max: 512K
[2.151s][info][gc,start    ] GC(0) Concurrent class unloading
[2.151s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent class unloading
[2.158s][info][gc          ] GC(0) Concurrent class unloading 7.133ms
[2.158s][info][gc,start    ] GC(0) Concurrent strong roots
[2.158s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent strong root
[2.160s][info][gc          ] GC(0) Concurrent strong roots 1.761ms
[2.160s][info][gc,start    ] GC(0) Concurrent evacuation
[2.160s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent evacuation
[2.166s][info][gc          ] GC(0) Concurrent evacuation 6.080ms
[2.166s][info][gc,start    ] GC(0) Pause Init Update Refs
[2.166s][info][gc,ergo     ] GC(0) Pacer for Update Refs. Used: 147M, Free: 1744M, Non-Taxable: 174M, Alloc Tax Rate: 1.1x
[2.166s][info][gc          ] GC(0) Pause Init Update Refs 0.030ms
[2.166s][info][gc,start    ] GC(0) Concurrent update references
[2.166s][info][gc,task     ] GC(0) Using 2 of 8 workers for concurrent reference update
[2.183s][info][gc          ] GC(0) Concurrent update references 16.413ms
[2.183s][info][gc,start    ] GC(0) Concurrent update thread roots
[2.183s][info][gc          ] GC(0) Concurrent update thread roots 0.141ms
[2.183s][info][gc,start    ] GC(0) Pause Final Update Refs
[2.183s][info][gc,task     ] GC(0) Using 8 of 8 workers for final reference update
[2.183s][info][gc          ] GC(0) Pause Final Update Refs 0.078ms
[2.183s][info][gc,start    ] GC(0) Concurrent cleanup
[2.183s][info][gc          ] GC(0) Concurrent cleanup 147M->72M(154M) 0.056ms
[2.183s][info][gc,ergo     ] Free: 1809M, Max: 512K regular, 1731M humongous, Frag: 5% external, 0% internal; Reserve: 101888K, Max: 512K
[2.183s][info][gc,stats    ] 
[2.183s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[2.183s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[2.183s][info][gc,stats    ] 
[2.183s][info][gc,stats    ] Concurrent Reset                    497 us
[2.183s][info][gc,stats    ] Pause Init Mark (G)                 979 us
[2.183s][info][gc,stats    ] Pause Init Mark (N)                 723 us
[2.183s][info][gc,stats    ]   Update Region States               34 us
[2.183s][info][gc,stats    ] Concurrent Mark Roots              2231 us, parallelism: 1.66x
[2.183s][info][gc,stats    ]   CMR: <total>                     3710 us
[2.183s][info][gc,stats    ]   CMR: Thread Roots                1300 us, workers (us): 1300,   0, ---, ---, ---, ---, ---, ---, 
[2.183s][info][gc,stats    ]   CMR: VM Strong Roots              563 us, workers (us): 324, 239, ---, ---, ---, ---, ---, ---, 
[2.183s][info][gc,stats    ]   CMR: CLDG Roots                  1848 us, workers (us): ---, 1848, ---, ---, ---, ---, ---, ---, 
[2.183s][info][gc,stats    ] Concurrent Marking                46093 us
[2.183s][info][gc,stats    ] Pause Final Mark (G)               2101 us
[2.183s][info][gc,stats    ] Pause Final Mark (N)               1987 us
[2.183s][info][gc,stats    ]   Finish Mark                      1792 us
[2.183s][info][gc,stats    ]   Update Region States               42 us
[2.183s][info][gc,stats    ]   Choose Collection Set              88 us
[2.183s][info][gc,stats    ]   Rebuild Free Set                   19 us
[2.183s][info][gc,stats    ] Concurrent Thread Roots             384 us, parallelism: 1.27x
[2.183s][info][gc,stats    ]   CTR: <total>                      489 us
[2.183s][info][gc,stats    ]   CTR: Thread Roots                 489 us, workers (us): 334, 155, ---, ---, ---, ---, ---, ---, 
[2.183s][info][gc,stats    ] Concurrent Weak References          856 us, parallelism: 0.53x
[2.183s][info][gc,stats    ]   CWRF: <total>                     458 us
[2.183s][info][gc,stats    ]   CWRF: Weak References             458 us, workers (us): 152, 305, ---, ---, ---, ---, ---, ---, 
[2.183s][info][gc,stats    ] Concurrent Weak Roots              1908 us
[2.183s][info][gc,stats    ]   Roots                            1762 us, parallelism: 1.83x
[2.183s][info][gc,stats    ]     CWR: <total>                   3232 us
[2.183s][info][gc,stats    ]     CWR: Code Cache Roots          1067 us, workers (us): 519, 548, ---, ---, ---, ---, ---, ---, 
[2.183s][info][gc,stats    ]     CWR: VM Weak Roots             2140 us, workers (us): 1081, 1058, ---, ---, ---, ---, ---, ---, 
[2.183s][info][gc,stats    ]     CWR: CLDG Roots                  25 us, workers (us):  25, ---, ---, ---, ---, ---, ---, ---, 
[2.183s][info][gc,stats    ]   Rendezvous                        107 us
[2.183s][info][gc,stats    ] Concurrent Cleanup                  128 us
[2.183s][info][gc,stats    ] Concurrent Class Unloading         7153 us
[2.183s][info][gc,stats    ]   Unlink Stale                     3652 us
[2.183s][info][gc,stats    ]     System Dictionary                41 us
[2.183s][info][gc,stats    ]     Weak Class Links                  0 us
[2.183s][info][gc,stats    ]     Code Roots                     3609 us
[2.183s][info][gc,stats    ]   Rendezvous                         21 us
[2.183s][info][gc,stats    ]   Purge Unlinked                   3427 us
[2.183s][info][gc,stats    ]     Code Roots                     3347 us
[2.183s][info][gc,stats    ]     CLDG                             80 us
[2.183s][info][gc,stats    ]     Exception Caches                  0 us
[2.183s][info][gc,stats    ] Concurrent Strong Roots            1784 us, parallelism: 0.77x
[2.183s][info][gc,stats    ]   CSR: <total>                     1371 us
[2.183s][info][gc,stats    ]   CSR: VM Strong Roots               21 us, workers (us):  14,   6, ---, ---, ---, ---, ---, ---, 
[2.183s][info][gc,stats    ]   CSR: CLDG Roots                  1350 us, workers (us): ---, 1350, ---, ---, ---, ---, ---, ---, 
[2.183s][info][gc,stats    ] Concurrent Evacuation              6105 us
[2.183s][info][gc,stats    ] Pause Init Update Refs (G)          140 us
[2.183s][info][gc,stats    ] Pause Init Update Refs (N)           39 us
[2.184s][info][gc,stats    ]   Manage GCLABs                       6 us
[2.184s][info][gc,stats    ] Concurrent Update Refs            16450 us
[2.184s][info][gc,stats    ] Concurrent Update Thread Roots      153 us
[2.184s][info][gc,stats    ] Pause Final Update Refs (G)         182 us
[2.184s][info][gc,stats    ] Pause Final Update Refs (N)          87 us
[2.184s][info][gc,stats    ]   Update Region States               33 us
[2.184s][info][gc,stats    ]   Trash Collection Set                3 us
[2.184s][info][gc,stats    ]   Rebuild Free Set                   20 us
[2.184s][info][gc,stats    ] Concurrent Cleanup                   64 us
[2.184s][info][gc,stats    ] 
[2.184s][info][gc,stats    ] Allocation pacing accrued:
[2.184s][info][gc,stats    ]       0 of  2179 ms (  0.0%): <total>
[2.184s][info][gc,stats    ]       0 of  2179 ms (  0.0%): <average total>
[2.184s][info][gc,stats    ] 
[2.184s][info][gc,metaspace] Metaspace: 21239K(21632K)->22170K(22464K) NonClass: 18887K(19072K)->19690K(19840K) Class: 2352K(2560K)->2480K(2624K)
[2.184s][info][gc,ergo     ] Pacer for Idle. Initial: 40642K, Alloc Tax Rate: 1.0x
[6.457s][info][gc          ] Cancelling GC: Stopping VM
[6.457s][info][gc,heap,exit] Heap
[6.457s][info][gc,heap,exit] Shenandoah Heap
[6.457s][info][gc,heap,exit]  1984M max, 1984M soft max, 154M committed, 86450K used
[6.457s][info][gc,heap,exit]  3969 x 512K regions
[6.457s][info][gc,heap,exit] Status: cancelled
[6.457s][info][gc,heap,exit] Reserved region:
[6.457s][info][gc,heap,exit]  - [0x0000000083f80000, 0x0000000100000000) 
[6.457s][info][gc,heap,exit] Collection set:
[6.457s][info][gc,heap,exit]  - map (vanilla): 0x000000000001107f
[6.457s][info][gc,heap,exit]  - map (biased):  0x0000000000010000
[6.457s][info][gc,heap,exit] 
[6.457s][info][gc,heap,exit]  Metaspace       used 25055K, committed 25344K, reserved 1114112K
[6.457s][info][gc,heap,exit]   class space    used 2775K, committed 2880K, reserved 1048576K
[6.457s][info][gc,stats    ] 
[6.457s][info][gc,stats    ] GC STATISTICS:
[6.457s][info][gc,stats    ]   "(G)" (gross) pauses include VM time: time to notify and block threads, do the pre-
[6.457s][info][gc,stats    ]         and post-safepoint housekeeping. Use -Xlog:safepoint+stats to dissect.
[6.457s][info][gc,stats    ]   "(N)" (net) pauses are the times spent in the actual GC code.
[6.457s][info][gc,stats    ]   "a" is average time for each phase, look at levels to see if average makes sense.
[6.457s][info][gc,stats    ]   "lvls" are quantiles: 0% (minimum), 25%, 50% (median), 75%, 100% (maximum).
[6.457s][info][gc,stats    ] 
[6.457s][info][gc,stats    ]   All times are wall-clock times, except per-root-class counters, that are sum over
[6.457s][info][gc,stats    ]   all workers. Dividing the <total> over the root stage time estimates parallelism.
[6.457s][info][gc,stats    ] 
[6.457s][info][gc,stats    ]   Pacing delays are measured from entering the pacing code till exiting it. Therefore,
[6.457s][info][gc,stats    ]   observed pacing delays may be higher than the threshold when paced thread spent more
[6.457s][info][gc,stats    ]   time in the pacing code. It usually happens when thread is de-scheduled while paced,
[6.457s][info][gc,stats    ]   OS takes longer to unblock the thread, or JVM experiences an STW pause.
[6.457s][info][gc,stats    ] 
[6.457s][info][gc,stats    ]   Higher delay would prevent application outpacing the GC, but it will hide the GC latencies
[6.457s][info][gc,stats    ]   from the STW pause times. Pacing affects the individual threads, and so it would also be
[6.457s][info][gc,stats    ]   invisible to the usual profiling tools, but would add up to end-to-end application latency.
[6.457s][info][gc,stats    ]   Raise max pacing delay with care.
[6.457s][info][gc,stats    ] 
[6.457s][info][gc,stats    ] Concurrent Reset               =    0.000 s (a =      497 us) (n =     1) (lvls, us =      496,      496,      496,      496,      497)
[6.457s][info][gc,stats    ] Pause Init Mark (G)            =    0.001 s (a =      979 us) (n =     1) (lvls, us =      979,      979,      979,      979,      979)
[6.457s][info][gc,stats    ] Pause Init Mark (N)            =    0.001 s (a =      723 us) (n =     1) (lvls, us =      723,      723,      723,      723,      723)
[6.457s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       34 us) (n =     1) (lvls, us =       33,       33,       33,       33,       34)
[6.457s][info][gc,stats    ] Concurrent Mark Roots          =    0.002 s (a =     2231 us) (n =     1) (lvls, us =     2227,     2227,     2227,     2227,     2231)
[6.457s][info][gc,stats    ]   CMR: <total>                 =    0.004 s (a =     3710 us) (n =     1) (lvls, us =     3691,     3691,     3691,     3691,     3710)
[6.457s][info][gc,stats    ]   CMR: Thread Roots            =    0.001 s (a =     1300 us) (n =     1) (lvls, us =     1289,     1289,     1289,     1289,     1300)
[6.457s][info][gc,stats    ]   CMR: VM Strong Roots         =    0.001 s (a =      563 us) (n =     1) (lvls, us =      563,      563,      563,      563,      563)
[6.457s][info][gc,stats    ]   CMR: CLDG Roots              =    0.002 s (a =     1848 us) (n =     1) (lvls, us =     1836,     1836,     1836,     1836,     1848)
[6.457s][info][gc,stats    ] Concurrent Marking             =    0.046 s (a =    46093 us) (n =     1) (lvls, us =    45898,    45898,    45898,    45898,    46093)
[6.457s][info][gc,stats    ] Pause Final Mark (G)           =    0.002 s (a =     2101 us) (n =     1) (lvls, us =     2090,     2090,     2090,     2090,     2101)
[6.457s][info][gc,stats    ] Pause Final Mark (N)           =    0.002 s (a =     1987 us) (n =     1) (lvls, us =     1973,     1973,     1973,     1973,     1987)
[6.457s][info][gc,stats    ]   Finish Mark                  =    0.002 s (a =     1792 us) (n =     1) (lvls, us =     1777,     1777,     1777,     1777,     1792)
[6.457s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       42 us) (n =     1) (lvls, us =       42,       42,       42,       42,       42)
[6.457s][info][gc,stats    ]   Choose Collection Set        =    0.000 s (a =       88 us) (n =     1) (lvls, us =       88,       88,       88,       88,       88)
[6.457s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       19 us) (n =     1) (lvls, us =       19,       19,       19,       19,       19)
[6.458s][info][gc,stats    ] Concurrent Thread Roots        =    0.000 s (a =      384 us) (n =     1) (lvls, us =      383,      383,      383,      383,      384)
[6.458s][info][gc,stats    ]   CTR: <total>                 =    0.000 s (a =      489 us) (n =     1) (lvls, us =      488,      488,      488,      488,      489)
[6.458s][info][gc,stats    ]   CTR: Thread Roots            =    0.000 s (a =      489 us) (n =     1) (lvls, us =      488,      488,      488,      488,      489)
[6.458s][info][gc,stats    ] Concurrent Weak References     =    0.001 s (a =      856 us) (n =     1) (lvls, us =      855,      855,      855,      855,      856)
[6.458s][info][gc,stats    ]   CWRF: <total>                =    0.000 s (a =      458 us) (n =     1) (lvls, us =      457,      457,      457,      457,      458)
[6.458s][info][gc,stats    ]   CWRF: Weak References        =    0.000 s (a =      458 us) (n =     1) (lvls, us =      457,      457,      457,      457,      458)
[6.458s][info][gc,stats    ] Concurrent Weak Roots          =    0.002 s (a =     1908 us) (n =     1) (lvls, us =     1895,     1895,     1895,     1895,     1908)
[6.458s][info][gc,stats    ]   Roots                        =    0.002 s (a =     1762 us) (n =     1) (lvls, us =     1758,     1758,     1758,     1758,     1762)
[6.458s][info][gc,stats    ]     CWR: <total>               =    0.003 s (a =     3232 us) (n =     1) (lvls, us =     3223,     3223,     3223,     3223,     3232)
[6.458s][info][gc,stats    ]     CWR: Code Cache Roots      =    0.001 s (a =     1067 us) (n =     1) (lvls, us =     1055,     1055,     1055,     1055,     1067)
[6.458s][info][gc,stats    ]     CWR: VM Weak Roots         =    0.002 s (a =     2140 us) (n =     1) (lvls, us =     2129,     2129,     2129,     2129,     2140)
[6.458s][info][gc,stats    ]     CWR: CLDG Roots            =    0.000 s (a =       25 us) (n =     1) (lvls, us =       25,       25,       25,       25,       25)
[6.458s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =      107 us) (n =     1) (lvls, us =      105,      105,      105,      105,      107)
[6.458s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =      128 us) (n =     1) (lvls, us =      127,      127,      127,      127,      128)
[6.458s][info][gc,stats    ] Concurrent Class Unloading     =    0.007 s (a =     7153 us) (n =     1) (lvls, us =     7148,     7148,     7148,     7148,     7153)
[6.458s][info][gc,stats    ]   Unlink Stale                 =    0.004 s (a =     3652 us) (n =     1) (lvls, us =     3633,     3633,     3633,     3633,     3652)
[6.458s][info][gc,stats    ]     System Dictionary          =    0.000 s (a =       41 us) (n =     1) (lvls, us =       41,       41,       41,       41,       41)
[6.458s][info][gc,stats    ]     Weak Class Links           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[6.458s][info][gc,stats    ]     Code Roots                 =    0.004 s (a =     3609 us) (n =     1) (lvls, us =     3594,     3594,     3594,     3594,     3609)
[6.458s][info][gc,stats    ]   Rendezvous                   =    0.000 s (a =       21 us) (n =     1) (lvls, us =       21,       21,       21,       21,       21)
[6.458s][info][gc,stats    ]   Purge Unlinked               =    0.003 s (a =     3427 us) (n =     1) (lvls, us =     3418,     3418,     3418,     3418,     3427)
[6.458s][info][gc,stats    ]     Code Roots                 =    0.003 s (a =     3347 us) (n =     1) (lvls, us =     3340,     3340,     3340,     3340,     3347)
[6.458s][info][gc,stats    ]     CLDG                       =    0.000 s (a =       80 us) (n =     1) (lvls, us =       80,       80,       80,       80,       80)
[6.458s][info][gc,stats    ]     Exception Caches           =    0.000 s (a =        0 us) (n =     1) (lvls, us =        0,        0,        0,        0,        0)
[6.458s][info][gc,stats    ] Concurrent Strong Roots        =    0.002 s (a =     1784 us) (n =     1) (lvls, us =     1777,     1777,     1777,     1777,     1784)
[6.458s][info][gc,stats    ]   CSR: <total>                 =    0.001 s (a =     1371 us) (n =     1) (lvls, us =     1367,     1367,     1367,     1367,     1371)
[6.458s][info][gc,stats    ]   CSR: VM Strong Roots         =    0.000 s (a =       21 us) (n =     1) (lvls, us =       21,       21,       21,       21,       21)
[6.458s][info][gc,stats    ]   CSR: CLDG Roots              =    0.001 s (a =     1350 us) (n =     1) (lvls, us =     1348,     1348,     1348,     1348,     1350)
[6.458s][info][gc,stats    ] Concurrent Evacuation          =    0.006 s (a =     6105 us) (n =     1) (lvls, us =     6094,     6094,     6094,     6094,     6105)
[6.458s][info][gc,stats    ] Pause Init Update Refs (G)     =    0.000 s (a =      140 us) (n =     1) (lvls, us =      139,      139,      139,      139,      140)
[6.458s][info][gc,stats    ] Pause Init Update Refs (N)     =    0.000 s (a =       39 us) (n =     1) (lvls, us =       39,       39,       39,       39,       39)
[6.458s][info][gc,stats    ]   Manage GCLABs                =    0.000 s (a =        6 us) (n =     1) (lvls, us =        6,        6,        6,        6,        6)
[6.458s][info][gc,stats    ] Concurrent Update Refs         =    0.016 s (a =    16450 us) (n =     1) (lvls, us =    16406,    16406,    16406,    16406,    16450)
[6.458s][info][gc,stats    ] Concurrent Update Thread Roots =    0.000 s (a =      153 us) (n =     1) (lvls, us =      152,      152,      152,      152,      153)
[6.458s][info][gc,stats    ] Pause Final Update Refs (G)    =    0.000 s (a =      182 us) (n =     1) (lvls, us =      182,      182,      182,      182,      182)
[6.458s][info][gc,stats    ] Pause Final Update Refs (N)    =    0.000 s (a =       87 us) (n =     1) (lvls, us =       87,       87,       87,       87,       87)
[6.458s][info][gc,stats    ]   Update Region States         =    0.000 s (a =       33 us) (n =     1) (lvls, us =       33,       33,       33,       33,       33)
[6.458s][info][gc,stats    ]   Trash Collection Set         =    0.000 s (a =        3 us) (n =     1) (lvls, us =        3,        3,        3,        3,        3)
[6.458s][info][gc,stats    ]   Rebuild Free Set             =    0.000 s (a =       20 us) (n =     1) (lvls, us =       20,       20,       20,       20,       20)
[6.458s][info][gc,stats    ] Concurrent Cleanup             =    0.000 s (a =       64 us) (n =     1) (lvls, us =       64,       64,       64,       64,       64)
[6.458s][info][gc,stats    ] 
[6.458s][info][gc,stats    ] 
[6.458s][info][gc,stats    ] Under allocation pressure, concurrent cycles may cancel, and either continue cycle
[6.458s][info][gc,stats    ] under stop-the-world pause or result in stop-the-world Full GC. Increase heap size,
[6.458s][info][gc,stats    ] tune GC heuristics, set more aggressive pacing delay, or lower allocation rate
[6.458s][info][gc,stats    ] to avoid Degenerated and Full GC cycles.
[6.458s][info][gc,stats    ] 
[6.458s][info][gc,stats    ]     1 successful concurrent GCs
[6.458s][info][gc,stats    ]       0 invoked explicitly
[6.458s][info][gc,stats    ]       0 invoked implicitly
[6.458s][info][gc,stats    ] 
[6.458s][info][gc,stats    ]     0 Degenerated GCs
[6.458s][info][gc,stats    ]       0 caused by allocation failure
[6.458s][info][gc,stats    ]       0 upgraded to Full GC
[6.458s][info][gc,stats    ] 
[6.458s][info][gc,stats    ]     0 Full GCs
[6.458s][info][gc,stats    ]       0 invoked explicitly
[6.458s][info][gc,stats    ]       0 invoked implicitly
[6.458s][info][gc,stats    ]       0 caused by allocation failure
[6.458s][info][gc,stats    ]       0 upgraded from Degenerated GC
[6.458s][info][gc,stats    ] 
[6.458s][info][gc,stats    ] 
